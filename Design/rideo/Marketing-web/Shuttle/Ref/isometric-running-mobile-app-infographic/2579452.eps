%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Isometric running mobile app infographic 2 up-01.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Ayib
%%CreationDate: 6/26/19
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.2 x567 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Isometric running mobile app infographic 2 up-01</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-06-26T17:13:02+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-06-26T17:13:02+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-06-26T17:13:02+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBIAEgAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABIAAAAAEA&#xA;AQEgAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9R4UOxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqNxeW1t/fPxq&#xA;pcChJIUgHoD3YYqoSazp0QcySMgQFnLRyACiepxNV+1w+Lj19sVbXWNPeUxRyNK6s6sI45HoYwC2&#xA;6qRtzGKrF17TGAIkcBk9QFopVHGjGtWUdQjEYqioLqGdpFiJb0mKs3FgvIEggMQA1CCDTpiqrirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqB1A6f60SXF0l&#xA;vPKjxQozRguHK8uKyBuX2R2wgFrnlhEgEgE8lEeXrTgsfqymFWD+lVOJcJ6ddl/l24j4fAYGx1v5&#xA;f0+zmjuIC6egWcLRX+0iq27Kz1IjHQ1xQStGhabcRRSqZP7lY45Ng/p8GFDyWoqJN9sURkCLCMji&#xA;gsEmlkuClsS0hEpQRx8mLMQ1AaEt+0T7YrKQiLJoK8c8Ejukciu8ZAkVWBKkio5AdKjfGlEwSQDy&#xA;Ul1C0eF5kctHHIYXKqxIkV/TIoBXZtv7MNFgM0SLHK6+N196+2uoLmL1YG5x8nTlQj4o2KMN6dGU&#xA;jEimUMgmLHL9Wy4TwGYwCRTOqh2i5DmFJoGK9aGmCk8Yur3X4snYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FUi8waDealOskEyxoLeSB426Sc5I24MeLEKQhqy/EDTLITAd&#xA;frNJLKbBr0ke+yNuXLbpug7jytqM08oaSE27PI6gs/IiW9iuiCONBRYyvX+yQyD8e5x56Ccidxw2&#xA;e/rOMu7uFLYvKF4hd+cPqLJCbZwWrHHHcyysq/D8NYpFWg+XTHxAiPZshvYuxXkBKR/3Jr7OShL5&#xA;R1CLT2ZHT64iIBLCW9ThHYfV2RTQH4pQGp3Hvth8QX+O9hLs6YhsfVty57Y+GvnuidN0i4uvKs2m&#xA;vAts8s5Lji8cbI0qyOY1ZUkVeJKqGXt4b4JSqVtuDTSnpzjI4bl5gc7NbA+QtCjyNqMTShLtLhZY&#xA;ypkl5IwlYFRMAoYcol48N999xh8UNP8AJUxdSErHXv8A53vj0/Qif8Kah60rLJDGGnaYupblKGvE&#xA;uB6nwjdEQgddz2GDxB+Pc2/yfOzuB6r9/rEt9ugH2rrfyrqEeow3D3AMMMrOiowUgG4km/ajY/EJ&#xA;OLBWXp1PZOQUmHZ8xMSJ2B/3xl/N63R3HxQ+u+XtZaTU9SjkSVriGeI20auZDEYwI1U1PI8owePE&#xA;dW3OGExsGvV6PLc8gIPEJCt7qtvu7up3Wz+WtRe+ESxxRrLHcPE68vStCzwBfSPEfH8DMBRepxEx&#xA;SJ6GZnVAWJe6O8eW3Pa+nVmWUO8dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWTXEEIUzSLGHZUTkQKuxoqivUk&#xA;4gMZTEeZpfiydirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVaZlRSzkKqirMTQADxxQTXNhnmH8ybCz5QaWovLkbGY/wByp+Y3f6NvfL4YCebo9Z23CHpx&#xA;+qXf0/axmVNf/wAUaJPrM/qT3FzC6Q1P7tRKopxACrv2GWjh4TTqZDN+YxnKbJkNu7f7HrWYb2bs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiriQMVar4Yq7kPpxVIf&#xA;MHnXR9GDRs/1i8HS2iIJB/y26L+v2yyGIydbrO1MWDb6pdw/T3MKurjzP5nlIvJRYaYAH4brGVK+&#xA;oKDrI3ActzT5ZeBGHLcuiyT1GrPqPBj+zv8Ajtv+pLbK+0+wWP6pEbrU2iltqKuwkaYlZQ3xciUo&#xA;vEDp3yZBPPk4mLLDHXCOLJRj8b5+e21d3Vk2geT9cvNQg1bWZjAsU/1qGzBJIcuJD8JJEYYjfvlU&#xA;8gAoO20nZuacxlymqlxCPxv4PQMxnpHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXHp1piqmXYjYfM4q0skYFWNKdSemKoSz8w6He3T2lpfwT3EYq0cbhjQdSKdad6YuTl0&#xA;WbHESnGQie8MLvPMeu+Yr2907S62cNrFLISm8snpmnHltx5HpTMkQEQCXkMuuzamcseP0iIPvNfr&#xA;YfpN9Y2sV8bqATzTQtHbs1DxdwV5UKt05cq1B29zl8gTTpNPlhAS4hZIofFPtN0LzJ5jhtlnZbPT&#xA;YI0iSVl4lkjXiKKKM/ViK7bnK5TjH3uxwaPUaoRv0wAAvyH3/tLPND8taLoqD6pHzuCKNcv8Uh+R&#xA;/ZHsMxp5DJ6PSdn4sA9I37+qcIDTfvkHNbJFaDc4q6pHXFW64q7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqtZmG4FRirlkQ96HuDiqwEyt4IPxxVVAp0xVifm26t7m6k0+4dotLsbc32&#xA;sNHs8iVIigBBH2ypJ9hTvhdz2diMYjJEXknLhhfQ9ZfBJbRtLvrnyxqGnWK2Eks1wVRVVW9CJGVu&#xA;XGlQxp9+Ll5RlxRzwyT8QCMf9MSK/Hklmgya/wDXNRg0WL057mekt89AkaIxPGrAipLb9/AZlz4a&#xA;FvlWj8fimMI3Mt5dwZXonkXTdPm+s35W+viS/wAQHAMd/hQ7ff8ARTKZ5idhyd1pOyMeM8U/XP7P&#xA;kyVJouXFowvhQZS7ddIRE4ZSKHquKq3NCnKvwnviqkrg1CGo/lP8MVXKRT4d27g9cVbDA/5LYquU&#xA;9j1xVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVpanQVrirTGkg8G2xV0iOTyVqHwxVS2kbg&#xA;6lX/AJhirReaBaFeS9mxVejPKKiQAeCjf8cVYlfCOy87vBeKJrHXLVABIOStJbFuUZB2pwauF3Mb&#xA;noxKBqeGfTul1+aYadDBP5uungRUtdItY7OBEACiSf8AeycabDiioMDVmkY6WIP1ZZGR9w2H22md&#xA;5DFBwWJFjQg0VAFFa1Ow+eLqYxAFDZWqZ41pFXYfGxoPw3xZKggY/bf2ou349cVVFijUEBRv1xVD&#xA;k+g5R94m6YqqIjH7I9ND/wAEcVbdONOIBHh3+/FXKx+0RyA703GKtgh326eOKr602rirdcVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVWHm3sMVWMWX4VB37+OKtsrmHf7S7j6MVVEbkgbxxVSuZniWqrX/&#xA;ACuwxVq2mklX40oP5ux+jFVF4+c5+q/CV+237NfDFUh86WNzf6T8CmPU7FxdWEo6F4+q/wCyG3zp&#xA;i7LsvVRxZan/AHcxwy9x/UivI0broCXNx8N1fyPd3I6UaY1Ub+CcRix7UmDmMY/TjAgP839to/Vr&#xA;u0WJSZowVahBZa7j54adYckRzIU7XX9FjtlE1/bxstQQ0qA9fc4eA9zUdViHOcfmFx80eX+19G/+&#xA;pV/+Ig48BY/ncP8AOB+1o+aNH/YeaTw9O3nev3IceAr+cx+Z/wA2R/QpyeYLOZSiWt3J4Ut3U/P4&#xA;wuPCv5odIz/0p/SttdatWmjtrxJbSY/7zmdeHMeCmpFfbriYpjqomXCQYk8r6+79XNNJ1h2dmoe1&#xA;N65FyWi7lak+nH2r9o4quilj+yBTwPjiqoQASxOKrZJo4YJJ5mCRRqXdz0CqKk/diAxlIRBJ5BCW&#xA;GuWN7N6EXqJKU9WNZo3iLx1pzTmByXJGBDRh1cMhoXfPcEWO8Wj8i5LsVdirsVdirsVdirsVdirs&#xA;VWcqNirdX7D7ziq2shfgSF2qKD+uKrT6XPgzknwJoPwxVohoDyUVi/aXuPcYq6WWY8RCgZW/bPTF&#xA;VrySTH0ozQDaWQdB7DFW0iuIV4xlXQfskcT94xVqS4iKlbmJkHcsOS/eK4qxzRtG0a4vtRt7q2ju&#xA;HimLxu45ckk+MHfwLUywyNCnXYdNjMpiUQSJdRfPf9Y+CYPpuh2kwVtLiji6LKEUj8MjxHvcoabE&#xA;OUY/IJnHZaeiB47eMLSo4oK09tsjbaIAcgohYbtG/cmAA/u5SAKnpiyXW9y8T/V7kcX/AGH7NiqI&#xA;ltw55qeEo6OP4+OKqE0dvdRm0v4VdX24uKo3yrhBphOEZCpCwgP0NqNk3PTLkSRDpa3dXUeySj41&#xA;+nlkuIHm4/gzh9Etu6W/yPP71X9K6lGON3pM3u9u0cyfiUf/AIXBwjvT48x9UD8CD+o/Y5dctEB/&#xA;0O8U9x9Xkr94GPCv5ofzZ/6Uu/Sd7IAtrplww68pjHEn0ksW+5ceEd6+PM/TCXxofpv7HSabqeoI&#xA;U1KdYbVxR7O1r8SnqrzNRiD/AJKrh4gOTGWHJkFZDUe6P6ZfqAV7DRNNsJTJbRsJOPpiSSR5GCbH&#xA;gpkZqLsNhgMiWzDpceM3Eb+8nbu3R+Rch2KuxV2KuxV2KuxV2KuxV2+KqcgI3xVejclBxVZPtxkH&#xA;7J3+RxVqdCy8lUMw6VxVYheFC871B/Z64qhzJyVzASqn+8j7geK4qjIPS9JfS+x2xVUxV2KsevS1&#xA;j5pt50WqX0JiK141eM/CPuc5L+FxT6cwP86NfGPL7ym7T3VeLQIK7jlIP1cci5TZkvwvIpCgHUs7&#xA;Up/wOKrGWe4oGEDgbgVLUxVq7huZLdzKYyEBYUVq7CuxJxVTtLuWJY0uP7twDHJ/A4qj3RJF4sOS&#xA;nFVKssHWskPj+0v9cVVlZWXkp5A9KYqpCbkxjkQivTvirhyiNOqHofDFVw5g1B5A4qqb0xVwxV2K&#xA;uxV2KuxV2KuxV2KuxVRW+smuDbLcRm5G5hDrzH+xrXDRaxlhxcNji7uqqwqpGBsU4WoSp74qvbiy&#xA;lSRuMVQ6XluISDPGjLUElhtT5nDTAzj3oB721QlzfQe7GVKfTU48JYnPjH8Q+a6LWdBhrJJe2iN/&#xA;MJkp+J2w8B7mB1eEc5x+YUpPMWhRSerb6hbuGP7yJZFavvtWmPBLuY/ncP8APj8wrjzToVAfrPX/&#xA;ACHP6lx4Cv5zF3/e1/irQO91T/YSf8048BX85i7/AL0r8x6tpF1aQXNpewyT2U6S8Fcc+DfA/wAP&#xA;X7LVyUYlo1GpxkCUZAmMgefTkfsJTk2893HHLIkEtVBWoYEA702Jyt2K+5a5W2cTwI0IHxBHYbf8&#xA;DiqnaQiEiaK0ccl2IdW2O/cjFURNckxOphkUlSN1B7exOKutY45bGNHFVIxVYjS2bcHq9ufst3XF&#xA;UaCGAINQehxVSaEqxeLYnqnY4q2JHPSM171oMVaVncGtFA2I64q2tU6HkhxVfWp2NfbFW8VdirsV&#xA;dirsVdirsVdirsVY+PJ9r64aS4drZJ3uY4lVUk5yFieU6j1GX4z3yzxHWjs2PFufTd+dn+lz6o1v&#xA;L+k9TEz0/nllb/iTHI8Zcj8nj7vtP62x5d0Mips42Pi1WP3knHjK/k8X80O/w15e76bbE+LRIT95&#xA;FceOXev5LD/Mj8gvOiaGi/7wWygdP3Sf0x4j3s/yuL+bH5BptMsZKelaRIB0k4KD9FBgssxhh3D5&#xA;LfqjWj+pHGjL3PEdMFshEDoiYbmCQUVQsnZDQV+nFktju3VmE8YiUdG7fL3+jFVaS4hSH1SeSe29&#xA;cVSqd9JvuUV9ZxvE2wZlDH9VR9GEEjk15MUJipAEItbJ4lD2Mx4do2PJD8sDNp7wS200Mq+nOFNU&#xA;PQ7dsUou0/3lh/1F/Viqo4qjDxBxVQ0//eOP6f1nFW57q3UmN/irswpiqmvK3+KM87du3hiqKVlZ&#xA;QymoOKt4qpsoElSPhbY/PFVwVU+ntirhTwxVdirsVdirsVdirsVdirsVdirsVdQeGKraGtV2PcYq&#xA;0zuBsu/j1H4YqtASvJ6s3uDirZnQHcEV6bHFV6urCqmuKqE9jFJuvwP4jp92KoVzLEPTuE9SPsT1&#xA;+g4q3BbnnytpRwP20br9I74qvntLGNhI4Nf99r0P0YqoG9uTIqwqEUfZjAr9+KoyW2FzCPWUJL2I&#xA;3piqHhjjicQ3CkH9mQM3E/jiqM+qW56rX6T/AFxVaIHi/uD8P++m6fQe2KtOsVwOLDhKOlev9uKt&#xA;29u8deTVU9V7Yq4xtExaP7J+0uKqyuGFRirmWq0xVw3Xf6cVbApirsVdirsVdirsVdirsVdirsVd&#xA;irsVcRUUxVbQqPh3xVpHYmhH04q0BymJ7IKD54quaJGNSKN/MNjiq2ky9CHHgdj9+KrHuIwpV1Ne&#xA;6EVxVCx28kknOMemtdj4Yqi/Qn/3+fuGKqci3CyIgmJLnfYbAYq24dCA1yQT2oMVc9q8i0abkvUb&#xA;DFXIZLchX+KLs3hiqJBBFQag98VWvGjijCvhiqws0WxPJf8AhsVb5SP9kcR4nrirRiC7gmuKrxzH&#xA;XfFWxireKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrByQdKjxxVwlXvtiqx5Hc8U29++KuS2U&#xA;Gr/EfwxVWxV2KqHNfWZz+yOK4qt9MTE8wAezA74qrRRLGtF+nFVjPMX48Ph8PH6cVdxMJqu6HquK&#xA;t82c0qEH44qvSNBuNz44quJpirQ61O5xVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq0VB7Yqs9NT1FMVcEP7LYq7k6n4txiq/kOJIxVailU2FSd8VWAOx3UfSMVX0QGlSD7VpirdG7NX&#xA;54qtILNv0GKryT4VGKu4jwxVwAxVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXUxVxFfliq0oMVXCvfFXb4q4iuKupQYq6gxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KoCTX9Cjdo5NStUkQlXRpowQRsQQWyXAe5xjrMINGcb94RsUscsayROJI3HJH&#xA;UgqQehBGRciMgRY5LsUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV89E13PXNk+aPZPIBJ8o2BJqf3o38BM4GYOb6i9x2Of8ABofH/dFkOVuzdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirzjzs7tr8qsxKoiBQT&#xA;sAVB2+nOf7QP70vV9kgDAPim35du5S/QsSimIqvYE86n6aDMrso/UPd+lwu3ALgff+hC6z+cHl/T&#xA;NUudPNtczyWsjRSyIEC80NGA5MDsds2tsdP2DlyQE7iOIX1ZJ5W8z6f5k0v9IWKukayNFJHKAGV1&#xA;AJGxI6MDhddrdHPTz4Jd1vEM2T5Q9l/L/wD5RGw/56/8nnzCzfUXuex/8Wj8f90WQ5U7N2KuxV2K&#xA;uxV2KuxV2KuxV2KuxVJrzX57e/NmtskjMypHJ6tFDMCQJfgPAkAkdcVXfp2WSPT5YIFeO9pzQuRI&#xA;g482PEKQQq+47eOKo2x1Ozva/V3LFVVmUqy0DCo6in3YqisVdirsVY/P5qPq3MNlAlzPbyEel6gQ&#xA;mNFPN6nbZ1pTw3xVXk8wSrNZFLdXsrpYudyJB8DykgLwpyPTwxVEL5g0puP70gNQKxRwCSwWm4r1&#xA;I64qmOKuxV2KuxVKNc816HojxR6jOY5JgWRFVnNBtU8QaZkYNJky2Yjk42fV48VCR5rdE836BrU7&#xA;2+n3BkmjXm0bIyHjWlRyArucOfR5MQuQ2Rg1mPKaid2H+df+Uhn/ANWP/iAzle0P70/B7bsr+4Hx&#xA;+9Nvy6/6WH/PH/jfMrsr+L4fpcLtz+D4/oeL+bv+Us1r/mPuv+TzZtXqtD/cY/6kfues/kf/AMon&#xA;d/8AMfJ/yZhwh5X2j/vx/UH3yed5s3xR7L+X/wDyiNh/z1/5PPmFm+ovc9j/AOLR+P8AuiyHKnZp&#xA;aNDUCgvbsKCSFWXiACvHiAoGw7e+KtHQ6yBxfXSAKQQslCxK8eTGnxUHTFUZaWv1dXX1ZZebcqyt&#xA;zIr2HgMVUJ9JWV5GF1cQ+ryqInCAFgBUUHUcdsVUxonHhS9ufhUqzGSrsCCBVqduVcVRNpY/VmZv&#xA;rE0xcAH1n5Ace4FBSvfFVt1pwnuEn9eaFkHErEwUMN6ctidq+OKqH6EAVKXt0zoyEO8hY0TqB0pz&#xA;H2sVVbPS/qzo/wBbuZyi8aTScgR4kUG/viqNxVCtpmlSSSO1pA8km0zGNCzV3+I036d8VVY7W1jb&#xA;lHCiMK0ZVAO9Aeg78R92KquKuxV2KuxVRnsbK4NZ7eOYkAEyIrbKSR1HapxVpdPsFlWZbaISrUrI&#xA;EXkCdzQ0rviqsWUUBIBOwr3xVvFXYq7FXYqwXz35Ov8AzBqUFxbTRxLDF6TCTlUkMTUcQfHNpodd&#xA;HDEggmy6rX6CWaQIIFBQ8leSdQ0HWGvrmaKWMwtFxj5cqsVNfiA8Mlre0I5ocIB5sdD2dPDPiJHJ&#xA;H6/5au9S1OS7ikREcKArcq/CoHYHOV1OhlkmZAh7HRdpwxYxEgo7ytpE+j/WvXZZPX9Pjwrtw5Vr&#xA;UD+bLtHpZYrs83H7R1sc/DQIq/0MB1v8pda1DWtQv4ru3SO7uZp0VvU5BZJC4BovXfM2nc6bt/Fj&#xA;xxgYy9MQOnQM0/L3y9deWdFmsLuRJpJblpw0VeIVo0SnxAb/AAYh0/autjqcgnEEVGt/ef1sY/5V&#xA;nq3/AC1Qf8P/AM05mfmA+f8A+h/L/Oj9rPvKuny6Zolvp8rB5YOfJ1rxPORnFK0/mzHnKzb0Wh05&#xA;w4RA7kX99pvkHLQlzelHKRgVHUnFWMXGmXNiz32lzvHMpMkkJNUfuQRmuyaUwueMm+7vdth1oyVj&#xA;ygGPK+oZNpGopqOnw3aDj6g+NfBgaMPvzMwZRkgJOBqcBxZDE9FS6uvSoqirnffoMtaGJ6p5dae8&#xA;m1OxupbPU5CG9RGojFQAAy+G2Wxy1seTq9T2YJSOTHIxyfYnPlLXZdW09/rShL+0cwXaAUHJf2qe&#xA;/wCvBkhR25NvZ+rOaB4tpxNFNrm4EKg0qx6DK3PYd5l8qWuu3iag1zPZ6lDEIoLm3fjxCszDbv8A&#xA;E57jA7HR9pTwR4KjKBNkFU8h+YtUnur7y7rbCTVdMoy3I29aBujn3FRv7+NcQ29o6XGIxzYvon07&#xA;j3MywupSa+8tJerwe7mtwGLK9qRFIakmjtRuQ3yUZU4+p04yx4SZR3/hNIP/AALb/wDV31T/AKSB&#xA;/wA0ZPxfIOF/JMf9Uyf6b9jv8C2//V31T/pIH/NGPi+QX+SY/wCqZP8ATfsd/gW3/wCrvqn/AEkD&#xA;/mjHxfIL/JMf9Uyf6b9jv8C2/wD1d9U/6SB/zRj4vkF/kmP+qZP9N+x3+Bbf/q76p/0kD/mjHxfI&#xA;L/JMf9Uyf6b9jv8AAtv/ANXfVP8ApIH/ADRj4vkF/kmP+qZP9N+xG6b5YhsGkIv7649QAUmnJpTw&#xA;4hcjKduVptGMN1KUr/nG0TNpIdhxlYilD6hMjDcGqFj8J2yDlo/FXYq7FXYq4kDrirsVdirsVdir&#xA;sVUpry0gdEmnjieT+7V2VS24GwJ33OLOOKUhYBNKuLB2Ksc13TJLufgtx6PHmSOIeokFAeooR442&#xA;mkvSyGkh7yS6LxJHwaNh9ohVGxJO7Mv6h2yvLkEImRbMGE5JiI6pz5OtpYNBgEgoZC0gHfix2+8b&#xA;5j6CBjiFuX2pkEsxrps3rli9xJCwfgqSJKTxqTwNeINRSvjmY69JrTSP0c63Ul6THCh9bmKKRVjy&#xA;3Y8ach/mcPNjKQiLPIKn5fo8x1bVACtvfXNYAdqqhbf/AIemW5dqHc6jsn1HJk/hnLZPdat5prZl&#xA;ikMTMpQSgVKk9xuMpdyx+HRLpJ455L95ZUdmPIHiVYqeHEsaAUNP7MVS3ynXUfzI1jU7cN9TsrYW&#xA;TSdA8vJaj3pwb8MDvdWPC0WOEvqlLi+H4L0PC6JItStvNbp/uLuIoJudXe5+ONk3pwVQSO2LlaSW&#xA;ESPjAmNdO9LvqP5n/wDVy07/AJFv/wA04XYeL2f/ADMnzDvqP5n/APVy07/kW/8AzTivi9n/AMzJ&#xA;8w76j+Z//Vy07/kW/wDzTivi9n/zMnzDvqP5n/8AVy07/kW//NOK+L2f/MyfMO+o/mf/ANXLTv8A&#xA;kW//ADTivi9n/wAzJ8wyLhrP+/rf/kU//VTA6V3DWf8Af1v/AMin/wCqmKqU0esErV1Y/smL92oN&#xA;R9sMWLCnhiqY4q7FXYq7FUt1e0eaW3ka2F7bx1D2h47szLxko/wnhQ9fHLISrrTianGZEGuOI6fL&#xA;ffbZE6bb3NvYww3EnqTItGbc99hU7niNqnrkJmzs3YIGMAJblE0PjkW11D44q6h8cVdQ+OKpNrOn&#xA;yT3UXFHcXCiB3ViojpyHJgNiPTkk+1ty4jvhDn6XMIxO/wBO/v5fpEeXS05xcB2KpPqflqC7umvI&#xA;LiW0unADyRnZgNt1zEy6USlxAmMvJzsGuMI8EoicfND2/lCH1lm1C6kvihqkb/DHX3WpyEdFZucj&#xA;Jsl2iQKxxEL7ubIAABQdMznWuZVYUYVB7HFWN6h5Li1HUHmvb6d7JmDLYIeEYoBsTU1y2OShsHWZ&#xA;+zvFmTOcjD+b0ZDBBDbwpBAgjhjAVEUUAA7DKibdjCAiAAKAXkV2OLJYIIVbkEAPjTFXRwQxFzFG&#xA;qGRuchUAcmIA5NTqaAb4pMieZ5L8UJRPrF/Ex9KyN0eRBijqrIASPiLChr7ZVlmYiwOJuwYozNSl&#xA;wqX6e1j/AKsk3/Br/TMf8zk/1MuX+Txf6rH5O/T2sf8AVkm/4Nf6Y/mcn+plfyeL/VY/JHwX93JE&#xA;rvp86MwqU5Q7fe6n8My4SJFkU4OSIjIgGx3r/rlx/wAsM/8AwUH/AFUyTB31y4/5YZ/+Cg/6qYq7&#xA;65cf8sM//BQf9VMVd9cuP+WGf/goP+qmKqM+o3SMoFu0df2ZKFnNQKL6bOB9OKphirsVdirTcuJ4&#xA;/aptXpXFUqhj8zLCFklt5JU/3YwYK5Ib+XoFPHt44qi7b9L+v/pP1cwUb+65h61HH7W3jXFUXirs&#xA;VdiqE1FNSZIjYSIjK4aUOK80A3QeFcVQzr5l4L6bWgZuJcuJDxrXkBx8NqYqibUaqJSLowGEA0Mf&#xA;LmTQUrXbrXFUXirsVdirsVdirsVdirsVdirsVdiqV+n5kUycJbdwS5j9Tlt/IPgVNvHqffFURafp&#xA;j1F+t/VzHxPIxc+XKi0py7V5fhiqMxV2KuxV2KuxVA3MesfWg1tLF9WPHkkgNRQitOI7ivU9ae+K&#xA;qdPMgWoa0L8fskScefHsetOf4YqmQrQV698VdirsVdirsVdirsVdirsVdirsVdirsVcSAKk0HicV&#xA;cSAKnpirsVcSAKnYDqcVaDKTQEE7HbwPTFVO6uYbaB55m4xoCT47eGEC0ErINQsp4TNFOjRqoZ25&#xA;D4QRWreH04kFQQiFYMAymqncEdCMCXMyqpZiAoFSTsABiq2KaKVOcTrIlSOSkMKg0IqMULsUuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL9SsLm6mgaOTjHHXmhZlFeSkNRd&#xA;moFIo3jkgaYkWg4tF1NYlRrtnarGQtI7K1VArxoOvhWg98PEEcJW2+mam80ySvIiKzFZfVcc6iQL&#xA;xCseIXkv3YkhABXSaLqjCXldF/UcsytI4VlIYDZQCvHkNgaGmPEE8JXXWkXpkEkMpTjEiExswcmN&#xA;GFAuyGpYfaxEgpiXajok99psKOy/Xo2MpZt05Oasm4f4a9Nu2IlRUxsKFj5YeHSJrSVl9ad0YlSQ&#xA;AEI2JAUnavbCZ7oENnSeXtV9RWh1B4lHqVAkc0LMxQgGuwQqKe2PEF4Shl8v696qxm9bisYrKZHI&#xA;JLPVQNu3iMPEEcJTXRdKu7GSczSiVJSWShb4asWIodt61rkJStlGNJrkWbsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:745b592e-e5ea-450d-ab64-4c23997c8e41</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:745b592e-e5ea-450d-ab64-4c23997c8e41</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a357dd1a-720b-d144-a983-806ef6d99f6c</stRef:instanceID>
            <stRef:documentID>xmp.did:44655ba1-5539-4ec6-958e-94e280709dab</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:745b592e-e5ea-450d-ab64-4c23997c8e41</stEvt:instanceID>
                  <stEvt:when>2019-06-26T17:13:02+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-Light</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-Light.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-Book</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Book</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-Book.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-SemiBold</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>SemiBold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-SemiBold.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=202 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=150 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>150</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=62 G=191 B=180 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>62</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>180</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=172 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>172</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=76 B=136</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>136</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=71 B=116 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>116</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=244 B=244</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>244</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=87 B=189 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>189</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Kulit</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=248 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>248</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 4</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=62 G=191 B=180</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>62</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>180</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=71 B=116</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>116</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=183 B=198</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>183</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=209 B=91 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=236 G=130 B=125</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>125</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=107 B=241</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>107</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=135 G=140 B=240</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>135</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>240</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=86 G=84 B=140</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>86</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>kulit orang II</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>120</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0154421 .00189212 .00241093 0 cmyk
f
.361334 .281498 .27158 0 cmyk
%ADOBeginSubsetFont: FiraSans-Light Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FiraSans-Light def/FontInfo 7 dict dup begin/Notice (Digitized data copyright 2012-2016, The Mozilla Foundation and Telefonica S.A.) def/Weight (Light) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 67 /C putdup 69 /E putdup 73 /I putdup 77 /M putdup 79 /O putdup 82 /R putdup 83 /S putdup 84 /T putdef/FontBBox {-167 -350 1360 1057} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-13 -0 523 536 562 575 685 698 736 749] def/OtherBlues [-210 -197] def/FamilyBlues [-14 -0 564 578 689 703 739 753] def/FamilyOtherBlues [-216 -202] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [49] def/StdVW [58] def/StemSnapH [49] def/StemSnapV [58] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/C <1C60D8A8C9B795A0C6D36EA80B379E33C3D280861A66C9DE0D84625D4AB0297F4DC0A02AACE1C343EA08761A5E941D3957824A5C1AF32DFDA104EDD2D9A50D0EDC2F385E7779DD571F4C0810360676507DAF52E0595D9B7FB988C6> |-/E <1C60D8A8C9B7BB5CD64482032327B47EDD766DC4CED885542A830F3F7D14AE0BFF7F65D05FA2CBA014AAC711F8C2CDC69347E1F28A63EE8769EAB8458A> |-/I <1C60D8A8C9B850A987A0FAA1E8404C07A430E17B75BB05A9D39243FFBE4774D465> |-/M <1C60D8A8C9B6F715B17D53FB01EC9FDE0C1D4E2318A2243468C9E98C2BDDE0E170C6378F5E43F6990F256750E10B69CCB097A3E90312C591C96453DB7E20AC0322C93AD82527B226412F99B4C077CA5B70433E9E3C> |-/O <1C60D8A8C9B6269C5CE1F70855C5BDB6E8D93B4451B5555B883CABCF87463943CB24433391BB19B8707AAC0216855891B3DFD7E162DDB2CBC9A0B66D391B10F638B6C571B7B4BA5A35E108C8668512BD5D416D0333DBC0BB05155F228DB7674C> |-/R <1C60D8A8C9B7CDD895E9B3C4F183DDA971B6C287B2C1E497A20D0550EB53D11F073C36C66E22635804DC102026C6D3CDC801BE6478047D250FF7E3ECBD9A3AF96DA80A3823E9C7298D32942E058475E06636B3371B6D20C18E> |-/S <1C60D8A8C9B780B36E26F01798A047E5032B5ECB16A5E91699F1A5FCC411A11EA75F033FE54721075D99C049E2E08A638614DF4A266F30D50A21A3AD62EBAAC2F67A7BB2D4AB5DA5249CC2F317BAA7484FB635BEAC1C5ACD33C2312ECFD8D2C549B0C53CCD263AF9397FFB2702BB6C0045914201DB73D6> |-/T <1C60D8A8C9B7AC357E9949B79EAD5C69B1BD2D6F947258DD9DDB6A9628B2223FF8C42BEF68CFD3C004C6DF710C> |-/.notdef <1C60D8A8C9B64FADB619E309546AF58CE0C708D6A2D4DA16668C7F2D4A1D078EC9DE64A936E6FEA4D83073AAEF119EC88636B96A49D19F6F1657B25E59E7A3800CD9A4C80D13A0997606698B69F1F3642D79B44EC413EB245DB0AD18F8791EFB72BCE43C206E058EA180575C5C1EA0C4823EB9952077B7037B412842976C96CC34315953461D2FBA77C06212EA6552F5C0B7995373926B6B5EDBD74EA4C57A47466BF878A5C57562BD65CAB62491DAE7FBF318BBAEF2FF9B165CF17EADD8E1B00F6E3930FA87A8B1308A8F39> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/KIVPXU+FiraSans-Light /FiraSans-Light findfont ct_VMDictPut/KIVPXU+FiraSans-Light*1 [67{/.notdef}rp /C /.notdef /E 3{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O 2{/.notdef}rp /R /S /T 171{/.notdef}rp]KIVPXU+FiraSans-Light nfKIVPXU+FiraSans-Light*1 [13.3575 0 0 -13.3575 0 0 ]msf23.4722 37.1748 mo(ISO)sh43.5884 37.1748 mo(METRIC)sh.67126 0 .361639 0 cmyk
%ADOBeginSubsetFont: FiraSans-Regular Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FiraSans-Regular def/FontInfo 7 dict dup begin/Notice (Digitized data copyright 2012-2016, The Mozilla Foundation and Telefonica S.A.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 65 /A putdup 77 /M putdup 82 /R putdup 98 /b putdup 101 /e putdup 103 /g putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 112 /p putdup 117 /u putdef/FontBBox {-167 -353 1360 1104} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-14 -0 527 541 564 578 689 703 739 753] def/OtherBlues [-216 -202] def/FamilyBlues [-14 -0 564 578 689 703 739 753] def/FamilyOtherBlues [-216 -202] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [74] def/StdVW [92] def/StemSnapH [74] def/StemSnapV [92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/space <1C60D8A8C9B863FBB5> |-/A <1C60D8A8C9B7FE5A8A29AE7D7D3B663180C366F98D2686894969E4E6FEADD2D4F3339B4F074184209AB6477970A28B3D26B115AC72432C378B425FEAD8D229C92401679B430F6D9AA964D7C88C2B80B1783623> |-/M <1C60D8A8C9B6FF86A27735044D6637155223015008960EDC0B1F82B42E1026618731D28AD7E5A570640540FB8853FB0BD67085937B071F1E67634B7AEAEB4B16B134CF5E5E975C67C9F10CF582BD8B8BFC20E35165E9C2407EA2674279C497BC806887> |-/R <1C60D8A8C9B7DE8786C5D82CCF548305179128EFE43905CBECA7760979541F21EAE5BD9D07ABD1843C21051B1A12E401A4F9BC8F779A393D0D6D9375063282F05E78D87DF3B9A726B8D0BF053D817B0DDC0C6F87E54E> |-/b <1C60D8A8C9B7C996ECD061460EB88D59270B8226C56AAF605CE198F99BDDDA6BB1409DA6B1601BF83CFFE4080D857D6D3364B8E52774596B52476DDD8F1E8EF62453C6CBAE3675422516ECB57D194B4D5F909AA738745F57E6CF58DBA36C0D0308BA4D4A5AD5CE84772F3A5571B6CF39BF2EB6CC268475DE2C078C4B90A5075A43E410CFC4EB975E6865D7BD5A925DDFD7C51A7FFA28> |-/e <1C60D8A8C9B79AB8DA0B663B240457FC0BEDF907A167C9AB8735FFD682534D188E841808CA73F420563B895DA5115390DF1CE6ECE18719ED2F72061C98CCE66A5D816F0A87CF53B5BCED78E79F888F5A97CAD15F8F9487256E654084A7B9401C4F5A9697C0F7964CD7CF174160B8> |-/g <1C60D8A8C9B7B3D0E8E78B1F0A60071FA0DCDF8A6625B7B5F670357BA684715F4F136FEF480CE2F0F58A0CDB438891041A8D7C952EFE21C057101180D2CDFEE0B22616E37920F1225479D2F3CC9D0701607A98133DDF81B9817B05F1D7FB2C1D5ECD9ECDC9A05986869CA9347B5EC83B6CAE9C9A29CD2CF907019312589085FFB17533B6F88BE26FFEDE510A6272251B5FCE3C0E1A4DA9F80C7B0C1E5FC9AC1217A460C13F431FF592F864E64C8CD3D8B75E380CCBCDA3CA29B0ABA806721FB4B4DE5DDED2CB8A32638BEE52EBC76C15E6155207F69AF66225A8CDA974BAFEECED10077A515EC3ED04B974904B7527C5CBC46FCF41B94070316CBA353A822BBC4D1CB0686E60831A14EF21102D35A4DF> |-/i <1C60D8A8C9B850A987A0FAA0796C994657386EA359AD6574A6039291067DA6B32FEABAFAB0CDB5002D7791195C3D74D57E5344A80ED58D983CE23FD3A21D46A119C2E66169A5DBC8C91BED4FA09A788C> |-/l <1C60D8A8C9B8476F8B25FC1ADC27672F231825B122A179D6D9A534D2D2F52B608DCBDBE045E1A9CCACF066D5EB4CA19DB11B625ACCF7A3F35575CF3EB8799454935CB4E8641E29BE1F48A053F2D1ACAE35018154> |-/n <1C60D8A8C9B7F1D1E7783E2C877857A40EE1D73F761C89C45D934F98C55F4D038F3F1F682278FDE5DB44F5E6A3606993BCEA261E90BF0215CD3CC2F95B064F8BC679DD8D39C1A80D5DFC8DC5CBECAE5B66BDB751804ECAF40C5BD11B4E58AF0D3A7649D2AD8FE49CE7B5> |-/o <1C60D8A8C9B7F374012C2CAEFE00D9014937DD56CD93655B544824F0EE02AD2E3047DBFE18A24C83FD92D1B07EDB407060C78D6496602BD16DBB8239D5F327B9004A6AB348FD0BE3076E67860515B7CB13BD4FA9EE01E89B> |-/p <1C60D8A8C9B7C99668DD4B8AF7984DD504D8C6C052B5A43F9E278003CA2E1A315428D2084C6CA5C5ECBA237C585D34B614711471507C1B404886866C9F3760F5DD096D53ADA99B4865A47001B0562A4CC34CC85FA861F5D0F39565A89543ACB4E68EF08516CB5D09FBEABC82F8294EC41B199C02C86708FC75F936FA5F35BE2A5544C30627F8EE53726306BAE065123839A8A849C9C4E7> |-/u <1C60D8A8C9B7F51B90C0A6B0507D018BEA400C9ADD6459F6A1D524A22622BB3616620F094CB8026C9C85CF3F71C4F81C8E1DBA2BF5A483638E2C0D38658F4F84E8D2F33261D327D45ACD9CFAB221060C37DBEA4CAA21D0> |-/.notdef <1C60D8A8C9B64FADB619E309546AF58CE0C708D6A2D4DA16668C7F2D4A1D078EC9DE64A936E6FEA4D83073AAEF119EC88636B96A49D19F6F1657B25E59E7A3800CD9A4C80D13A0997606698B69F1F3642D79B44EC413EB245DB0AD18F8791EFB72BCE43C206E058EA180575C5C1EA0C4823EB9952077B7037B412842976C96CC34315953461D2FBA77C06212EA6552F5C0B7995373926B6B5EDBD74EA4C57A47466BF878A5C57562BD65CAB62491DAE7FBF318BBAEF2FF9B165CF17EADD8E1B00F6E3930FA87A8B1308A8F39> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/KIVPXV+FiraSans-Regular /FiraSans-Regular findfont ct_VMDictPut/KIVPXV+FiraSans-Regular*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 11{/.notdef}rp /M 4{/.notdef}rp /R 15{/.notdef}rp /b 2{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p 4{/.notdef}rp /u 138{/.notdef}rp]KIVPXV+FiraSans-Regular nfKIVPXV+FiraSans-Regular*1 [16.4771 0 0 -16.4771 0 0 ]msf22.2075 57.2734 mo(Running )sh88.3135 57.2734 mo(Mobil)sh129.935 57.2734 mo(e App)[8.97998 4.36621 9.44141 9.78711 0 ]xsh1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
139.799 424.38 mo
139.799 426.611 135.758 434.844 135.758 434.844 cv
135.758 434.844 131.718 426.611 131.718 424.38 cv
131.718 422.148 133.527 420.339 135.758 420.339 cv
137.99 420.339 139.799 422.148 139.799 424.38 cv
cp
0 .85156 .162356 0 cmyk
@
137.1 424.645 mo
137.1 425.386 136.499 425.986 135.758 425.986 cv
135.018 425.986 134.417 425.386 134.417 424.645 cv
134.417 423.903 135.018 423.303 135.758 423.303 cv
136.499 423.303 137.1 423.903 137.1 424.645 cv
cp
@
49.1523 427.519 mo
49.1523 430.096 47.063 432.186 44.4853 432.186 cv
41.9082 432.186 39.8188 430.096 39.8188 427.519 cv
39.8188 424.941 41.9082 422.852 44.4853 422.852 cv
47.063 422.852 49.1523 424.941 49.1523 427.519 cv
cp
.76437 .0889906 .320897 0 cmyk
@
44.4853 421.436 mo
44.4853 424.311 li
@
44.4853 430.873 mo
44.4853 433.748 li
@
41.4853 427.748 mo
38.6103 427.748 li
@
50.4438 427.748 mo
47.5688 427.748 li
@
.361334 .281498 .27158 0 cmyk
%ADOBeginSubsetFont: FiraSans-Book Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FiraSans-Book def/FontInfo 7 dict dup begin/Notice (Digitized data copyright 2012-2016, The Mozilla Foundation and Telefonica S.A.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 77 /M putdup 97 /a putdup 99 /c putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 116 /t putdup 121 /y putdef/FontBBox {-167 -350 1360 1093} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-14 -0 526 540 563 577 688 702 738 752] def/OtherBlues [-215 -201] def/FamilyBlues [-14 -0 564 578 689 703 739 753] def/FamilyOtherBlues [-216 -202] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [68] def/StdVW [84] def/StemSnapH [68] def/StemSnapV [84] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings11 dict dup begin/space <1C60D8A8C9B85EE353> |-/M <1C60D8A8C9B6FDE25CE580A9AA5A110F9A60ECEAA4F9D5A55E3A5BEF8CAC2F31A2A843EDCC9CF4EC3B4C8EC15F147F87CD70239D7F0D9140D40A0276E96F5566264B29F0B3FC7C814AC2E99DB7848420000437A3A00F63070E79F2603CDDF95346DAAF21> |-/a <1C60D8A8C9B79D2D200AEEEC427B32D26E6F51DD142821BDDF2C14BBB740B768F34A98EC9DD074894A8E577242CCA6F0C18454D95FE5494EB6AB34517BB2F877030D3A32A4FCFC449491F63D7D1012340218E6C2C5BCB7CAB1114562ABF29D25222EFB0CCE5F14947D08667329E203BB896386E289558BD6D288B4CDB2F4435D3462065A> |-/c <1C60D8A8C9B75F2FE986DA16C00876CD432F58913B33CF6B1681020DD4FCAC6A6FFC420CD26753B645561849A28BFFD340CE3E4C4715B25FF312F170D2A904BC300966754F3E6723DE59AD549E7C2B3096C464CE4274> |-/i <1C60D8A8C9B855A1179525AE4F0C1E3DF18014CFA4DA71AC030ECC2FCE0D1D081A1E571A6EB4DB213A981B4E44A2AA71FE031B43F1FD4F953B70DD683EC5810178EA6CAAEE36F314023BCAB64D3BAF5C> |-/l <1C60D8A8C9B849F2B4AF0FADAD6BDD0143DAD5A0EF4B3BF0462618D25365263544A439E8B13C28AC7F96C706092F60E467F81BA79B8F8DDAC6C656C9B040BFDC58AE1AD7CBD408174BEEAC401624B2D324959704> |-/n <1C60D8A8C9B7F2A7A499FA980746C6E8C8A4A398E66EEB6A34156B9A15A985C265B389665E85AC7CF195B7B73BB9D2F1BAEE893F726D84F83658BB41352385037E9A1539DD684EA8B9E4DCCD74471532118AEDDB15B6E75508928B8A75E1E9042D4D7B5CA77A284DC548> |-/o <1C60D8A8C9B7F6E9DAF3C3F9F009AD636D0C1A2F1476DBF877BCA53062ED63C4E981D79C77CC5AEB0D3A972736EA1FCE0B5CCCDD57923C7FFCCBF49B1357D0FC12E724CE0A57675530990305D371F09140B4B372C941> |-/t <1C60D8A8C9B806F5B21CC4C19255D2108F645C4EF602123056D89A5EB22BF4A800ADE6239C5AA914059D33F43C29649A87CD7C5FF2240EC2E9693CE8E2B03ECEFF364D8A3370034F033C2197A347> |-/y <1C60D8A8C9B7551CC744DFD60A80C6D8D3CE51217820F3BF49E0A7617C45427BC89F19552BBFB8C7FBB33D65605AAA99F7ADE9D2E96A14F0716B287782A26F44377E5EB72C9A> |-/.notdef <1C60D8A8C9B64FADB619E309546AF58CE0C708D6A2D4DA16668C7F2D4A1D078EC9DE64A936E6FEA4D83073AAEF119EC88636B96A49D19F6F1657B25E59E7A3800CD9A4C80D13A0997606698B69F1F3642D79B44EC413EB245DB0AD18F8791EFB72BCE43C206E058EA180575C5C1EA0C4823EB9952077B7037B412842976C96CC34315953461D2FBA77C06212EA6552F5C0B7995373926B6B5EDBD74EA4C57A47466BF878A5C57562BD65CAB62491DAE7FBF318BBAEF2FF9B165CF17EADD8E1B00F6E3930FA87A8B1308A8F39> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/KIVPXW+FiraSans-Book /FiraSans-Book findfont ct_VMDictPut/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 44{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf118.788 447.934 mo(My )sh128.164 447.934 mo(location)[1.75244 3.56055 2.85547 3.32178 2.18115 1.70996 3.56055 0 ]xsh%ADOBeginSubsetFont: FiraSans-Book AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXW+FiraSans-Book dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/e <1C60D8A8C9B79C5F695AD44AFC34D3CE8F0CAE6D57FFBE4D1E6C16A7941C0F1C8B652AC9DC9CFB646DA6458D208BB9FB11A56F25E660834605664F7C07F8B7A4DAA90D1D6B9970080A1F3A4A6EA676A05C8939328CFF93104A88E1C3025215F19AA41D2A0A536D38BAB959B3BB5F> |-/h <1C60D8A8C9B7F2A7A499FA980746C6FC47C5E7252D5EEA95444A530C2D97AB60E091F84F8023324CC3B337B78A0C0D592127B72CE17316B3B3E2E8D22F05CE4DDE663221B044572C31289EE6E6AC3E> |-/m <1C60D8A8C9B68D924CAAB6D1AE74849FE7D22F7DD03A8777B5308EDB726EB32736BC4ED01FC6786E26D0F3EE2E1059105F77A91A527FB54F1A12FB0CED1609D497BBF842048A97C704CDDC75C8680194B0646FD90113891167FCEA31F98166C2BEA50C7B48845CE80208F28A3E400256AA17E7A06AF43374BF50259E2340FF43A7DCD3B9E33E3C144392245E7F3C6431A03B42272EEC2FA7> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXW+FiraSans-Book /Encoding getdup 101 /e putdup 104 /h putdup 109 /m putpop%ADOEndSubsetFont
/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 44{/.notdef}rp /M 19{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf31.2275 447.934 mo(My )sh40.6035 447.934 mo(home)[3.58496 3.56006 5.24561 0 ]xsh1 lc
55.7344 427.748 mo
55.7344 427.748 li
0 .219608 .596918 0 cmyk
@
[.010103 5.05136 ] 0 dsh
60.7861 427.748 mo
124.059 427.748 li
@
[] 0 dsh
126.595 427.748 mo
126.595 427.748 li
@
306.719 409.954 mo
306.719 415.272 304.557 420.082 301.077 423.573 cv
287.457 409.954 li
287.457 390.704 li
298.094 390.704 306.719 399.317 306.719 409.954 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
301.622 409.952 mo
301.622 417.921 295.162 424.381 287.193 424.381 cv
279.225 424.381 272.765 417.921 272.765 409.952 cv
272.765 401.983 279.225 395.523 287.193 395.523 cv
295.162 395.523 301.622 401.983 301.622 409.952 cv
cp
.0847486 .0569162 .0569467 0 cmyk
f
.361334 .281498 .27158 0 cmyk
%ADOBeginSubsetFont: FiraSans-SemiBold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FiraSans-SemiBold def/FontInfo 7 dict dup begin/Notice (Digitized data copyright 2012-2016, The Mozilla Foundation and Telefonica S.A.) def/Weight (SemiBold) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 37 /percent putdup 52 /four putdup 53 /five putdef/FontBBox {-167 -354 1360 1170} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 -0 530 547 567 584 692 709 741 758] def/OtherBlues [-221 -204] def/FamilyBlues [-14 -0 564 578 689 703 739 753] def/FamilyOtherBlues [-216 -202] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [106] def/StdVW [142] def/StemSnapH [106] def/StemSnapV [142] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/percent <1C60D8A8C9B686F75E416323E46AC72D6E31B99A1A55EBD04F32BA04A5583C4E4B593E05F0793072391B9B9A38E6AC6DF63292F0D02F5A6D4186A1C695F48B76C41BE9737712135D8A2C32CB578F6E6584C1C6B862610C44CEC55F92E5540CE4FB433347629CC94B7ED5A20D56BAC3EDACBB1C3124DC086ACA884E7BDC34B7E23AD25FD03F3D95ECD1858569595F3084F44EADB13B669D5D9D4FE7DB89BA34565384D2A31172C539F7E7E3EBDA4238F4FF09C8622B88C4EEF15A35> |-/four <1C60D8A8C9B7EE7C4EC2FD5F6183CE24352E7C24B61AF8E5343D01CE1D20728B42D91DC3F22B9069DD9BA4A5873EE80D3BC78624A36E08B0D059A03D44A1FAE70A00D3552094CB4905479871ECE3D64EA025237E8804> |-/five <1C60D8A8C9B78C666F399130B55BF7606DB7A5BF3763E5608E6B2B173243D520180FEF85DBDA9F96ED71B228926E9DFC350E9CC27C742DBC56DB808862404150F44EB98A2F772A25ADE9CD261328CA0F1A6369E627E448CA6E70ADAFFEC73C11E70890F6805B1974A8> |-/.notdef <1C60D8A8C9B64FADB619E309546AF58CE0C708D6A2D4DA16668C7F2D4A1D078EC9DE64A936E6FEA4D83073AAEF119EC88636B96A49D19F6F1657B25E59E7A3800CD9A4C80D13A0997606698B69F1F3642D79B44EC413EB245DB0AD18F8791EFB72BCE43C206E058EA180575C5C1EA0C4823EB9952077B7037B412842976C96CC34315953461D2FBA77C06212EA6552F5C0B7995373926B6B5EDBD74EA4C57A47466BF878A5C57562BD65CAB62491DAE7FBF318BBAEF2FF9B165CF17EADD8E1B00F6E3930FA87A8B1308A8F39> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/KIVPXX+FiraSans-SemiBold /FiraSans-SemiBold findfont ct_VMDictPut/KIVPXX+FiraSans-SemiBold*1 [37{/.notdef}rp /percent 14{/.notdef}rp /four /five 202{/.notdef}rp]KIVPXX+FiraSans-SemiBold nfKIVPXX+FiraSans-SemiBold*1 [9.40994 0 0 -9.40994 0 0 ]msf277.778 413.325 mo(45%)[5.14697 4.771 0 ]xsh%ADOBeginSubsetFont: FiraSans-Book AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXW+FiraSans-Book dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B8469EE0EEFD5BEC4B4811D54A25AE1BD5B971A45DADD859714495> |-/L <1C60D8A8C9B7AED8084436CAA7A71867692E814562A81BFB49B3175FC30F4E93D74853D6C6E1E6> |-/p <1C60D8A8C9B7CC0BB5C1D4BC204F34A16AB5BC1727B020AA2C372C7F8005DF54702F23F3934A1392BBEDD12FEAE44A9539251E4357FC98217F7AF5321E1D5F22B66627FCE8DE6CE1D96DA8438A66E8F25D3545D59A0F663478F2811254610936FAC3CC7F52DAF8017065D8EFC3D1FBAA93A325CAA43B28B17CF42074F2A07757F33530201C4A674F05284DFD2E38C4CBB12FB4C04863> |-/r <1C60D8A8C9B73CE4CDD7D43E7A1FB84A886DA596919C54AA3A9BC315C1340CE10FAEB5D166E5267FD657A7038EF38850508BA2EF56CF0AD052BD6E51AC6C7B1344B639B51862686DDC128C7C14BA9F3497FF138A61BD536DB4A0E8DCB72C2763EABF6D977FBB82B4598BC841917B83B27CBBFECB8958> |-/s <1C60D8A8C9B74969692CEB6D957E01444E190ACCE4E9A9AA8DDB66A10A5E1B1489F3486D628DEC002360A0CA42D837019E8E571DB45E51515D66E78DEDEA8C0776745CD8C12266ABC53A2C1287890652238E88C90132DB18C437E1F29E0AB970C2E2C6F2074B49C70B683F31B6750D8483> |-/u <1C60D8A8C9B7F6E9DAF2F540FB1CCAE2D2CB87385B3544F9BD802B77712FB0C49C304B7C1A15219FB0335FA761C7FCAC89510EABE00824418D11FAB847EB8D5FB31B6B8D14C4F948FA9D9506076C3EE760B51DEA10B466> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXW+FiraSans-Book /Encoding getdup 73 /I putdup 76 /L putdup 112 /p putdup 114 /r putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 40{/.notdef}rp /I 2{/.notdef}rp /L /M 19{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf271.802 380.636 mo(Lorem Ipsum)[2.86816 3.56006 2.16357 3.32764 5.24561 1.64209 1.78955 3.62158 2.85547 3.56055 0 ]xsh257.36 409.952 mo
257.36 420.586 248.74 429.206 238.102 429.206 cv
238.102 409.952 li
238.102 390.699 li
248.74 390.699 257.36 399.319 257.36 409.952 cv
cp
.67126 0 .361639 0 cmyk
f
252.267 409.952 mo
252.267 417.921 245.807 424.381 237.839 424.381 cv
229.87 424.381 223.41 417.921 223.41 409.952 cv
223.41 401.983 229.87 395.523 237.839 395.523 cv
245.807 395.523 252.267 401.983 252.267 409.952 cv
cp
.0847486 .0569162 .0569467 0 cmyk
f
.361334 .281498 .27158 0 cmyk
%ADOBeginSubsetFont: FiraSans-SemiBold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXX+FiraSans-SemiBold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7F88CA788A93766F4E361DD53B24D980D0CA259ABC12BEC5CA329514008DE18BA7ED2A143BE5458BFDDFD305037912D1EB50908C4FF852290A0C9FC50E8E1A33234645F6EE421E164EEF352048072DCE9C3970142> |-/three <1C60D8A8C9B7B8EBA6384D3A72D162CD8F519EC823F33E3A3D3480D83D8D05A04048AEB5E7FB61D2EC0E1E8E0610534D9957D5ADEAA46EEEEB73211B69078B2A0E99B990F22C5E1EF3C13EC342D8793602BA7B719CDD88178CDF9FC70A30C581605222017C4A46A6D9E9E9E5E4C3E2CCF637BF1F79069673BA4919797AEF2274CF03C10503624199AE8C314077DDB323B6CBDAA02448CEC91578A043898B> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXX+FiraSans-SemiBold /Encoding getdup 48 /zero putdup 51 /three putpop%ADOEndSubsetFont
/KIVPXX+FiraSans-SemiBold*1 [37{/.notdef}rp /percent 10{/.notdef}rp /zero 2{/.notdef}rp /three /four /five 202{/.notdef}rp]KIVPXX+FiraSans-SemiBold nfKIVPXX+FiraSans-SemiBold*1 [9.40994 0 0 -9.40994 0 0 ]msf228.568 413.325 mo(30%)shKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf222.445 380.636 mo(Lorem Ipsum)[2.86816 3.56006 2.16357 3.32764 5.24561 1.64209 1.78955 3.62158 2.85547 3.56055 0 ]xsh208.004 409.952 mo
208.004 420.586 199.384 429.206 188.745 429.206 cv
183.529 429.206 178.796 427.131 175.33 423.766 cv
188.745 409.952 li
188.745 390.699 li
199.384 390.699 208.004 399.319 208.004 409.952 cv
cp
0 .493324 .647425 0 cmyk
f
202.911 409.952 mo
202.911 417.921 196.451 424.381 188.482 424.381 cv
180.514 424.381 174.054 417.921 174.054 409.952 cv
174.054 401.983 180.514 395.523 188.482 395.523 cv
196.451 395.523 202.911 401.983 202.911 409.952 cv
cp
.0847486 .0569162 .0569467 0 cmyk
f
.361334 .281498 .27158 0 cmyk
%ADOBeginSubsetFont: FiraSans-SemiBold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXX+FiraSans-SemiBold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF32A7E19CBB0619D3705293E271FFFD7559FCB3B5CDFB2A31651FBACD8E58D6E51B181B16FFB1A304613A8DE854C5AFEAA713E5192F10A455F540BBBCBA613C828D9C7E9DF96683393738CD23A11AC90CAD210974F400464629E70AAFCDADBA967B741D863D1FC0B5899B7E3ABE2FB5D91BF200A269607C8BB7> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXX+FiraSans-SemiBold /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/KIVPXX+FiraSans-SemiBold*1 [37{/.notdef}rp /percent 10{/.notdef}rp /zero 2{/.notdef}rp /three /four /five /six 201{/.notdef}rp]KIVPXX+FiraSans-SemiBold nfKIVPXX+FiraSans-SemiBold*1 [9.40994 0 0 -9.40994 0 0 ]msf179.79 413.325 mo(60%)shKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf173.089 380.636 mo(Lorem Ipsum)[2.86816 3.56006 2.16357 3.32764 5.24561 1.64209 1.78955 3.62158 2.85547 3.56055 0 ]xsh462.166 394.982 mo
336.166 394.982 li
336.166 393.461 li
462.166 393.461 li
462.166 394.982 li
cp
.264561 .199496 .196445 0 cmyk
f
445.548 396.047 mo
336.166 396.047 li
336.166 392.396 li
445.548 392.396 li
445.548 396.047 li
cp
.67126 0 .361639 0 cmyk
f
337.104 394.242 mo
337.104 396.244 335.481 397.867 333.479 397.867 cv
331.477 397.867 329.854 396.244 329.854 394.242 cv
329.854 392.24 331.477 390.617 333.479 390.617 cv
335.481 390.617 337.104 392.24 337.104 394.242 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
2 lw
0 lc
337.104 394.242 mo
337.104 396.244 335.481 397.867 333.479 397.867 cv
331.477 397.867 329.854 396.244 329.854 394.242 cv
329.854 392.24 331.477 390.617 333.479 390.617 cv
335.481 390.617 337.104 392.24 337.104 394.242 cv
cp
.169497 .120851 .124178 0 cmyk
@
467.625 394.242 mo
467.625 396.244 466.002 397.867 464 397.867 cv
461.998 397.867 460.375 396.244 460.375 394.242 cv
460.375 392.24 461.998 390.617 464 390.617 cv
466.002 390.617 467.625 392.24 467.625 394.242 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
467.625 394.242 mo
467.625 396.244 466.002 397.867 464 397.867 cv
461.998 397.867 460.375 396.244 460.375 394.242 cv
460.375 392.24 461.998 390.617 464 390.617 cv
466.002 390.617 467.625 392.24 467.625 394.242 cv
cp
.169497 .120851 .124178 0 cmyk
@
462.166 414.087 mo
336.166 414.087 li
336.166 412.566 li
462.166 412.566 li
462.166 414.087 li
cp
.264561 .199496 .196445 0 cmyk
f
421.799 415.152 mo
336.166 415.152 li
336.166 411.502 li
421.799 411.502 li
421.799 415.152 li
cp
0 .85156 .162356 0 cmyk
f
337.104 413.348 mo
337.104 415.35 335.481 416.973 333.479 416.973 cv
331.477 416.973 329.854 415.35 329.854 413.348 cv
329.854 411.346 331.477 409.723 333.479 409.723 cv
335.481 409.723 337.104 411.346 337.104 413.348 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
337.104 413.348 mo
337.104 415.35 335.481 416.973 333.479 416.973 cv
331.477 416.973 329.854 415.35 329.854 413.348 cv
329.854 411.346 331.477 409.723 333.479 409.723 cv
335.481 409.723 337.104 411.346 337.104 413.348 cv
cp
.169497 .120851 .124178 0 cmyk
@
467.625 413.348 mo
467.625 415.35 466.002 416.973 464 416.973 cv
461.998 416.973 460.375 415.35 460.375 413.348 cv
460.375 411.346 461.998 409.723 464 409.723 cv
466.002 409.723 467.625 411.346 467.625 413.348 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
467.625 413.348 mo
467.625 415.35 466.002 416.973 464 416.973 cv
461.998 416.973 460.375 415.35 460.375 413.348 cv
460.375 411.346 461.998 409.723 464 409.723 cv
466.002 409.723 467.625 411.346 467.625 413.348 cv
cp
.169497 .120851 .124178 0 cmyk
@
462.166 433.192 mo
336.166 433.192 li
336.166 431.672 li
462.166 431.672 li
462.166 433.192 li
cp
.264561 .199496 .196445 0 cmyk
f
377.784 434.257 mo
336.166 434.257 li
336.166 430.606 li
377.784 430.606 li
377.784 434.257 li
cp
0 .493324 .647425 0 cmyk
f
337.104 432.453 mo
337.104 434.455 335.481 436.078 333.479 436.078 cv
331.477 436.078 329.854 434.455 329.854 432.453 cv
329.854 430.451 331.477 428.828 333.479 428.828 cv
335.481 428.828 337.104 430.451 337.104 432.453 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
337.104 432.453 mo
337.104 434.455 335.481 436.078 333.479 436.078 cv
331.477 436.078 329.854 434.455 329.854 432.453 cv
329.854 430.451 331.477 428.828 333.479 428.828 cv
335.481 428.828 337.104 430.451 337.104 432.453 cv
cp
.169497 .120851 .124178 0 cmyk
@
467.625 432.453 mo
467.625 434.455 466.002 436.078 464 436.078 cv
461.998 436.078 460.375 434.455 460.375 432.453 cv
460.375 430.451 461.998 428.828 464 428.828 cv
466.002 428.828 467.625 430.451 467.625 432.453 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
467.625 432.453 mo
467.625 434.455 466.002 436.078 464 436.078 cv
461.998 436.078 460.375 434.455 460.375 432.453 cv
460.375 430.451 461.998 428.828 464 428.828 cv
466.002 428.828 467.625 430.451 467.625 432.453 cv
cp
.169497 .120851 .124178 0 cmyk
@
.361334 .281498 .27158 0 cmyk
%ADOBeginSubsetFont: FiraSans-SemiBold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXX+FiraSans-SemiBold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B87A8FFEE52C04FBF7DC7EB04FE093688B784BF9A5C11CC7F94F81C782B652AEAE0354BC312F> |-/two <1C60D8A8C9B7BB5CD60EFA24D437729C62553F6376247DE88DD5EE14DB95845BFF9195F2D7E1174845F03EF4DB84D06045A969673A2B3655676B2F347594D43B2AB43ADEECA897E3138227577D52ED561BEF4312B0A79BDE> |-/seven <1C60D8A8C9B74D93CC899176A89B2DEFF209AAC6305637D8783A2166343A1633C08DFC1969902BC8C794B48E17BD3E618638> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXX+FiraSans-SemiBold /Encoding getdup 46 /period putdup 50 /two putdup 55 /seven putpop%ADOEndSubsetFont
/KIVPXX+FiraSans-SemiBold*1 [37{/.notdef}rp /percent 8{/.notdef}rp /period /.notdef /zero /.notdef /two /three /four /five /six /seven 200{/.notdef}rp]KIVPXX+FiraSans-SemiBold nfKIVPXX+FiraSans-SemiBold*1 [15.338 0 0 -15.338 0 0 ]msf329.854 376.018 mo(20.7)[7.85303 8.88037 3.68115 0 ]xsh%ADOBeginSubsetFont: FiraSans-Book AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXW+FiraSans-Book dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/k <1C60D8A8C9B7A1570664C4ADC3AEEB10915BF9F480784587FF6C6EAA1B613AA5FBB88160188C7380F6B5213DF657F46E58E4F360111275C7B4C36CCA56B34E45ACB51B22A1169E426D12311F67CE> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXW+FiraSans-Book /Encoding getdup 107 /k putpop%ADOEndSubsetFont
/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 40{/.notdef}rp /I 2{/.notdef}rp /L /M 19{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [7.06271 0 0 -7.06271 0 0 ]msf358.356 375.434 mo(km)[3.57373 0 ]xsh%ADOBeginSubsetFont: FiraSans-Book AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXW+FiraSans-Book dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6747BC7EEE1F47D29D7B0D7F291145BC9FF5F7552AE0CC4AA0DAB2195C8200764B4C9C9F9770704D24CBE469F58089D55A56BB44C894DBF9FAC440BF04AE0B4F1DBA3CC6F055DB533BD> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXW+FiraSans-Book /Encoding getdup 68 /D putpop%ADOEndSubsetFont
/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 2{/.notdef}rp /L /M 19{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf329.854 447.934 mo(Distance)[3.92822 1.70947 2.85547 2.13916 3.32129 3.58496 2.80029 0 ]xshKIVPXX+FiraSans-SemiBold*1 [15.338 0 0 -15.338 0 0 ]msf422.684 376.018 mo(45.5)[8.38965 8.08301 3.83447 0 ]xshKIVPXW+FiraSans-Book*1 [7.06271 0 0 -7.06271 0 0 ]msf452.186 375.434 mo(mins)[6.04541 1.97021 4.13184 0 ]xsh%ADOBeginSubsetFont: FiraSans-Book AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXW+FiraSans-Book dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B7BB5CFD1D9636B38B1F7AECDBC9259B69ECF77DD6E067219861A84FC0628B5B2A9AA3483B195643> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXW+FiraSans-Book /Encoding getdup 84 /T putpop%ADOEndSubsetFont
/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 2{/.notdef}rp /L /M 6{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [6.12815 0 0 -6.12815 0 0 ]msf442.294 447.933 mo(Take time)[2.83105 3.32178 3.05176 3.32764 1.64209 2.18164 1.70947 5.24561 0 ]xsh56.77 400.157 mo
37.8218 400.157 li
37.8218 390.91 li
37.8218 388.371 39.8809 386.313 42.4199 386.313 cv
52.1719 386.313 li
54.7114 386.313 56.77 388.371 56.77 390.91 cv
56.77 400.157 li
cp
.669795 .251896 0 0 cmyk
f
85.8789 400.157 mo
66.9307 400.157 li
66.9307 364.273 li
66.9307 361.733 68.9893 359.675 71.5288 359.675 cv
81.2808 359.675 li
83.8203 359.675 85.8789 361.733 85.8789 364.273 cv
85.8789 400.157 li
cp
0 .493324 .647425 0 cmyk
f
114.987 400.157 mo
96.0391 400.157 li
96.0391 373.61 li
96.0391 371.07 98.0977 369.012 100.637 369.012 cv
110.389 369.012 li
112.929 369.012 114.987 371.07 114.987 373.61 cv
114.987 400.157 li
cp
.11313 .869688 .333989 .000488289 cmyk
f
144.096 400.157 mo
125.148 400.157 li
125.148 346.493 li
125.148 343.953 127.207 341.895 129.746 341.895 cv
139.498 341.895 li
142.037 341.895 144.096 343.953 144.096 346.493 cv
144.096 400.157 li
cp
.67126 0 .361639 0 cmyk
f
33.2114 405.65 mo
148.707 405.65 li
148.707 400.157 li
33.2114 400.157 li
33.2114 405.65 li
cp
.0561837 .0369573 .0352789 0 cmyk
f
gsave
249.211 80.4048 mo
7.89453 220.642 li
250.789 360.878 li
492.105 220.64 li
249.211 80.4048 li
cp
clp
312.309 175.083 mo
306.625 171.801 li
303.054 173.876 li
308.738 177.158 li
312.309 175.083 li
cp
331.106 175.177 mo
322.984 170.488 li
316.349 174.344 li
324.47 179.033 li
331.106 175.177 li
cp
334.593 169.121 mo
321.481 161.551 li
318.141 163.492 li
331.252 171.062 li
334.593 169.121 li
cp
308.613 154.787 mo
301.301 150.565 li
291.807 156.083 li
299.119 160.304 li
308.613 154.787 li
cp
337.811 158.959 mo
343.228 155.811 li
326.515 146.161 li
321.097 149.31 li
337.811 158.959 li
cp
411.224 200.723 mo
399.725 194.083 li
393.181 197.887 li
404.68 204.526 li
411.224 200.723 li
cp
314.335 147.226 mo
322.895 142.251 li
317.45 139.108 li
308.891 144.082 li
314.335 147.226 li
cp
342.274 213.147 mo
352.517 219.061 li
358.118 215.805 li
347.876 209.892 li
342.274 213.147 li
cp
393.109 224.832 mo
396.233 226.635 li
403.443 222.444 li
400.32 220.641 li
393.109 224.832 li
cp
414.571 202.655 mo
399.821 211.228 li
406.076 214.839 li
420.827 206.267 li
414.571 202.655 li
cp
414.835 230.309 mo
418.853 232.628 li
424.179 229.534 li
420.16 227.213 li
414.835 230.309 li
cp
225.375 221.092 mo
234.504 221.791 li
235.194 218.683 li
226.057 217.988 li
225.375 221.092 li
cp
247.841 199.655 mo
252.399 202.287 li
259.671 198.061 li
255.112 195.429 li
247.841 199.655 li
cp
380.343 204.749 mo
374.144 208.351 li
387.494 216.059 li
393.693 212.457 li
380.343 204.749 li
cp
255.74 128.042 mo
260.958 131.721 li
272.865 126.061 li
267.647 122.383 li
255.74 128.042 li
cp
246.57 222.49 mo
259.045 223.442 li
260.147 218.451 li
247.68 217.502 li
246.57 222.49 li
cp
261.931 206.236 mo
265.946 203.903 li
262.529 201.93 li
258.514 204.264 li
261.931 206.236 li
cp
252.343 304.277 mo
238.38 301.329 li
230.197 306.085 li
239.745 311.598 li
252.343 304.277 li
cp
125.652 203.427 mo
117.5 198.721 li
112.159 201.824 li
120.311 206.531 li
125.652 203.427 li
cp
56.769 192.197 mo
50.5527 188.608 li
40.5679 194.41 li
46.7847 198 li
56.769 192.197 li
cp
258.305 321.408 mo
269.804 328.047 li
273.827 325.709 li
262.328 319.07 li
258.305 321.408 li
cp
236.019 321.483 mo
253.534 331.597 li
260.285 327.673 li
242.77 317.561 li
236.019 321.483 li
cp
271.032 314.012 mo
259 307.064 li
253.675 310.159 li
265.707 317.106 li
271.032 314.012 li
cp
51.7969 196.641 mo
47.7666 198.983 li
55.9727 203.721 li
60.0034 201.379 li
51.7969 196.641 li
cp
34.7705 206.536 mo
49.022 206.224 li
50.8916 205.138 li
44.0117 201.166 li
34.7705 206.536 li
cp
177.104 248.393 mo
183.418 244.724 li
175.775 240.311 li
169.461 243.98 li
177.104 248.393 li
cp
316.52 308.449 mo
307.125 303.025 li
301.271 306.428 li
310.665 311.852 li
316.52 308.449 li
cp
145.161 197.665 mo
150.128 200.533 li
158.404 195.724 li
153.437 192.855 li
145.161 197.665 li
cp
274.277 116.037 mo
271.102 109.251 li
266.232 110.008 li
269.407 116.794 li
274.277 116.037 li
cp
292.299 315.966 mo
304.046 322.748 li
309.351 317.342 li
296.1 309.691 li
292.299 315.966 li
cp
259.364 121.817 mo
252.001 116.625 li
238.691 122.957 li
246.054 128.141 li
259.364 121.817 li
cp
120.86 224.904 mo
128.743 229.455 li
149.203 228.68 li
131.726 218.589 li
120.86 224.904 li
cp
145.859 223.35 mo
152.181 219.676 li
143.296 211.866 li
134.661 216.884 li
145.859 223.35 li
cp
153.761 168.561 mo
133.747 157.005 li
128.36 160.136 li
148.374 171.691 li
153.761 168.561 li
cp
124.288 215.228 mo
135.154 208.913 li
129.061 205.396 li
118.195 211.71 li
124.288 215.228 li
cp
155.809 188.145 mo
166.307 182.044 li
156.673 176.482 li
146.176 182.583 li
155.809 188.145 li
cp
220.977 197.727 mo
231.867 204.015 li
236.794 201.151 li
225.904 194.864 li
220.977 197.727 li
cp
373.808 169.161 mo
368.589 168.047 li
362.227 178.071 li
367.453 179.188 li
373.808 169.161 li
cp
361.163 192.53 mo
365.829 189.818 li
362.05 187.636 li
357.383 190.348 li
361.163 192.53 li
cp
400.816 269.236 mo
395.456 266.142 li
389.104 269.833 li
394.464 272.928 li
400.816 269.236 li
cp
411.841 251.58 mo
422.33 257.636 li
430.544 252.862 li
420.055 246.807 li
411.841 251.58 li
cp
11.769 224.254 mo
18.0244 227.866 li
29.0503 221.458 li
22.7954 217.846 li
11.769 224.254 li
cp
42.2607 226.093 mo
37.0625 223.092 li
28.0283 228.342 li
33.2266 231.343 li
42.2607 226.093 li
cp
347.053 192.071 mo
358.355 185.503 li
348.514 179.821 li
337.211 186.389 li
347.053 192.071 li
cp
299.757 247.854 mo
314.394 260.006 li
324.066 256.101 li
309.437 243.953 li
299.757 247.854 li
cp
197.566 260.207 mo
203.88 256.537 li
186.303 246.389 li
179.989 250.059 li
197.566 260.207 li
cp
102.417 174.345 mo
89.3135 166.779 li
74.1724 175.579 li
80.5103 187.076 li
102.417 174.345 li
cp
370.02 235.14 mo
379.73 240.746 li
385.607 237.331 li
375.897 231.725 li
370.02 235.14 li
cp
109.228 167.332 mo
105.466 157.393 li
92.7466 164.785 li
103.212 170.827 li
109.228 167.332 li
cp
104.113 187.37 mo
114.511 181.327 li
111.083 173.196 li
95.3745 182.325 li
104.113 187.37 li
cp
163.738 314.471 mo
169.045 317.534 li
181.474 310.312 li
174.19 308.396 li
163.738 314.471 li
cp
411.887 243.271 mo
395.763 241.392 li
382.782 248.935 li
392.493 254.541 li
411.887 243.271 li
cp
64.4834 244.764 mo
52.5757 251.685 li
56.7095 254.071 li
70.2754 248.108 li
64.4834 244.764 li
cp
190.011 316.438 mo
184.99 313.54 li
177.458 317.917 li
182.478 320.815 li
190.011 316.438 li
cp
394.614 255.766 mo
406.476 262.614 li
411.027 259.97 li
399.165 253.121 li
394.614 255.766 li
cp
138.93 306.148 mo
153.345 314.471 li
167.091 306.481 li
146.654 301.659 li
138.93 306.148 li
cp
428.73 226.889 mo
434.422 230.175 li
441.74 225.922 li
436.048 222.636 li
428.73 226.889 li
cp
102.158 268.993 mo
94.8081 264.749 li
83.728 271.188 li
91.0781 275.432 li
102.158 268.993 li
cp
231.076 291.439 mo
239.987 293.104 li
244.715 290.357 li
238.807 286.946 li
231.076 291.439 li
cp
455.31 239.73 mo
397.159 234.12 li
430.032 216.464 li
432.456 217.058 438.692 218.79 444.384 222.075 cv
450.804 225.782 456.53 231.467 455.31 239.73 cv
cp
359.944 201.404 mo
371.393 200.451 382.008 197.383 390.237 192.601 cv
396.505 188.958 li
395.411 189.889 li
440.454 207.781 li
393.678 232.909 li
359.944 201.404 li
cp
347.555 229.333 mo
288.58 186.389 li
301.867 185.512 li
314.145 192.601 li
324.542 198.604 338.775 201.886 353.403 201.712 cv
375.985 222.801 li
347.555 229.333 li
cp
380.928 274.566 mo
351.405 265.919 li
351.104 265.834 li
263.712 188.037 li
286.305 186.541 li
284.779 187.24 li
346.31 232.05 li
360.06 228.893 li
380.928 274.566 li
cp
385.938 282.351 mo
339.228 297.299 li
361.967 275.417 li
360.296 274.834 li
385.938 282.351 li
cp
332.902 299 mo
300.414 293.506 li
347.929 271.209 li
358.548 274.321 li
332.902 299 li
cp
302.662 328.101 mo
285.123 317.975 li
298.574 294.369 li
298.034 295.451 li
330.83 300.999 li
302.662 328.101 li
cp
260.448 340.311 mo
216.386 314.871 li
218.293 315.094 li
224.955 295.22 li
285.793 306.005 li
278.447 318.888 li
287.911 324.351 li
260.448 340.311 li
cp
266.378 351.688 mo
234.452 354.604 li
213.883 342.729 li
232.311 332.02 li
266.378 351.688 li
cp
211.122 341.135 mo
185.916 326.582 li
204.345 315.873 li
229.55 330.425 li
211.122 341.135 li
cp
194.906 302.47 mo
164.363 295.656 li
203.764 272.76 li
228.541 272.684 li
214.728 313.914 li
194.906 302.47 li
cp
126.762 287.263 mo
128.669 287.513 li
137.738 263.801 li
178.448 279.475 li
154.426 293.435 li
126.762 287.263 li
cp
118.539 261.797 mo
113.797 262.06 109.128 261.717 104.78 260.875 cv
141.17 241.219 li
192.892 271.081 li
179.842 278.664 li
180.921 277.725 li
136.945 260.786 li
118.539 261.797 li
cp
91.7969 256.218 mo
89.6426 254.975 87.7617 253.548 86.2339 251.96 cv
72.9102 238.125 li
132.394 236.152 li
138.409 239.625 li
100.808 259.931 li
97.4912 258.994 94.4385 257.743 91.7969 256.218 cv
cp
53.9976 235.284 mo
55.8955 235.048 li
47.1162 211.844 li
69.4717 210.468 li
69.2656 209.345 li
79.7847 234.397 li
53.9976 235.284 li
cp
27.9834 210.757 mo
33.7139 194.945 li
57.4219 181.167 li
68.7905 208.237 li
27.9834 210.757 li
cp
75.5327 200.074 mo
98.2334 195.817 li
111.575 233.302 li
89.646 234.055 li
74.9268 199.006 li
75.5327 200.074 li
cp
126.517 190.514 mo
170.182 231.276 li
139.544 232.336 li
138.907 232.358 li
135.64 232.469 li
113.512 233.231 li
115.44 233.004 li
101.958 195.118 li
126.517 190.514 li
cp
117.505 157.437 mo
131.275 149.435 li
182.904 179.243 li
181.217 178.677 li
151.068 209.171 li
129.198 188.741 li
117.505 157.437 li
cp
181.024 136.294 mo
215.616 153.451 li
167.698 164.259 li
168.411 165.31 li
158.578 159.632 li
160.357 156.221 166.535 146.082 181.024 136.294 cv
cp
166.964 125.469 mo
194.797 102.933 li
213.638 117.636 li
200.912 121.136 189.576 125.937 179.893 131.939 cv
178.729 132.661 177.61 133.391 176.53 134.117 cv
166.964 125.469 li
cp
238.575 91.3857 mo
246.618 112.132 li
227.445 121.799 li
210.937 108.921 li
238.575 91.3857 li
cp
270.366 93.1758 mo
272.859 100.394 li
271.585 99.5435 li
249.953 110.444 li
242.253 90.562 li
270.366 93.1758 li
cp
273.304 101.672 mo
281.853 126.395 li
283.69 131.734 277.708 136.961 268.512 138.043 cv
261.621 138.859 li
255.945 139.523 250.084 138.466 246.045 136.134 cv
245.454 135.792 244.901 135.424 244.395 135.029 cv
228.604 122.708 li
229.892 123.559 li
273.304 101.672 li
cp
288.53 125.633 mo
285.294 116.273 li
312.32 131.876 li
294.466 142.251 li
317.025 155.276 li
294.528 168.351 li
273.45 141.321 li
284.246 138.997 290.866 132.379 288.53 125.633 cv
cp
338.982 147.27 mo
349.202 153.17 351.726 161.871 346.547 169.143 cv
299.97 142.251 li
315.081 133.47 li
338.982 147.27 li
cp
295.388 169.45 mo
296.776 170.252 li
319.794 156.875 li
344.321 171.035 li
345.692 170.238 li
344.074 172.171 341.893 173.983 339.134 175.586 cv
316.798 188.567 li
304.974 181.74 li
295.388 169.45 li
cp
257.995 184.435 mo
239.052 185.686 li
236.365 168.564 li
237.339 169.544 li
278.391 155.855 li
298.586 181.754 li
258.003 184.439 li
257.995 184.435 li
cp
215.344 211.75 mo
215.504 212.872 li
209.565 191.618 li
257.233 188.46 li
280.134 208.846 li
215.344 211.75 li
cp
219.336 224.502 mo
219.066 225.616 li
215.81 213.989 li
279.448 211.139 li
280.29 229.744 li
219.336 224.502 li
cp
252.099 251.345 mo
251.222 229.525 li
280.395 232.032 li
281.24 250.886 li
252.099 251.345 li
cp
219.388 226.787 mo
247.315 229.187 li
248.183 250.833 li
241.958 245.685 li
239.92 244 237.624 242.423 235.11 240.972 cv
231.134 238.676 226.613 236.696 221.71 235.105 cv
219.388 226.787 li
cp
188.647 234.028 mo
198.716 233.68 208.755 234.94 217.696 237.67 cv
222.564 239.16 227.042 241.077 230.942 243.329 cv
233.229 244.649 235.318 246.085 237.171 247.618 cv
263.254 269.184 li
203.699 269.375 li
145.083 235.533 li
188.647 234.028 li
cp
203.512 191.141 mo
206.438 201.628 li
173.186 191.351 li
184.338 180.071 li
203.512 191.141 li
cp
204.869 186.358 mo
169.923 166.183 li
195.905 160.322 li
204.869 186.358 li
cp
211.48 143.989 mo
187.666 132.184 li
196.318 127.299 206.213 123.345 217.182 120.41 cv
231.212 131.351 li
229.679 130.652 li
211.48 143.989 li
cp
214.494 145.427 mo
232.417 132.295 li
238.926 137.376 li
239.637 137.928 240.416 138.449 241.241 138.925 cv
246.879 142.181 255.083 143.659 262.996 142.724 cv
267.712 142.171 li
277.578 154.818 li
276.596 153.843 li
236.173 167.327 li
234.284 155.299 li
212.96 144.728 li
214.494 145.427 li
cp
217.289 154.284 mo
224.944 158.082 li
229.377 186.332 li
207.345 187.788 li
209.258 187.57 li
199.583 159.489 li
218.001 155.335 li
217.289 154.284 li
cp
153.418 211.354 mo
171.251 193.305 li
205.921 204.019 li
206.831 203.026 li
215.289 233.288 li
206.759 231.24 197.529 230.332 188.274 230.652 cv
172.387 231.2 li
174.037 230.608 li
153.418 211.354 li
cp
225.703 292.989 mo
232.439 272.893 li
230.524 272.675 li
267.339 272.555 li
292.843 293.635 li
286.402 304.937 li
286.965 303.85 li
225.703 292.989 li
cp
324.933 277.64 mo
296.664 290.905 li
251.542 253.607 li
282.467 253.121 li
324.933 277.64 li
cp
285.164 251.501 mo
283.372 211.727 li
346.21 267.66 li
326.451 276.927 li
327.823 276.13 li
285.164 251.501 li
cp
354.98 160.812 mo
382.374 168.123 li
366.692 195.722 li
368.54 196.079 li
364.086 197.041 359.369 197.61 354.534 197.749 cv
342.244 198.091 330.183 195.62 321.008 190.918 cv
343.276 177.978 li
351.398 173.257 355.291 167.01 354.98 160.812 cv
cp
410.021 175.501 mo
385.401 189.809 li
381.195 192.253 376.27 194.186 370.912 195.531 cv
385.946 169.076 li
410.021 175.501 li
cp
457.248 239.917 mo
459.178 240.02 li
460.578 230.893 454.263 224.616 447.18 220.526 cv
441.999 217.534 436.406 215.713 433.121 214.803 cv
444.755 208.551 li
472.16 198.639 li
470.089 196.724 li
443.613 206.302 li
397.9 188.148 li
426.16 171.725 li
421.324 168.933 li
411.485 174.651 li
412.294 173.626 li
355.666 158.518 li
354.857 159.542 li
354.161 154.684 350.859 149.928 344.957 146.032 cv
346.368 146.847 li
364.659 136.217 li
361.897 134.624 li
343.668 145.217 li
343.475 145.106 343.298 144.985 343.105 144.874 cv
319.203 131.075 li
337.417 120.49 li
334.656 118.896 li
316.442 129.48 li
283.239 110.311 li
273.126 81.0635 li
266.443 81.8208 li
269.146 89.6401 li
237.98 86.7368 li
207.385 106.143 li
189.548 92.2231 li
184.08 94.5698 li
193.578 101.979 li
191.99 101.32 li
164.701 123.425 li
153.365 113.179 li
150.089 114.395 li
173.579 135.626 li
175.221 135.021 li
162.747 143.744 156.53 152.45 153.911 156.938 cv
115.571 134.803 li
110.767 137.595 li
128.514 147.841 li
113.258 156.707 li
125.083 188.407 li
74.4673 197.906 li
61.9297 168.058 li
52.4736 169.38 li
56.8843 179.88 li
55.5034 179.083 li
30.1406 193.823 li
23.7358 211.483 li
-11.7261 232.091 li
-8.96533 233.686 li
26.4204 213.122 li
43.2197 212.088 li
52.0303 235.355 li
-.212402 237.159 li
.152344 240.539 li
70.3198 238.209 li
68.9614 238.65 li
77.189 247.191 li
41.6367 262.679 li
43.9839 264.486 li
79.1069 249.186 li
82.834 253.051 li
84.5586 254.837 86.6587 256.439 89.0806 257.838 cv
96.8164 262.305 107.715 264.664 118.92 264.05 cv
133.968 263.222 li
124.93 286.854 li
67.0386 273.936 li
63.5625 279.199 li
189.498 307.301 li
201.583 314.278 li
182.55 325.34 li
142.512 319.792 li
141.617 321.982 li
182.178 327.603 li
208.378 342.729 li
194.187 350.976 li
196.948 352.569 li
211.139 344.323 li
233.113 357.01 li
268.396 353.785 li
268.09 352.677 li
275.625 357.027 li
282.491 353.037 li
264.598 342.706 li
292.06 326.747 li
309.954 337.077 li
314.069 334.687 li
304.081 328.92 li
305.752 329.503 li
335.198 301.169 li
388.991 283.953 li
388.048 282.965 li
399.452 286.309 li
403.829 281.281 li
385.571 275.934 li
363.699 228.055 li
377.757 224.827 li
377.029 223.776 li
391.164 236.97 li
471.312 244.7 li
472.254 241.365 li
457.248 239.917 li
cp
66.9497 262.273 mo
77.8398 268.561 li
85.6636 264.015 li
74.7729 257.727 li
66.9497 262.273 li
cp
247.422 145.841 mo
240.273 141.713 li
231.346 146.901 li
238.496 151.029 li
247.422 145.841 li
cp
256.729 157.534 mo
266.619 154.074 li
254.17 146.887 li
246.255 151.487 li
256.729 157.534 li
cp
231.022 137.251 mo
223.46 143.084 li
227.529 144.857 li
235.092 139.023 li
231.022 137.251 li
cp
239.067 155.664 mo
247.513 160.54 li
252.821 158.429 li
243.535 153.068 li
239.067 155.664 li
cp
52.145 247.565 mo
43.2217 242.413 li
36.5395 246.296 li
45.4634 251.448 li
52.145 247.565 li
cp
238.255 281.754 mo
249.639 288.327 li
257.562 283.723 li
246.178 277.149 li
238.255 281.754 li
cp
110.686 270.641 mo
103.153 275.018 li
114.043 281.305 li
121.576 276.928 li
110.686 270.641 li
cp
229.167 265.252 mo
239.374 259.32 li
229.093 253.385 li
209.17 264.962 li
229.167 265.252 li
cp
222.938 249.831 mo
208.138 241.286 li
197.096 247.703 li
211.896 256.248 li
222.938 249.831 li
cp
265.759 290.949 mo
274.359 295.914 li
282.382 291.252 li
275.016 285.57 li
265.759 290.949 li
cp
level3{
gsave
clp
[183.892 0 0 105.919 230.264 219.045 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.j#l6.ioc4.NKT2.30H0.3'?.-la6--Q=$*-Q=$*-6!m(,oR^&,oIU$,T.L#,8_9u+rD0t+r;'r+Vtpp
+;Pan+;Pan*u,Ok*u#Fi*Y]=h*>9+e*"s"d*"inb)\Nea)\Nb`)A*S^)A!J\)%[A[(_7/X(_7/X(CgrU
((LiT((LfS'b(WQ'FbKO'FYEN'+53K'+50J&df!H&desG&IJjF&.&[D%g`OB%L<=?%L<=?%0m+<$jHq:
$jHn9$O-e8$3^S5$3^S5$3^S5#m:A2#m:A2#Qt81#Qk//#6P&."p+i+"p+i+"Te`*"T\W("9AN'"98H&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[183.892 0 0 105.919 230.264 219.045 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.Olnt.Olnt.Oceq.4?Sm-n$Jl-mpAi-RL/e-71&d-7'ra,pX`],U=W\,U4NY,9e<U+sA*Q+X&!P+WqmM
+<VaJ+!2RH+!2OF*Zc@D*Zc=B*??+>*#on:)]K_8)]K\6)B'M4)B'J2)&X;0)&X8.(`4&*(Ddl((Ddi&
()@Z#'bqGu'bqGt'GM5p',)#m',)#l&eYfi&eYfh&J5Te&J5Td&.fB`%hB0\%LrsX%1NaU%1NaT$k*OP
$O[=M$O[=M$47+I#mgnE#mgnE#mgnE#RC\A#RC\A#6tJ=#6tJ="pP89"U,&5"U,&5"9\i1"9\i1!s8W-
~>
<~*Zc@D*ZZ7A*?6%=*#oq<*#fh9)]K_8)]BV5)B'M4)B'M4)AsD1)&O2-(`4),(`*u)(Ddl((D[c%()@Z$
()@W"'bqGu'bqDs'GM2o',)#m',(uk&eYfi&eYcg&J5Te&J5Te&J5Qc&.f?_%hB0]%hB-[%LrsY%LrpW
%1NaU%1NaU%1NaT$k*OQ$k*OP$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%z!!!!!~>
<~+!2RH+!)IE*Zc@D*ZZ7A*?6%=*#oq<*#fh9)]K_8)]BV5)B'M4)AsD1)&X;0)&O2-(`4),(`*u)(D[c%
()@Z$()@Z$()@W"'bqDs'GM5q'GM2o',)#m',(uk&eYfi&eYcg&J5Te&J5Qc&.fBa&.f?_%hB0]%hB-[
%LrsY%LrsX%1NaU%1NaT$k*OQ$k*OP$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\@#6tJ=#6tJ<"pP89
"pP89"U,&5"U,&5"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%z!!!!!~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
53.9009 237.14 mo
165.842 233.113 li
165.842 233.113 207.871 229.841 217.988 236.032 cv
205.757 189.222 li
302.397 183.182 li
302.397 183.182 317.497 193.752 331.842 197.225 cv
346.187 200.698 371.103 202.661 393.299 188.014 cv
.67126 0 .361639 0 cmyk
@
394.568 190.548 mo
393.688 190.548 392.822 190.401 392.063 190.123 cv
391.762 190.011 391.485 189.882 391.234 189.737 cv
390.251 189.169 389.657 188.362 389.561 187.463 cv
389.474 186.652 389.809 185.859 390.502 185.23 cv
391.415 184.394 392.933 183.892 394.558 183.892 cv
395.436 183.892 396.302 184.039 397.06 184.317 cv
397.36 184.429 397.639 184.558 397.893 184.705 cv
398.879 185.274 399.476 186.083 399.572 186.984 cv
399.659 187.794 399.324 188.587 398.631 189.215 cv
397.694 190.063 396.214 190.548 394.569 190.548 cv
394.568 190.548 394.569 190.548 394.568 190.548 cv
cp
0 0 0 0 cmyk
f
394.558 182.892 mo
392.661 182.892 390.935 183.477 389.822 184.497 cv
388.894 185.338 388.445 186.432 388.566 187.569 cv
388.697 188.794 389.467 189.872 390.734 190.603 cv
391.035 190.776 391.363 190.93 391.711 191.059 cv
392.587 191.38 393.573 191.548 394.569 191.548 cv
396.458 191.548 398.183 190.968 399.301 189.958 cv
400.239 189.107 400.688 188.014 400.566 186.877 cv
400.435 185.651 399.664 184.572 398.393 183.839 cv
398.092 183.665 397.763 183.511 397.414 183.381 cv
396.537 183.06 395.552 182.892 394.558 182.892 cv
394.558 182.892 li
cp
394.558 184.892 mo
395.296 184.892 396.045 185.01 396.716 185.256 cv
396.966 185.349 397.192 185.455 397.393 185.571 cv
398.709 186.331 398.991 187.539 397.959 188.474 cv
397.19 189.17 395.895 189.548 394.569 189.548 cv
393.829 189.548 393.079 189.43 392.407 189.184 cv
392.159 189.092 391.935 188.987 391.734 188.871 cv
390.424 188.115 390.142 186.906 391.174 185.971 cv
391.937 185.271 393.232 184.892 394.558 184.892 cv
.67126 0 .361639 0 cmyk
f
53.9033 240.468 mo
53.0229 240.468 52.1567 240.321 51.3975 240.042 cv
51.0986 239.932 50.8208 239.802 50.5684 239.657 cv
49.5854 239.089 48.9912 238.282 48.895 237.383 cv
48.8086 236.572 49.1426 235.779 49.8359 235.15 cv
50.749 234.313 52.2666 233.812 53.8921 233.812 cv
54.7705 233.812 55.6357 233.958 56.3945 234.236 cv
56.6973 234.349 56.9761 234.479 57.2285 234.625 cv
58.2139 235.194 58.8101 236.003 58.9062 236.903 cv
58.9927 237.714 58.6587 238.506 57.9658 239.135 cv
57.0288 239.982 55.5483 240.468 53.9033 240.468 cv
53.9033 240.468 li
cp
0 0 0 0 cmyk
f
53.8921 232.812 mo
51.9956 232.812 50.2695 233.396 49.1567 234.416 cv
48.228 235.258 47.7793 236.352 47.9009 237.489 cv
48.0317 238.714 48.8013 239.792 50.0679 240.522 cv
50.3682 240.696 50.6973 240.85 51.0454 240.979 cv
51.9219 241.3 52.9072 241.468 53.9028 241.468 cv
55.7925 241.468 57.5176 240.888 58.6348 239.878 cv
59.5732 239.027 60.022 237.934 59.9004 236.797 cv
59.7695 235.571 58.9976 234.492 57.7275 233.758 cv
57.4263 233.584 57.0967 233.431 56.748 233.301 cv
55.8706 232.979 54.8867 232.812 53.8921 232.812 cv
53.8921 232.812 li
cp
53.8921 234.812 mo
54.6309 234.812 55.3794 234.93 56.0508 235.175 cv
56.2998 235.268 56.5259 235.374 56.7275 235.491 cv
58.0435 236.25 58.3252 237.459 57.2939 238.394 cv
56.5244 239.09 55.2285 239.468 53.9028 239.468 cv
53.1626 239.468 52.4136 239.35 51.7412 239.104 cv
51.4936 239.012 51.2686 238.906 51.0679 238.791 cv
49.7583 238.034 49.4766 236.826 50.5078 235.891 cv
51.2715 235.191 52.5664 234.812 53.8921 234.812 cv
.67126 0 .361639 0 cmyk
f
219.79 158.128 mo
294.527 114.979 li
294.527 91.5439 li
219.79 134.694 li
219.79 158.128 li
cp
f
.0154421 .00189212 .00241093 0 cmyk
%ADOBeginSubsetFont: FiraSans-Book AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginKIVPXW+FiraSans-Book dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7B07F04AC43DBD79E6F480CA94558A9201DE652E28E7BF56783034F45E68FACCF697646015905386F1BBB77B0700E13968A135A891B53B8D3A3A832279912780D206F36360CB0D63A78F3F1965EAB9EA95CA9957223D7FF266EFA4498A2744D9326A06BF474C062> |-/f <1C60D8A8C9B81E5FF31819508CE95AF9130C637F1C6C681BF5D21176113D9B56FE5DD5843CEBB5E9B89B41001327AE732B159BB244293E954F082928C5D5DDC7A4AC4A49EEFC1947F381989D628AB67F66B3DD> |-systemdict /gcheck known {setglobal} if end {end} ifendKIVPXW+FiraSans-Book /Encoding getdup 57 /nine putdup 102 /f putpop%ADOEndSubsetFont
/KIVPXW+FiraSans-Book*1 [32{/.notdef}rp /space 24{/.notdef}rp /nine 10{/.notdef}rp /D 4{/.notdef}rp /I 2{/.notdef}rp /L /M 6{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]KIVPXW+FiraSans-Book nfKIVPXW+FiraSans-Book*1 [11.2367 -6.4875 0 -11.2366 0 0 ]msf242.542 137.322 mo(9 km Left)[5.87695 -3.39307 3.01172 -1.73877 5.68604 -3.28271 9.61816 -5.55322 3.01172 -1.73877 5.25879 -3.03613 6.10107 -3.52246 3.73047 -2.15381 0 0 ]xysh230.567 144.049 mo
225.553 149.26 li
230.567 132.224 li
235.581 143.471 li
230.567 144.049 li
cp
f
212.376 150.895 mo
211.449 155.703 209.019 163.939 206.833 170.877 cv
205.739 174.352 204.705 177.517 203.945 179.812 cv
203.937 179.837 203.93 179.855 203.922 179.881 cv
202.729 177.66 200.85 174.054 199.117 170.269 cv
198.026 167.886 196.998 165.439 196.252 163.265 cv
195.879 162.179 195.577 161.161 195.373 160.268 cv
195.167 159.379 195.066 158.6 195.069 158.089 cv
195.069 155.261 196.058 152.145 197.662 149.364 cv
199.268 146.584 201.472 144.17 203.921 142.756 cv
206.37 141.343 208.575 141.211 210.181 142.136 cv
211.785 143.064 212.773 145.04 212.773 147.867 cv
212.777 148.449 212.643 149.532 212.376 150.895 cv
cp
203.921 139.617 mo
197.53 143.308 192.351 152.278 192.35 159.659 cv
192.354 160.701 192.538 161.764 192.83 162.946 cv
193.857 167.041 196.314 172.464 198.525 176.947 cv
200.736 181.417 202.696 184.897 202.701 184.906 cv
203.921 187.071 li
205.142 183.497 li
205.147 183.48 207.707 175.982 210.275 167.641 cv
211.559 163.468 212.846 159.086 213.821 155.297 cv
214.308 153.402 214.718 151.655 215.012 150.14 cv
215.304 148.62 215.488 147.344 215.492 146.298 cv
215.491 138.918 210.312 135.928 203.921 139.617 cv
cp
203.921 149.834 mo
202.048 150.916 200.53 153.545 200.53 155.708 cv
200.53 157.87 202.048 158.747 203.921 157.665 cv
205.794 156.584 207.312 153.954 207.312 151.792 cv
207.312 149.63 205.794 148.753 203.921 149.834 cv
cp
0 .85156 .162356 0 cmyk
f
260.611 467.948 mo
260.179 468.392 259.808 468.88 259.503 469.401 cv
259.038 469.161 li
258.971 468.863 258.688 468.658 258.379 468.694 cv
258.048 468.733 257.811 469.033 257.85 469.364 cv
257.889 469.695 258.189 469.932 258.52 469.894 cv
258.585 469.886 258.647 469.867 258.704 469.841 cv
259.155 470.075 li
258.904 470.629 258.722 471.214 258.616 471.819 cv
259.362 471.95 li
259.592 470.645 260.212 469.444 261.154 468.478 cv
260.611 467.948 li
cp
.35877 .201297 .147463 0 cmyk
f
266.099 465.646 mo
265.928 465.646 265.758 465.652 265.589 465.664 cv
265.516 465.037 li
265.704 464.889 265.811 464.648 265.782 464.393 cv
265.735 464 265.379 463.719 264.986 463.765 cv
264.593 463.812 264.312 464.167 264.358 464.561 cv
264.388 464.814 264.548 465.021 264.763 465.124 cv
264.836 465.748 li
264.123 465.864 263.434 466.08 262.777 466.395 cv
263.104 467.078 li
264.038 466.631 265.045 466.404 266.099 466.404 cv
266.596 466.404 267.092 466.458 267.574 466.563 cv
267.735 465.821 li
267.2 465.705 266.649 465.646 266.099 465.646 cv
cp
f
272.702 468.194 mo
273.032 468.153 273.268 467.853 273.227 467.521 cv
273.186 467.19 272.886 466.955 272.555 466.996 cv
272.246 467.034 272.02 467.3 272.025 467.604 cv
271.609 467.968 li
271.191 467.538 270.719 467.155 270.201 466.829 cv
269.797 467.47 li
270.931 468.185 271.818 469.196 272.36 470.396 cv
273.051 470.083 li
272.8 469.528 272.483 469.011 272.109 468.538 cv
272.511 468.187 li
272.572 468.199 272.636 468.202 272.702 468.194 cv
cp
f
265.552 475.855 mo
265.166 475.878 264.776 475.89 264.395 475.89 cv
263.514 475.89 262.662 475.829 261.916 475.711 cv
261.526 475.648 261.07 475.556 260.646 475.419 cv
261.692 477.279 263.715 478.544 266.034 478.544 cv
268.89 478.544 271.296 476.628 271.984 474.04 cv
271.302 474.489 270.478 474.865 269.525 475.162 cv
268.346 475.53 266.971 475.77 265.552 475.855 cv
cp
f
268.677 472.77 mo
267.927 472.77 267.317 472.159 267.317 471.409 cv
267.317 470.659 267.927 470.049 268.677 470.049 cv
269.427 470.049 270.038 470.659 270.038 471.409 cv
270.038 472.159 269.427 472.77 268.677 472.77 cv
cp
263.94 473.678 mo
262.92 473.678 262.09 472.848 262.09 471.828 cv
262.09 470.808 262.92 469.979 263.94 469.979 cv
264.959 469.979 265.79 470.808 265.79 471.828 cv
265.79 472.848 264.959 473.678 263.94 473.678 cv
cp
266.099 467.163 mo
262.747 467.163 260.02 469.829 260.02 473.106 cv
260.02 473.532 260.066 473.955 260.157 474.368 cv
260.83 474.851 262.862 475.258 265.504 475.099 cv
268.384 474.926 270.801 474.142 272.176 472.94 cv
272.171 472.745 272.156 472.55 272.131 472.358 cv
271.751 469.396 269.158 467.163 266.099 467.163 cv
cp
f
282.103 469.03 mo
281.808 468.914 281.297 468.721 280.72 468.793 cv
280.169 468.861 279.876 469.133 279.876 469.799 cv
279.876 470.665 li
282.104 470.665 li
282.104 472.383 li
279.876 472.383 li
279.876 477.837 li
277.945 477.837 li
277.945 472.383 li
276.605 472.383 li
276.605 470.665 li
277.945 470.665 li
277.945 469.777 li
277.945 468.097 278.84 466.994 280.513 466.994 cv
281.155 466.994 281.67 467.116 282.103 467.303 cv
282.103 469.03 li
cp
f
286.805 472.362 mo
286.628 472.332 286.448 472.315 286.279 472.315 cv
285.383 472.315 284.769 472.863 284.769 473.93 cv
284.769 477.837 li
282.837 477.837 li
282.837 470.665 li
284.71 470.665 li
284.71 471.45 li
285.162 470.776 285.85 470.473 286.73 470.473 cv
287.145 470.473 287.579 470.601 287.825 470.81 cv
286.805 472.362 li
cp
f
289.358 473.574 mo
292.533 473.574 li
292.355 472.656 291.8 472.138 290.972 472.138 cv
290.061 472.138 289.528 472.686 289.358 473.574 cv
cp
294.473 474.24 mo
294.473 474.462 294.457 474.729 294.436 474.892 cv
289.351 474.892 li
289.558 475.928 290.283 476.379 291.193 476.379 cv
291.815 476.379 292.489 476.128 293.007 475.69 cv
294.139 476.935 li
293.325 477.682 292.289 478.022 291.082 478.022 cv
288.884 478.022 287.36 476.527 287.36 474.27 cv
287.36 472.013 288.84 470.473 290.986 470.473 cv
293.051 470.473 294.465 472.005 294.473 474.24 cv
cp
f
297.011 473.574 mo
300.186 473.574 li
300.009 472.656 299.454 472.138 298.625 472.138 cv
297.714 472.138 297.182 472.686 297.011 473.574 cv
cp
302.126 474.24 mo
302.126 474.462 302.111 474.729 302.089 474.892 cv
297.004 474.892 li
297.211 475.928 297.936 476.379 298.847 476.379 cv
299.469 476.379 300.142 476.128 300.66 475.69 cv
301.792 476.935 li
300.978 477.682 299.942 478.022 298.736 478.022 cv
296.538 478.022 295.013 476.527 295.013 474.27 cv
295.013 472.013 296.493 470.473 298.64 470.473 cv
300.705 470.473 302.118 472.005 302.126 474.24 cv
cp
f
304.794 474.248 mo
304.794 475.38 305.542 476.224 306.637 476.224 cv
307.777 476.224 308.488 475.343 308.488 474.248 cv
308.488 473.152 307.777 472.271 306.637 472.271 cv
305.542 472.271 304.794 473.115 304.794 474.248 cv
cp
310.471 474.248 mo
310.471 476.401 308.977 478.022 307 478.022 cv
306.038 478.022 305.357 477.645 304.891 477.09 cv
304.891 480.798 li
302.966 480.798 li
302.966 470.665 li
304.853 470.665 li
304.853 471.457 li
305.32 470.872 306.008 470.473 306.993 470.473 cv
308.977 470.473 310.471 472.094 310.471 474.248 cv
cp
f
313.316 477.837 mo
311.384 477.837 li
311.384 470.665 li
313.316 470.665 li
313.316 477.837 li
cp
313.575 468.319 mo
313.575 469.015 313.035 469.548 312.339 469.548 cv
311.643 469.548 311.11 469.015 311.11 468.319 cv
311.11 467.623 311.643 467.075 312.339 467.075 cv
313.035 467.075 313.575 467.623 313.575 468.319 cv
cp
f
316.54 473.219 mo
319.241 470.665 li
321.609 470.665 li
318.131 474.04 li
321.632 477.837 li
319.256 477.837 li
316.54 474.936 li
316.54 477.837 li
314.608 477.837 li
314.608 467.18 li
316.54 467.18 li
316.54 473.219 li
cp
f
184.92 475.854 mo
184.92 472.646 li
184.524 472.03 183.675 471.503 182.796 471.503 cv
181.375 471.503 180.525 472.675 180.525 474.242 cv
180.525 475.81 181.375 476.967 182.796 476.967 cv
183.675 476.967 184.524 476.469 184.92 475.854 cv
cp
184.92 477.772 mo
184.92 476.718 li
184.393 477.436 183.528 477.948 182.532 477.948 cv
180.687 477.948 179.383 476.542 179.383 474.242 cv
179.383 471.986 180.672 470.521 182.532 470.521 cv
183.484 470.521 184.349 470.99 184.92 471.767 cv
184.92 468.002 li
186.019 468.002 li
186.019 477.772 li
184.92 477.772 li
cp
f
190.911 471.43 mo
189.402 471.43 188.655 472.704 188.596 473.788 cv
193.24 473.788 li
193.225 472.733 192.522 471.43 190.911 471.43 cv
cp
187.439 474.228 mo
187.439 472.177 188.904 470.521 190.925 470.521 cv
193.064 470.521 194.324 472.191 194.324 474.315 cv
194.324 474.594 li
188.596 474.594 li
188.685 475.927 189.622 477.04 191.145 477.04 cv
191.951 477.04 192.771 476.718 193.328 476.146 cv
193.855 476.864 li
193.152 477.567 192.2 477.948 191.042 477.948 cv
188.948 477.948 187.439 476.439 187.439 474.228 cv
cp
f
195.114 476.835 mo
195.686 476.044 li
196.154 476.586 197.048 477.055 198.015 477.055 cv
199.099 477.055 199.685 476.542 199.685 475.839 cv
199.685 474.125 195.305 475.18 195.305 472.558 cv
195.305 471.459 196.257 470.521 197.941 470.521 cv
199.143 470.521 199.992 470.976 200.563 471.547 cv
200.05 472.309 li
199.626 471.796 198.85 471.415 197.941 471.415 cv
196.975 471.415 196.374 471.898 196.374 472.528 cv
196.374 474.081 200.753 473.056 200.753 475.81 cv
200.753 476.996 199.802 477.948 197.971 477.948 cv
196.813 477.948 195.832 477.597 195.114 476.835 cv
cp
f
202.174 477.772 mo
202.174 470.697 li
203.273 470.697 li
203.273 477.772 li
202.174 477.772 li
cp
201.984 468.954 mo
201.984 468.544 202.321 468.207 202.717 468.207 cv
203.126 468.207 203.463 468.544 203.463 468.954 cv
203.463 469.364 203.126 469.687 202.717 469.687 cv
202.321 469.687 201.984 469.364 201.984 468.954 cv
cp
f
210.216 475.736 mo
210.216 472.646 li
209.835 472.03 208.985 471.503 208.107 471.503 cv
206.686 471.503 205.836 472.631 205.836 474.198 cv
205.836 475.751 206.686 476.894 208.107 476.894 cv
208.985 476.894 209.835 476.352 210.216 475.736 cv
cp
205.089 479.589 mo
205.646 478.769 li
206.232 479.472 206.935 479.735 207.946 479.735 cv
209.118 479.735 210.216 479.164 210.216 477.611 cv
210.216 476.601 li
209.704 477.318 208.839 477.86 207.843 477.86 cv
205.998 477.86 204.693 476.483 204.693 474.198 cv
204.693 471.928 205.982 470.521 207.843 470.521 cv
208.795 470.521 209.645 470.99 210.216 471.767 cv
210.216 470.697 li
211.314 470.697 li
211.314 477.567 li
211.314 479.911 209.674 480.644 207.946 480.644 cv
206.745 480.644 205.924 480.409 205.089 479.589 cv
cp
f
217.92 477.772 mo
217.92 473.144 li
217.92 471.898 217.291 471.503 216.339 471.503 cv
215.474 471.503 214.654 472.03 214.244 472.602 cv
214.244 477.772 li
213.145 477.772 li
213.145 470.697 li
214.244 470.697 li
214.244 471.723 li
214.742 471.137 215.708 470.521 216.763 470.521 cv
218.243 470.521 219.019 471.269 219.019 472.807 cv
219.019 477.772 li
217.92 477.772 li
cp
f
223.912 471.43 mo
222.403 471.43 221.655 472.704 221.597 473.788 cv
226.24 473.788 li
226.226 472.733 225.522 471.43 223.912 471.43 cv
cp
220.44 474.228 mo
220.44 472.177 221.905 470.521 223.926 470.521 cv
226.064 470.521 227.325 472.191 227.325 474.315 cv
227.325 474.594 li
221.597 474.594 li
221.685 475.927 222.623 477.04 224.146 477.04 cv
224.951 477.04 225.771 476.718 226.329 476.146 cv
226.855 476.864 li
226.153 477.567 225.201 477.948 224.043 477.948 cv
221.949 477.948 220.44 476.439 220.44 474.228 cv
cp
f
233.857 475.854 mo
233.857 472.646 li
233.461 472.03 232.612 471.503 231.733 471.503 cv
230.312 471.503 229.463 472.675 229.463 474.242 cv
229.463 475.81 230.312 476.967 231.733 476.967 cv
232.612 476.967 233.461 476.469 233.857 475.854 cv
cp
233.857 477.772 mo
233.857 476.718 li
233.33 477.436 232.466 477.948 231.469 477.948 cv
229.624 477.948 228.32 476.542 228.32 474.242 cv
228.32 471.986 229.609 470.521 231.469 470.521 cv
232.421 470.521 233.286 470.99 233.857 471.767 cv
233.857 468.002 li
234.956 468.002 li
234.956 477.772 li
233.857 477.772 li
cp
f
243.407 476.967 mo
244.843 476.967 245.692 475.81 245.692 474.242 cv
245.692 472.675 244.843 471.503 243.407 471.503 cv
242.543 471.503 241.679 472.03 241.298 472.646 cv
241.298 475.854 li
241.679 476.469 242.543 476.967 243.407 476.967 cv
cp
240.199 477.772 mo
240.199 468.002 li
241.298 468.002 li
241.298 471.767 li
241.87 470.99 242.719 470.521 243.686 470.521 cv
245.531 470.521 246.835 471.986 246.835 474.242 cv
246.835 476.542 245.531 477.948 243.686 477.948 cv
242.689 477.948 241.826 477.436 241.298 476.718 cv
241.298 477.772 li
240.199 477.772 li
cp
f
248.036 479.545 mo
248.197 479.618 248.461 479.662 248.637 479.662 cv
249.12 479.662 249.442 479.501 249.691 478.915 cv
250.16 477.846 li
247.201 470.697 li
248.388 470.697 li
250.746 476.498 li
253.089 470.697 li
254.291 470.697 li
250.746 479.208 li
250.321 480.233 249.603 480.629 248.666 480.644 cv
248.431 480.644 248.065 480.6 247.86 480.541 cv
248.036 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
/KIVPXV+FiraSans-Regular*1 uf/KIVPXV+FiraSans-Regular uf/FiraSans-Regular uf/KIVPXW+FiraSans-Book*1 uf/KIVPXW+FiraSans-Book uf/FiraSans-Book uf/KIVPXX+FiraSans-SemiBold*1 uf/KIVPXX+FiraSans-SemiBold uf/FiraSans-SemiBold uf/KIVPXU+FiraSans-Light*1 uf/KIVPXU+FiraSans-Light uf/FiraSans-Light ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 23.0.2%%For: (Ayib) ()%%Title: (Isometric running mobile app infographic 2 up-01.eps)%%CreationDate: 6/26/19 5:13 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kl$B)HoC.)/hLeJVUB2WWM/bh@;57!p0*W/VLgU3qqs_Ao\%=ppj+;>a-CUPScZ'MrX1Gm.Y,ZAC]0.a+KaoL&dc-=T))qGk%&7uD\huXEt-G05HX0M4"(g:a:LTI.J-*b_;E^o+Y8WK2p58h:BApWAAA%lT$?Mn\9o1XM(CQ]>7"b>_pM5`:_lq<6\I-dE[.<3&8%14Q@Ep;T3>c/5V/6S9t]*?F_IGVnD?[duG6U^Ef-NoSf_-k.'5N"^XKhSb7_HHboMbOMgU8hkCC$H(W7-5r+a)2nb:(jHL.LRWu@%\5R#T"cP(t+rnj$q7`dL8T<9'-DOuN#8^?!MFU6[JUr1+,)Y>i-u=&iJduk-+u'EP$I<ULW[*UZN&6W_L^cOdYeq(!-nH!I"NUE`%Z]E&_5Pd#O/Dq;[q1o<('TN005mS3)!G6)^IcK)L1%REKFBD*TX-BF0\R0l4S-1h%:\@:rbd5a*^d/Q0n5`L/XKpJeGlU'GTApeG%7d(ATIB!8V7d@5c:f`]#_]]$X9IKmLPaJ'oeB+@UTJBu1L3S>sl,1UKr#j7o56=$C)#1mu\/C>M)O-Wu:5Ru::DGh,"S#.kKYr=n%]aCQ=OglG[`'P.VH!HVY?K+"%ET>M4JDD<pr?%U.YP&d:XsgBEN<W4b9Ne8MR(ll27'f3-,7^CMAFM/[e3O(\`/?eOg%61G!R8Y0%e"\?/%D7`jKp;ZkSi'$;5Ykk'Ys>!-JQ.D7-1F;4Ua5FhOD2$ANoufqQ>)Bp2K5Vq9kOQn$(*/\4`/$6+:Q+&@+q+RPbZF.56B%;%7W$HojR!7o(:>t&=LBTYCW]DAE[lB1L#I,-g_<4CkY2(TKb[Ti;$SUH@7@RS@hj*eJrXK:VSIE`gL5Ck<XNq6#?`t3#3-_c'is<;%(Gaa"aqn`NH(J";,=[800^8m.M]j<e>!*WJ$!Aaned8_&d8('0T)c+N%L[,2T_;edc7auGL[>:Dfg&!g)7a[ShAYooH,p<P):7I%%T<&S@NYcW'5/9nl'r=YApbm[:=Elu>jS"sr?R>a]\?AbZ+1!_5Z6Of7!pkt+cOA2Icn;KGn=[V)<>X:B-[b8M&,8\e*Jt3MG*U`>%FX4ar_2TT#nq_"dJWqXCPbr9N5M:PmF[YGD/d9lNq?JH)(h//?njUNS^<Q)H2`oeR%P#PAd&(<%5J?>SN%36A=;"J,OekbKNP6QX%VEgIM$u>,/-jN4lNnAmiJn.$NZPFdldgi**!*&3@@i;5$.?MuWBNB>J;Df[\m9E[4RY#k#TNBa^'W@Z+<E,WK%c;s.M@+@*6<rj(%>cWoH:f=UC"a$kH5n'0i"SEf1Hj%HrO[5omX]i(\clWWY7N)e_Aukto'ErXkBJZ<PWKBVe1j%,]aC+RpR4lBDFZMg+.P%kp(jX'D%c+3(c@5<<@bWcT]"09/JnXq'1^2S\TSEbn^[deFWDVkm;1G"7lqMq41JHbh`dM4?7q&$d.];+0iHt`1S\ho8.QGcPp:/,U14uP7G%X[enu2+MK&_nc=LB_HkunDFZhi.N_%BZa,ARtOCm!5L/+1=.T2(D@k+Tsk0]>2^=4_f`Ql^uu>`;LsrUG/eCWb;k)MJ[5tS+,L1O%6ak%&9mAK/!3R8e4qKf/"3_$-pn@@))@=bA&&MZT-T-)MguL+hkcn`O`#p`E*)O!@F4_-$AjH;rM`+Pc6g>LI_3e;T<P^]QF?+qK%,0_T%#*8><3$&ffY%VjLOYN2Qj#3sabikbTlpCFHJ)<\/!5940/2IZ@r<tW*Y=2S9YY)OBLfD"`qe0o`F9uQ8?YmbfBt]'N&-iW#%bmiTT!NY/U'P9-^&10s^c9Y+qFn5"`ehl+bh4?K*mq.8l/2*$*BN;Repo6G$!:uWfejMD=\>h;LO>DP$OB(]W?j%Y8#Y#Zg50.pm%JF8O#6B'=t\JgiAjXG*?l`A^"'D:3oHl3.4kpR,&g?,b!QM]g!..U<l9:erDkb"P=Yb`KYJ:.e?6072Q9atKm*(Vp92EONHg1D3C%n8M`JW32/ELJu.f4&tL%gH8^?#m+Z?[T7=A&RO&Gq+&mtCU^e;nNW[$;%sT%!N3EDaOe;Y^GEYQQakUMZ\60sZQi#ec1NfhYVSod%LEfpg1"Z<HLddJo5h;h=6Z>*;cU^6l#reach0bKCF!?DC@qO?#+>?1@iHs911D+YsQJMf:4^h*<#f1Ul,18l:L_::D9Me-5+Gh4l%K0KdjiE88FrmH#uO+Ndh_F&PZr"1oK@osMAYmcr<;W'3c7BeI8@3P,1RM#TLC.tDBPNH;,J-:?O$A]t:'TIhQ$\CSEquK'9<9r!o%['RJ@d&oiq"/Hc!9B.ip#AK>2d1dUu,BT/Fd:kX/dr^o$A[*eX-*k?<RAI4JCa9tEVR#H&-;/!Xfj#$1iAi(ub`TG4Nlm&sO^&Un%eI]S/5\U4,/sT)18<';O)ag%:!2QFDhFrRseV*a<.]QO\JFFd,**nYN324ttn0j!aU'VDYdDH7:Kl@Ue&T4Ji+W*]M9QcQ4q$/UM%A^DM-&!8+<SmrTC"4[d07]kW;_\<uCNM@(@Lm.$H63KY3/3j_X4o,8j5bHKse0l\V[m"iN1%eEB-4ch.i(Qgql(pCP$J^n>QXY`(%QSaKG?Ujn&mQoXpqCr,@Iu![tk9P%!O@XuEi>CX]P/Jn:[/1tePZRrM-d7,CYl3fBpn@V=Noq7h`'Q9!O8;N`GFJ]d!XHSl[][Eq%Ek]@KL**HJ\.4$o"p02^KE0hY0ZX3^'d+s;;'s"u*MpLl=N?F+^!dto=d]()An_>GcZq:kd8.[(r7l!MIMh5-a!^@"U7>&hqIGhm%/okN:;8Fr=F)?pHE3q-5&kj2eUB:UVNB(,6@"l%/*F<FPch2fBb+::.<n[oPNAW>3I?T0+Qnjt27X:2"H-@4OU(d#liG$L<9js$%%VD^<Qf7_F6k"63N$3q1oUHHX()QoJH=2h^.7Qf$)7dr9o/.[e`Ss+".Pi&S&CP8t1p;@7Vgkn:-KWtJ]k?nb8(bam)Po)rS$o9_U%nB\YFMdra2k1,'TEFE]-X%tPn<'HFA6,feir/H/u:r[/b!]8Xha*0WL,S)?^+U-Z#eEN%r*`BdZEKcdIE/ABq1I/kGs,[81IKkW%%9JQIAaN92Wn;mb?YXKRQ^dATVa8pKL#>DJ]=MEX)3o]n;YS]o[\P-rMNqOb4oFYFV(Yjb//[N:l8WhLO#8NI%g4Zf58Wg)rB_EC#%p+pV!M<Z&YF66[(Gf/n@#83e-M@f@&=I(s:88mR/(Ba#@,dZe`,^-dTX)+*>r[$NXSO:H-bO9gJ"jf4R`b48UcVLqI$IZJ;h1)<X%_cJ!2ise?-5GL0M%nIa7?)GltgC/#5lo*bbT/4O*6i_*_DkkqD^\9[af_Pm;k;J:!d%@P8Asa[5^[U?um#R8WY_$lFr7LMrF1Eld%),ZJ1ju8Zt2;G*'`J7s]^FtarL:1K$[oXb>(;0l)^C9`)lOuXJWlPK=Bq'Fmhl0V]Fj4AgRZH@@kifM@$]!8fcWGVJ1AErLZCb;O%q2OL#?1A5*/)%0'"%M:7rfC-=0A>fW?hcR\P5dX[;UBCc?S0ecS4*j<L7*Ucs*gl;@7E.S_XreK4"V')DJnq]?I$&K2R'8q"TKZE%kl0YjgXl/nAVWjFQ$Ou$ao)U([[iGmYXnb"57SWnrm\r_N%"72M.M/SXu,V8Xs<kKlY$fP*GrXAY*XSH1U>bhhnprmL.VPP3CncY%qIfTF%L5eJrjqc^0=:u/0I(pCf'jVBliJ7$1cFc)-K(L4,)amJ&'l@W4E'U^g1'u>P(RuU,k(G<I+jp6+7S4;G13@+pEn,p41-Zs%pY0]:2_:,?Z$kM<qsLVS]4!)"oB'rGEUC9LA&`0$rB.R*n:p"P41E&92=6="5+L?"_B2NiplsHG__-p3R[oD`ZTGqZlg)d%`q=+S%r3]sfjR$:Eq4tKH;MJ8d14;V'=ME)Oka-jZ07nUcps5A0).!pP>p_cor3Y^Ek2[-#Zs!0^P\"I6LNCmeLJI:.S7I"jh/tr"==3q)%a+k'gAU$pp+!PUH4S^d_\A[P_NH1#]N/-F,n5%hY$%KbCJ7*TLm28[QGM_^)GMkRNp5HaB]8oIq(fn/]q!QS5=<GG1B7=`;F`RYZ%0[`uHU;DCH)+H;b<aseMnSl-dTj#L(^<&V&9k$tmCRDe1LP*@ZBq2_JK7EoATj`GFj)79`'!Yi/an\u0;#f<_Rr=YRq/&%_nXgDK%)0R5V[^X3aW'Tn?@Y,dB&!=iW@)T9W3lV[9;dhoLrBc'H%)66"B)$OP2#`eoY/0PG>[9o@)YXC@pldHH7c9#*bc60W*L6ReriU\%%2R@2PO`?NM92WbH3Gb2<&Tdt-gLdm5>WZil?iLoqNLp?_D]<>JgXEn3lGLW08ZCXPETRqsV_>ArArE(#k;U\6S[m=]IdN'.2B5mB%2U7[#)eV?C3njIj1[Qj%EFt-^Fk?Te@H5SW8),&,b8`Fcm'tgI1)jl7E8WhGp:g1=)<2(5Dhn>ki?b5sg&A=3&)#P)5"UucHs#>C%4!>-Of\c9`p.#mJY90CkLTbf1,`PROBl7"<2&$2]cRed4:Ds"lB>b`Bnbs%=cZASoLAW!5n8AR3[O;(!Yc]&FgVLX9-#hmo4+(Ps%&0/@;Sp7_3oQK_A>C*dYl/:seh=et&*FcL1G;JUAoZK_Km5CYc0dgV$q*21Q\Q>hb#:%s>Lr0287V%n^K+T,_B\nQFg^f^So$#GB%G-?hlibkF8quNUCrFS6*%N4,.VfoJV`Vqo(Mgb/K\/C>@Ql-Ec:Ws7HO+V6;D]Ckns7NLMLBDc2#OqZ[*l):4amAoh4.OZ+]:?+q%2i@9o2e!YYhVs&"?&MM*d%Rs@i=;an_2`ooksDn"L3ESr*dIn7jY=p(Il`kX;ppu6&$jlR:o^qJc]R\k>681$pE]cU`kTF&pHSYo%^j`B?m.srUS#h$&QeAffiB-Jrg>[&sarouPN&MUNrjmj.KZAN6$X:o\]C$CNM,X7<<\a%,p;oDoN^`?!QhYSkm29MLY[O;lNYr-!%mh9`ZN,2T9eh]Y\Zp]kb]"r$(3o^k+^p9ODr/47Fqm64j>OLtL(?09)j08O\kLZ?8425kRlV**,kB6.i&$/!j;1U7E";]m0KFVeC%LGe84Re,+3*S-`^>2E]4q69"/=E@fkbWl"OR)>Ba2M*rj3U_'4os!SkV[H/p^#n,/]%sX]?S'iPa7,?pA[`Au^9"[Y5#"fo93mW_%e[IViIBLs^BC7.joAXth*:d@<YCPfM2E^K[0TV.:G'@Xi<O2!;37hbd=jsH.,7:`n#fc9"6b@ar_5Z]?mn#&\`.>+'iui^2H=Hdk%-h=>OQe5&<PSdh-%KB7oqk3P9g>&A[[nW0*I-*C&k_pA:Tg3fMd&d]`%R8Kk.+%qk1N!USBX0bqZ;pinfAb[l:W+qsbV*in<]9m,%TRLXE^jfP\LZVDM?\7n>-h!V"e]ab`Ka.Ee!+2^M,ELJ8LjPtJZ(q;jc\>f;Jcep'042FJ/jN-hZTgo%:Y_\enZh%#XK$0]jjpi0%Nt(i_R%opae7+G=fg.Kd6SW6$0-?'3LLSQ&Qua\<*/Zb3@a:[7F"$/fo]]^o=2gjgFf8"4Q`eiG4DB:<;d])1r3(B"a)=r6%`Q@^%haP)ra)c(/KlZAT_Ugu?j%KA8#1"_uL>,\=gqU6$j(B_ZNoenN7X"]3%cc`1r!sjlZ24RI@2f+"Blr)IB4#8t_oYr7.<K2JZK"mI%iFK"h1uu8(qekft%]<M/7R')G%q"R#X*UE&Lu/_-WHA)GNjRL^p[eVrp,@@;gYl`Dh'u@lpWNPCBnNhGmE2L3jWLh!Xdm;C,]8?d%]X>(ShU(^hq6AD-)#b+X"Suh=TRq:SIk!t`I<5;&ahk1dkMIh)m>kK^8_i/JEVk5<0hu2$UJ-'u3a:qoe"H_(7mZ/Tp"=3UQVG<r%3DVh$A=+b);97'(kJVUQp_e)1U&=FF>5k0)jc;e)j&#_7PX!`=)#5ZC&*&Tgare5V#p7;347(Q0jc;e)A+.P^$F@^k^n!'+*)\a@%UX\/'b-f-*K!t^9*he(sGKk($'V#p`ZT3kj+1";gG_ifTlJG\5%.DIT`ktDQ@D6SuFGmlT^K3b>k-QeP:01o?B_%K6BDanJ[BW$C%-C"N*JM_M';q`0_hYMO/KPkc,(90@GAtN[h_^S!/;i!UkpN`YJD)'3S%O!T:ItpCIra`BJq"KmbdJ0dkIKD$Tj+e%!V*BEBGLM2I%,S#gg%g(USe!0i(-)iVb>%8Vt14*5?4IcM[#;<#n;0:KT;XeV;STZF!XtR]<Hr4t&gTPs#N5`%T[hETdNqR$3RW4@2HQS\r4q>3O%p4!ANo4).??>b"W`kI_]'em[V[=Yqu0S_WPbPuXor/_"%Ekm+J!Om&sLFdDFIXKNocu>(fa9$RKUI,g,X*bnm^orh')Le$&5Ee@M%llD8)cVFTQ];?'Pi#rOlUk+:Xn;mkRM)=^&'K\I70l@**RfeDZ>Rn7I8,JGOqXC\O"`D6"+V3B.4E.>[l$*&jVD%al0S]2O_[.9;%'/oj^C[tiO1E=[Jq+hd5X"J>BcO2`QQb"EuCoa1<hfWS?'f5_ro3EE5lor?kXMm!_6/8Qu&k>Wb;gu`p=KmmPT=j^BYQk&?2O/o2%m[m(mkg[r&=#-lWE\u.:*;h7(L2<]8LVRdt;PQDSID]oO,'_.6hH*=.[M7!#6q2q*Z,pLTbI#rKS(T.bR;;H@RJYjuimiGu<qjFO%T)lF)@r\d,^L-N`:*m@_i*;c-APFu+N$uaSZg"qgp$(mR]6u03,L-*@-\bKQO.g$.n7AX]['%B_fAWB2(X)a9L>sl:=JtY\(2D5:%ZCB9#l_o<tZiF8ejc\bdpFl7;9#8qor(cu0?oeEa]6<,k7#eN;7\[\9&Qa?r\@]#pUp!u-:ELPD?1`4ESdrTc+aE:XFj60F2gROO%ZJM(VqJQLlLNrPi<W@8CoptgbN5R1D+hP]("725$plZRJGtt=ogns:]s3b>nJ`gFY\S4*:+Qs:kZ=0YeSe6"@)):RA#+sl9$tles%%?Pm*nA>t:cXO?#2#<WhkdE:m@0Z\#):Z0c43XA0-BT=@6&eOuIrGVJT2P@@7jW@=1A^=cm/Dh%n+C2jeD^l8)Z,jcg%Xh3&t[MB%F7q855+M#9-0U,jSNam5Df8^hmc<u4WP!N"df)7a+TkOY5,Da2>Qera[(g0RdlU$%7T[U#`ru;RF$X,sap+ZQMiQg*L50.4.$=O`%pZD2H8<JC"*r3i=<PJB>*54(I)McXXEdTj,@oodEpQmGGk)R6ZPE&pmgi/ec.U_:DS>Q5geme><4M.b:\FCXbhT#V$0/CH6]^D7\%m<8^4-,'(ZQ^)T]o_6O;qm.9E0J2<?hM4E9@5bdfK6Y/aY#710k49&a)[l&er]-5sVel@:))M;2W*B7oDP++Mq#?4m97QM%'pK6F%Qb==N,KO0N^NQkDgAdX\hAhD"T2@H@S`k/;,&UBeG9l<7<)2QZKQcCPG^]lcZR\E6HTHN+#5T;;ptS(2c;.Qq;[".VAqeP&Vl\gY%&A6K)'SS#%J^2.&WOL>mNt_-r9U@"!,bdK%nmh/l5sIMBEhtg+M`%E/Z.q:))1h%WP.;cZ5TeTB1TM$B%*ruXFfs==)ktCY^ur5`%?h-272Z)%MJDSUpjU\])U1^.bX1IFoGJauf)94H'5PubU/MM[]gJRW88lFsDA8g-8-jnsX!IXu,kXl/U@)`L(!Yj`/BEL*<3]A&K%li[GI=%nuG8E%B-Bu^'="=KrVGS.q_&_LGT'dBCi!A>iF9SVI/p]ib80rEV6T=^`Rb6>D#"1PuHT$:j<j"k<8JD59*"F/NQ"jl+J%TSV(S<*S'^K$\X!"^L3!Bm0Ym[MfOEkqB<P14=]&X9.H>X+4I_BHYCADE+$dW<#E^&OTi4g4Lt2U`#S9l^LQ,J2Q2T5S*XIUbt9+%T,7RoU/GLU+u#)g&f:]!7KB*8_[-I!7k"j=.MS_R\14L,\.sbm_GL@FJ^iOPL*L4?N.#GI<qlo&@=AVDLWhQ:6"hZ%,Ug"@m*^$o%]rB<kc^(`33oAGA1[l>aP-qSYJ4fuKJq,[&pJ[VAD/pMi$>GeD.pR;BX6o!u,;DP'U+*B4-Z0B@6g=dq.SE0n&V\Mt;iF7Y%2L@o%/_":40HmTe-k2ZlJh3d$i&G,.6+iN:lo.tDF?1q,B+9o9SeX;9MFiJ;CG'8dc.]@3`"^;l@,#2DLJ@c$_T32S&&Ua[$!eO*iK:'b%6'+(/)HE.K_`5;ZVF7/:#S@LD4U4O:jDI&ps5&N,G+lZdG7-U]J-Yr*G")=;]DC!ZoT-&qQZ:#P7T9:VB,*PAgJ3&\'P]Cuq9-ll%3dc'sc.AqVIYJdBDUj+<^p=s:XuUml&f:^l[bCuM%"N57b3q=UW<MNJ:_70?UW/it_I8OghunaGCQQY7_'ll?^iUTM6#]q!@)?"O%bhO:liJI7>9=/>1'^ViY't%]'I%BE\&^UAS^OD;)[:5T<dK0As-hKD%YJ974+pU&JE&._XF)WpbdEN4^(>WgdF%A;%.H_l94J\MI%_bQX/;B+nggVkOi^3o_^mP89YH!]CSO)mDjY+cL0$`hHD,R*M8<%pXIE5<tCN08u#^^(O(GAmTo;,MEI,,6YuX_#0'.sOA'Bj%,c%>>3e],$/?#<`)u;;70t%6Q@Fl`'Y6"+s+T<\-Ir3(f%po)>**<XF^)N,,#eiT&"':mXCQ>n!g?EO2L(j7DFb4Sf+C2gSNkI%;Rq/%k_4/#?4t:'Es.6]e_Y5G.fl`Z;]l-_rfdE*Ps3.n@a]$V)%?cVe0QkD&g7u)'qknh+f#n$JZ;JGkn"RI#,q#&##Ia`)NWXQ28DQk%&5<jo4c7$b#IMmQ<'A)BO_>Gh>*-ND;/M9!F\RYuN5:0-$mH$'f##f`CQT1T5H'#Fke#QXW7DJ')Sof'rLkA3Dorp`;4)r[J/t]H%_/[6m`(#;dJ`@-rUQHs.J&"Ts-UImKU1ch.NAqbTFZibmMc10=iY,SVbG:%lV!H(ZO?nJK6$5n3EWQ%Z!houR\X5($KFC&nn5J?I%N+3^X@2K(n)USa%>iRg'#Q,O<OH@i.";S]d#p\+kB72CmGtse#'b:Jq8dpeE>+,XSOML%FAAZFcVeS**+%9IpTWX$9N<qVAo:M<6%0?J7_C\/[kXLJ5K8HL@ZT[.3=s#p.lG`$"`eAS9kM9t2n&oenK?stgHqFH=eNe#58!$[)q>6NlGOA!qiVc\Q`1'DTM69pnD.m[#L%g1V$-WB1TAUkUM#Tb#GUDBA1eW'_.@Jtrkr9U(.!JtWGn4i>B4&8<1WBZ<_@FIlHCq@RXjMO,G0#TMtQ=q2g_#Xond5nP7Ioj;hN%n,et;M)[hSr"1M<5n!N$`/q=!Yc,QV"F:9Ndm4Bk6>3+@TueKg8G0M8nV/B8Irj)Y!]k@RNW<RF=MpoLQ(c$Q;C&6QmI3NA_@ppC%6NjXa,m]-%MkHg06j,HA+BdV*M20Uk7OHSXA0Rt..]AC6M$ZKW(_Dil#"BT1ZjTe'#ntEK<E"Sf84:YNIY&-03e??W&7G3"(SRei%%O[31r-EI"WXJBb=DCT?fb$.so3tLc)Jh)A$,\J?J0.\p"7Q<(X#_i4rZI.en\Y`7%9.h-"4[U)-5(tA+W?d@q01GjB9"\L>mq;h%Q8usHh>p,Gmm2ZEaL-^hd7?gqq@rs/Nkr9J!g%pE5nm)SpiQAOJn.^.8h@%]/jTMe<0Wh%T3<"e6or.$K[(0s$]6Z*PPH2O3bn9h%.#',@G]5DFjJ6jc0ND(LKF&$]fjW=:&;F''T9;J6$#Ql3+6bbjql(4ljtSuS"@Q])dmU1P@4[#/LIp#9rHJH=q+/,L5n*"(E+2SY%GlfJP#jbq%::0d!.iL2pMPDm6"l]6DnX9-&!?"j`KO=fC;6qZ*6I/mbT_?q.1mjiPXP<(l.tNd]+5MF&PnCh#Cgb.8ohk\NYU/iO%c2Z8[;OkM4!kHl`>&97TXJ!q!_O0]7^uRRJ3oDsqc<GYEoiPffgj!M8Z*MH3[30j:0.#feDP#jeZO3pt*7'/_'0maEPuq.I^=5&D%g7'd2%FeL7LFo:`1+W+D2+@dA-he"fo/^W$M]aq0U,#b=@qA"H9\WaYXE,[1nhJU'buJa?*i\Y?rPp##@HBCR!'8fSqtEtc!W4Hk%f\2h\2G4-8E!ULU)^EIEpP'-d!#FFX=25,@/^Sefc[FQsd:mSe#I'()(`Y5c5R1;!fK;KHkWbl=^WWAp$ELb>kDpG6"1D]m[gD+;%'*!IBIbc&dHde']3VZLC&]NWUa\Ohep/kA6iSQE`II^jPDha[4TZ1"-n*+7SAmcbo:@Gu@(feVkDARG;-Io8@jXXH4h#4t)ZgfE4%J]r3&IJ:_0:&h8]Cl&Mgdj;H'<$\W%hG)`Qjc=7Bf-c>mg`Ik.6EJ0#X*FTgFjSG;De)ZHr+)sB$-OfQqQ0Au_AbM(5^k=Y4t<q%%Vk6H2q>'9Fi0Y[QqdIQ]m_l2fgn":&CDnhiJ,6M_-E#2X_N7cb%Z#`9CHnQnYogE7<dZTq:-)d-LC/`eTkPYpC1\`f,r/B=gd\,2%gt\@H#n\Ep=UdujV+Iu#&ZKckT#Bp4V9W*Z8K=QPQ73+&!&Pom*I.YeQ"3]o8G^>p)se*SSF(8&e)GUIdG+h!"XCi4kt1h#_[,-:%\^(._kDMG9Rd,X/O-.S:H^XT'+K%&^l7C8iPmQJD!48KW//Jg%,D8&cC\u26<(0PYTL-/'A"JtXZg4ERg/c-I,7QKcQlq/7bDT@X%?,:@:WN)rOjGn.^772`D/Dh"S.T+]P.Qj^2Y`,15P?A4!UUFi+//ZI(]4b^aWng?9nWdLN^_W^[UaCJMR*MF6jH6B77p!A]A7TO^%;8!OglAR_&!Z8grRR3/U&Ena'[D5bXS/Np;[(==21e5\MYu3A*M`dc=J4gZCJ3Es'bp-i=8nOJ1Nd56>4LkmX5S2ZPENB/`&grsd%NC0eR6:(pT^_:QSN!+Ws#Jb:!d"u,Y3D]h%92(-,5gg*]A8_%[_j7hUFP%\ne"!Uj[+qmr4s#]6n]GIN^VX7O`_%J4'5$7NPa.Nl%muKefbQHkL*&!2tA>_4%r_Ok&&]%B'r/<9aZjJAnATLP79aNsh@ud2fHkg)rY/:W1g`"8f`$&M=J:PmZgdL)SAVC!F%MkP`'kV2g%)KV%+K6G/;hgnr3c_3&VpI^N6XG3pp:bhi7@6]Pmc*M46NM?Fl7V@pSql:bJWRn:AON)B'eB\t)qmLK4&QF'7Xf^_#$:rKXO9eeD%Fo%oO\paW0,GmVpM:S@hd"^$a5q_Bcl<^.]9]$04C'N(e"5g$UNeZ1higqiFGImPN>RA^_XB>Rfm)1ic,+;qc^:r+U;*'YpTQ"N$%6Q+.*\o?)Yq(Z/o1Ir7$A"K=:g"L6.i9>8@59Cu"H2*n,5hhG-oFB/tZ>R*R!=OX:PmXl>;ZF6-X$2X17rPhPXCUueqY<,Q3`Krj%$SlubAmh]L0!X;9IZlTgc_hR,^/@b"&2GA]fD8+@`d07hfgun'FkP_C$^b+)-k_NtCE/tl<$q8/]\$]g)ESl/Z@3_@\JM(&3q"j(%'ML4PcP@iMeN'b#K3$!2QTeY5H/hbC*_I)@b1Am)bS@r&_A71s7#)j##FAV.Q"L48m<h@m..l-?55V4FrG%)o@O_S25pLir#b9ZT%.\lV0Wt_e_F!EB<_t*1*&;9dCG;Ur\c_Bp>((psPI,=pH&.&@,bU/0;#Y[[L+AQe?mZ_@_H[:IYWh6%XkUoW-IT\T7/dmN&W>Hfc%F@%o?i<TJ\%!RXJBYS@o%<l4"oR%0M.`O$:8"*RngS3'JEos!7X_PG]h\]ou=AoolZ813l)<W)f@?gR--cm%-iJ94FBs-EiaArmA%f!EX9=$*V9Xd7J)VY_OPP<ei^8<hK[QmiokWNp]!b+^7^eSj`qoU0<[Rr"3_eMDnG,XesmWIo0)IU+mQ("iZgqnL'9?=ghThT@sW%VaIG'Wdu@<WU=:n'390[!J.lJ/uQtSYe/BOq$VR'mbV='Ob"0XO985A0LA:aU9ST7L>&R/VbbABCkVBU`CBH`E-&HkhjTe`C,;uo%GCXKH,Rn$e<o=@uM(Lr4J.0b"d^!#`@kIJ'*uCUr&6DCX/#'qre2Zc(Kj_15U^(j/'>#=#4Q&[\?m^NF.b9CC_F)C&irc8/5IIfl%[)<((*4QPa"edH8B*$Y>JR1d?`@4.Yc97(`<]*5T53`R^rY@=jZ.nrPCE?Z2Z4_Q+8-=,LI$k]3OcO&hkSA1HPDE?@HH-qd_(fHI%5g2h`bBP,NIY$l@Zc\R7*dHV:(5bTi.,f8#J1P$5YiU!&=a7Q#,\/#3.)sf.mg=qZ*k*KfKn6C"ZZpZ4BYY/c(*GeCq?Ngp6IK<g%H$ooZr(-+1dkGAO=Bk(c'el3B8j$l'_m!n$jKoOCZp5*<cmDd>EO5a7d_.HC>,\aDq`CeZ,@<<J5WH3:+#kt<pETV722X/P-9/EC%JL$Nk%Y3"]G:dA0^o0=oV?tCCBoTJlk'EG=6-S.$V-e!`#/N^,[uN[q&DD`K=EXFi#InoJ)>V%Ln!2ZLna2sLl)@9:e>N>i$jD;<%o4DmUr02>=oOHqu7r:s86da71)<quG6fIMa-uK;i>ArsBCq7$D_JXD=TRSYPg0b/e!$f.:Tm9YG/Ym8iNaL"GQ`8(cj*8DAVSH+J%%(hFChmd"3qWm($To$?iltWcn`kWA6Fqq<N@M%i,UmAHH\^F"k10!2_7N5%3+<^$<><gB>"D5e&8%pUUe84(QO/uEpWD.4$JSXTj%o%%5\Xs`ERn-7&$k6IsRU&^Q\B(`j&B%n3,*d7T,CK:?%Yc'eJG:c\":ptqV]ES@hWZVij$geBGo*/uD:\mCBKTD%*+$6233$upk%K*A#.N$(gFTpEaG#YI<e/Y,([rq3uF!)/8&U=,[ZaQk#(_k2Rh_L\Og<6:\#27&"C"]/nflpcie1<A;rj>),c]nDNeZj<mEW*r5k%No=[$=`7`iH\caGH?fc&TS*bGNLHlhC>SJ('4%,Dq[CQr=C\oEZ-QB)]I\^:6TJ5oF'\\/Ie,/G11ruZk5A)YqJE)*j>MKlnk0H7%<'iMh"pQ"T1K6nOfT_cm3"3eEj'pM)auOfR)hLff*[Xnk9;2Qi#>;)/F+Cp1ai4>!`3G<?[CH9fS<c?Ck[e`Kek[iXLu96_pjoIR%\d<=eHm2>r680)e9IHb6Zo^-rf-fEjW`'[k,s.,f0@ES<I3K9!"-rIk4NH*Ndr`9-[ZuI798c6M`@MMi]U"LVP"Lt^Q(NLo.ehtP%cB0c>If9+SZ++.TMoF_`=tHfaX2uChQ*QZ^Zi=G#Mb$HA"WUbe8apL?'n5T@i50pH5-0lo3m$M]IiNn34I!L(IWpDPV\=L'^:"Cc%n7s"l9a;p51\eAP!]M1S1&//9^8<)U_%F1r=X!3s<2BBA"]t+jppFP9kFMV%0t?pB+DWQI+']#deaXr%S]u+o,65KQNeV4sbm2F9%4rc`1AQ\1;I_CJCIG*5j]*hq!i$0.4'E+5M^*6mXTP%5;3.%7?FIu?Y;%M0TT5?G>C[QisVu4BZR4"@3po:=5]55f)diJRL[Hfj-%3f6)K?0Abh/rkQ;BZSP.##07tpth7[dO46FYY<D6O"p"o#-\"%jVT"08W(+;H;qe+s$1*H^3$#49R%rUJ5s]u^Q=8Fn?0Bln2u=.%oqq0AOT^EYAqf:3D5*Mm27S&8fQ7m9_!M.]J[NLjF=L#SUemQR2N5!hI8rLi"J7=FGWpQU:eT>"B9%'l?mB*0>lNUWMjI0I:9tH#%cBD$g;6T4MXE0nZ^ZX$+<LR?u!'PsZFmO;lKD3klm#?'6\O)"EMX?lAGBt>%B$2J_q0pm)HaBR(,o&N\[t">`$ndDQDaKT'g'A!$%YuLZ].:fqp7kr]7_l&0[B'$@<p7[sK-Y&K]K0Z^--,[Vjr-G%qj`j'TY@LkinMjO][rm6Ihn3Z1o]hPkF:(d,4j>AM@%%VZ>N'Nd%mKQTf]7>55d:[,6euK0D\Kn';@nY^Kc4\r\$C?.sAB*:p7=9P7h=Wo7l#aJ+=;7_ab?meqIp$T*gh3kmkARVKcJL/gqN_7F.qL8t%ZO6s1e#LO4m<Q-Dgm<6R(/HLH5rt%e$6V0`FZmW\[[^!L@)&XE+7DqHmTp#[nj2*?3%S+NF3J)TVCsMkKXYNtLOn\N:+IK\qp$%E%\%'`Y7uKH5(G24fgi)^h=jr\sS!P(Pmj\-Gn[Em`9;'=r>-MH.b(@fFee5>=8!`*.R^.Sd-PmQ`f_/b\j%[W.8X>!pBT>3a`3([F%Q?XAJ-@k4-E>u>3&f2;+g!+6WOq_l=,ouU(QHZ,+BurE3,>539T!Y$B7o,F;ARr+]IH-Qg`7UQFb;6?V;KYe>b>g(3=mC\rBt;7O%Xt;Tm2ll%84O.+OR\tR!jlu1oCjESNT.I1*d'9Ei;la+`GG?BU\!&4CqI!d@$lmp1AJi%/[tkcKhX]O;ICCWF`4=Dr@)c7%-sa8B%dPcm2e\A`)H8B3$eL0*YX]V!J>D%0GBX1i0Dm9[cjO3:u`aclL2;r(@X@_[Uh4!T[lIO``OgGmq$bWn>FC)4Q3b?`Cj0&UO[;sa#%hI?Q3;i8%fRrqBQg):%8h0=LTEn:<-co-3YNiJ3CTV=EL.@[^t*SDFn=l8B(>.6CsSN=7=_>B$?j9U'KOWbt(:0usd>I*tr@&#A.%.^nq0QEuio#H,#qdhQS4]Uen8pGTM0p)G)UD+p4WCi$:=[(R'j2j<&Ee1uHAlq$f0XHg-[On1Q]47^,HqaXc$pi[@W>Rumi:X/X/%6uc`tb0[ZikWG7'*L4=ITqg>HI!To#O6)Fo!]SXS->%TelB[A,UVWun4rPkq^YKMET:5+ia5(=KmN"B]m._kOfI8-.[@^\b')"05%XkWIGX1l8P4E]EE@=Q^SDcQ5l0DsbahKe-0qci["C*.TQ6\hMUO:LHHF62mQL*Hp@[`0>m.fSX&E[d?sm`8<c77[/k+?1:"j&="9%<PIR&0TL8If[-B\TPsdhZ-RjaFNCpTViM;B3Q[b'^GC<RIr_EE,3^XXl5aO1.<4L_j]j%nbICo&G,]hlF''nKS]W(##5k)LEGBLh%]?r\V'r>BBe$k.mb3%]-XtoL(Y(fbs\=T:Z[]=I(._5=27_+b*dHYnPfsWu(nQ+K);CUQgH]e9pr&ZLBX8YE*I<UgaFh`g"U74e4%!#>5i*sm5ZoXi`8G<FSAe2.'k3BJSnT(CkPla_%lN9=MX?T]IDH1DBRk=:RW2BTVMGOO3X7)Yr]IVs"JkuXtP]f`0;mqqkqnhO8!%mX6TUr*I?G$_-M'Y,3e!9]QPIa!X(@nMi&^\Dp1c[N46i=+eQ\f3n;sfG`QAX?pFTo@Xd`?T@1@q,3RJ\%X'D'n&$7VkEMOl*fpt%phP<8\G(OL^$3SCT5q;`J$M9?<;a]Sf<,(MFE6GTMV%$?r^,NFer/HX^fRSE!g/Kp'Zc6Z?NQL[&e$m-?b?Ml,)-0feX%'6EhuO8%i3dEPSV<FNG+hlPfM.F@`EH?Z&1.Cg\@pfMRHun^kmlXLFa"o\0N]4-(;g:3_D<AgS6'V7q`C,gLf:4<8;LE?-tZfRM*$b_:Ol8$%9Y?^.cCgZ0$UKYl^BQKffBZg%SA#7m7urhL[o+kG>&PpYa\E&)N0cXi#s64dH`r^Io,K2)H[d<)EpuU0Gm>B:'YOr[6hsEq*kDh\%gnD0[LP=TG4^lLn8Y8ilr:QT&V#tk?;6)XT(@U7^pZT:8m!0eSE7E^cJb^ks;S3Cp,`"ar,Di"rgjsN>\T/WL3BnTSMO?:=Gt>k,%,?uu!(:@/*7$M);eS*ZV1Q#LMq^9cmp'B;tjQ&;_iU3mYZ(0>GI+DFaG0fkP0s5LgS*][?+tpsX9Kj8jBr;qhd*JP5kOub1<uC;t%"EW6_-csROG>dh;$R\X/aaNa:I<[pJS_[pR':t6]oTJIJ:Ra:5`RE4'.%!!>(T#&!h0Mh$(-R@>o:ZSgT,;Pma-k8?)4W!*V<>2-%W)PoiEl[g?1h*3$5U@LCVSYW3ZL5#&P+CQ>Pd7qa%oP^UO\97IpV#'nn$\^3F#*^$o47?VNa@^#l/Du4dP'jt/No9N?B[P4^[qXb%.AE'Je.q'hdr"2bkbGb0LCRB<Abr.\pX@Htr=hD@/_@<07tSp],9D(&qT4oCEh;6<c?]:6kMh&A1j@%OY&g_&,3LO4pLuhPMnJ*Y%mRoeks(lV?oC$"pFH/eJR<,qh%F4G=fu3^5_tOMYNFJWDEkC39f8o;mi@ULb0&0srnfkp(]GL61s7rC=_^:8Db+i3(I<`:OK%qLV%r$A8*>S657FP8"g-@;`[9R08/S&`"D)n4Ue'3mRsDHq6Nq(3Vr>^F<$ragu05$m*#CmUL+P:*s$0B_=0q?8)nO4Ni@jZP\E<f'"M%Wts!P`mpsWU0Lim]Aoq_::+>-U+X("Ib"*hm[>Y&`G0&%[rC^]&icp$0<[%o!S26rcNe3eqFedjC07Q5hF=;\G1*>/>a7cSl*d`X%m2Of&qQUmLI]+WtY,+U8E"dOX`G`ot7/<_GaM-KAdrj)L^J4C4f=)8&]Cf4i-F.jFq=E?H`TrE=o`jOO^%_1JHqut6\*fk1M9(='%iOTQ)Id-3mE?#W6L08`b&b!l6a'u:Io%85%-(`niD9Gktc949Q[76!cbHp)7Z9QA_A$+q[X*X#5D"-C"P+c\F(!Au=KaW71S,Va>%CpW':_p.m\htu[c$ffitJ.Gsn*gJX)<+nELB??WIjrmm01ZLgpWYM^;X0%l:9sl9m>.&P7;RnO8gN=B`Cl?76e"MeKDk3pe-?Y&%%O)C8r^d;l1oHDKMR<YhQ4F_9n/%9`_m\$$Xp4>]:d&YY:c/(]$/cFUm&FW[&_j`hSO<fj6ElY_kle!F0>a@YIq*nB=Kt$oBGPF)]%'i#!2#N$ESd&HM"IN($>8bOXNhiDc#BY>?3L<5YUE;2c\/d/(&l4gO!r(1Q,YZ('O$kgmEoAHb'D^A.J"BMdeWqGN?8G$(<9_S5%%CEiD">@=Oq-0T!<V#U6[C3maBfkp1I[G;AY^4GOkHrVarQtc3@#-,,ijD=kP1=4]t7=:7mQP`knlr,Ra$O)j<7KmpUGMksH2jMtG%=muUAb/,2IrMCtGOFb$P1>8n5RXWl>r"_o7YoN2&9[-Smk$O!r)]Mi<>>b4G*Q*Fh[-m.;`QhPl4caaaSk!T3<'t#(f!,Fk]q2^3%=V,6#`QXj&p:4m%VmqOZ*J]\DojUm/f#r%:_Dtp]O/^iXrLhI1C8K)&"_Ml2#Du_$^B*uO&YntW_8pF'Wr-tJX`$e=03+r,hq7Le%=#cj1'CD-%Z[Ec7dDKhW+!idm9M<V(Aa_G5+e9?g5?PYB9'QH;$\1lsZiKc-X*J(MIa3)%D:UJN9nX/a]WCn_ZOO:*U0'\uR,J?3%k.,oUe#g:kgOhtS0\Q2nS^^uBF.21KWgu+I<3r)R^'h2WY,ID'q@SaB,'p/]LXJ2eQ%L8SMU1V2GN;oGn`W-H4a"c4]AngBUZ+oo%V>RP>lNrl8SE8Dbb]&MJ5,,4+Z]m&-]ZqnIjB8SVj=D[TEBB[/MBs-r:$I!<PYKGBVe%m3]Y5D!]q4qb/j)`KfNJ9t-PPm2E;ZDo%948-.)rda-fpfTp'dRjjI77G9MoGO@VZ1mUTcU/X6ahhuDpm^!ms#o23(K0&[jHIuNH\]?)(*k-rI/DJ6g%+5Hb_q7cIk^q2nDG`%ooI1SS2pH5[[H+2W5(0_n3j(5OC<u-HB$G3LW*6Q@dHh/9,>VZ-6X=_afc2cV'LaO00"B%Y)p)GDlt/)TQ@MGY3ECe&Z<1kB%9Lt%]3-[bD0Nfa#k05Gd+bmJ[I]7-ks_$O?[4Bcpq<;XV.s&X#PVH"F$6fuM;iq,-+'41mqF58N]5FsR&W<V96@)L=MPaq'85*mj0=MC%XA$-PUl9Xrm_NE@BtKT!MgR[513hknp>j2].c.'"FLU;hPB#sCNZYm7:6cV8$S_)jj!\QpTds3A:H%6+CP]'gHE(D&<fTlI>V]g(%:=Y"gOY0s&$UC@&2s>Y@SS]H-!blQYItPDHVeY$c"r8_oo\3d+:DN?gNiF$)Wp$>gDdgY4E[P#>&OF9Z3H5JS\:YBoPc/]l,l?Xm%]nIKra#e4+0:@:a!DeA)if!QlVGm%4E[RZ/F`Ntc:^MZUcWW-o!,G^F&;2@-W5@NZB,4=;]2s#9^kKX&llu=u;8Im<ooT_<-]X_9%q]N#Y\:VAjnS^_C_INm=I4s%)HLR1P4u\'RQ["5)]0gouQg&g80H@8n^oliM4`J*qksFQ$8_(jO*#N">!>_&Al@qj[hn)j!VQL1>%OGeiEnJVnh3[,1SXB(La-3F=g*:</.e]oNjNt()d,NGM_OoNRNG/Lsg,SX[MnV1M,ME@Ca%X;.&\o+#pd6_C:k@CZW;6g]QHOoG^%mS:%B;_eW0+&?3=Ech"7l8eR8`TW4LAYUgLj:d.Dpsj`BQcC2gl(XD<2(rnoc4fXprgInNMuFE6dWdJ!$2;ijM;"5Ki>C1@CsM,Z%\MJZ62TU2;r`kCqfq'RWK>a2F,\+,ERHEm(#@Pg=cLgs93?2sEf2CQ4iYG)ckh&Q5eT:_%%_"<foc:N9b<us`Yf0;9;=8[[2b?F%%FK*r#elMtZ4j4TqIin*U#OX-o&UC\[ED2U3c<]Pl3BHdtGSBmSh],_bDD"S;_J..o\Ns!,O.Y;L,GK^T_!B(*IT&9phuI]6<24qe%"AffG;\Z"nZ$8k$*5:neDub;6B_^pb;r1DZ<Cl$Y.*u&#&'&RdRjK6YA00+8oM4kJPC<[Q]mlN_[^Y@D84T]2GiU)f]^Gt3s-[rR%ktdn.(YB$JW=bIYal>#0eF?B,0IH\.8]]qb];Zn\gh?+Ym3mC!+6Qo):)C/9>c'3J]@b*n\Oj@n^J$M@RNM#cLMf9&WZuqaGob7'%osmt":30.dYM+91e]><G%EIil>qB+Ce#*3U\<JKEOCB'/(hb]f1^-!a)tffYHCH7.\FtjjY`!lU$U<(t"3ea<(%cA=9EO'DcJ?[?%k?=g'dq5#lZl-HT!o)>\W3)tZ\`lU2#<utmK:[Ul^tC_G#XjFO;5"R'6tM*^f(iI<;Zp6oI%]mN4DIBL;iHN3I<&+PQ-iI./fCD5%.\\<>d=E,jB6.pRnEDC7G</*Q;Q1f.jE)BFjp"*lcc[c/e47n<LhZCY7cciB,!R*Lbk,4N3_G6s>ZBkNo3]tqdE/NS_ePI[9S'6#%??@rqVcUESU@V`OX2RabWa_4T\=+ki<eI5hR[srmU8$\Z^2-n!\tS/03e5D@6nQn=SQls,P?ZDu`&uH&Pj$=`EZ\kmNZAa-;B<"n%[bOj3ObXBAVe2'\.RRhEFONM$Up'+'HB"mu8$P*l0bq@(7=ET8*1co122\n3,cNd*.cnhFW]jtrFo;qMH*fmShB:_S>RJ\)a'p[=%at>/`9jX]k!BuZ`&)J<?041Y'-,oPAD3&NGDrQug_O8D2[kjEqm16*"@%u[JF0h)A7,tWCB&.js4.=!fc>N,"aDQlLapI&^pZ$(9%"1-YX"K*Sn_84MfpbmqNk-H-_kcL&&ZYpZ`2dMS!T"V%7S>pEnahTc^mLj=Y/Z9$_ZcPCVc9/o\'I5EIYa)rlg?,rcN_i3W^htbt%PTq(ckuNjW4k\7gnu24Xc'#^^PARt1WWi.G/9@=OTr-&jKIqYRp'V@78/>rS!thl]DE(eO*&6KUQg=FPL`,\;NLBf>`2qFD$@_tB%1ID'VA.oc3>Scd[GUujmU'-4/%P6DEZ!^6RatjKd&g5P0g^E.!8NDa-E)81%Q,KXN>[Jc:##_r_j>*@G@JI6YOB:YTkOhCM8h#;X%COs'GSEQQjIAX$c<Ua8sM>>s>YVGVDLLGO$Qf7F(0YH''j>*:b4js+ZNgT1+.r9pbV.b$e[5CYsQ#m9AO`+h5lgb?f2tLaTl93E*%"Hu!gAHGP'0&l!F"lXMSTT'auZ(']_NhX/"a"$&V(![sn5U2`7*j_D.qZXSK0^$Aigf&o&YukY[A&(Ik(FVF%g"0A-,Fj]/n#cDJ%FXU%^++o,o,ur98hLLWW8jr7(&lfD%paGWVl5C=PqRkeNWXkc.CE=h>qk\B3fTh<=Vi&$\,k\@_=S_Y!iJD&WnQ2+@AFOt-S5Y]-%(uO(HPu7B?9od[>IXE_CD>)Wn1:kLB?n]oPd5QJ1FoO-MDg5CNinPFWj6cT\>HrYP2^t6_b@hiiX=5F9&Lj>)T-,0Z[S6_C'([I<%T:QU+@$MXJIka)7HU4r=m?7&rGY&F%;p4MnaHEEin0pZ0QE/1cc_g4@B6eS#LRPrOZ(lbE2s1_qhJ0@:]Ar0\Wc?;="'NY=M-ceN%kR5N(]$/Deq4-)Cj_"!2giNhII3<m-,+GpX`%*O"MDN`UhIcmpi\[MmP2"IDC_#5s&g4-;"3i+4.]_a20E]B#D97ttB1\Y3ZjBFH%eY9I&>l*$XKR6'eWU&ra<S"#UOauV`SFq3,mVM1XNLK*ujNWg]W7l>sCqS5J>VKQkX1:FpC1(l.+$dK=P=L3S*p)ebV^@l"B?4\K%kQJ'47bcr'MM/:?9:Y/.JG$i>9;pAY3L$;".;oWU=>"[_ql6AD4Pb/^3k(*jpU;9]pHE.qWK@7chXoL3lG_9f]r+X)N^m`uAC!$7%>tH-<BTV(eqoX<o>eq?]g9b<k0OAtM3Ci!?h+R>OVcuY4q;a*o%]1/4A:qUXYE%Z!o2[L^]+*Q43Xjj9^hnU>?-o<@1=V.2.J]^u%<2IXm6BEZfl^aUnSIY^K.01tqjZ8sI:Nku3Z%8g$0m9@NPgGB_(hksilFEe:nH-Y"$@O1G0rFoWNXtMXeBPO#VN`qcA5]88j*c6W%jEn)NZbRWbJ@D=1k;Ks?Oa'dCV]&F\Ak9&I+Wsd/0@T7[>,e0(WIg8Y\<jFsLEiQA!g*D-TMYXHFU:Sqbm,d#BO!J]%A-"lL_9dU%B!#c&'RQHccEmfQ;2^GV?m)%8Km^k?b[oo@T6V_'Lg$.j&WQSt=<2cCJ0b6HJj?F&G;&'sR0qQh3T(V>X!odRFY0?ibdA9R.$bup%JT(q]`QI&qA#dpq=S+<VG^`\\p8=^_%24:e@n-+`C">s89hdp\Z5^m)PU>4'#Ut]lb?_s<3;/5@g\4U%:7dO'-f?,(n[OW/0_2"[%.OU9X.ZiV8:G3bAFJGUqEmJG`S32CgX1#I\5f'a8fJA8%>7L?^?hZsWo'4U_k46&%9Cr)FFg4iCFTf8+CBn,^Eij-c4)sQK!"C$(%*e=/7`A9'H8(q@E(/*2rP!U6lhE)kV\2jZH)iU]nIT*/'#o,t=D5Eh&Fl">(ZB8=,;1<bb4oe&JJm9jLj`qd*?Gt$#[cL0,ZF^95%/^rNheusu."'8DCna:8s[+@h?73s"GGuZFk`pfRJ!%^<K7>4+egBuO(d-JJKH_'HTjW2.XKkJIB:rTr2M[l-&PBK4Q6dP<q[af3r%EM%U7_,(q#B<4PZ,j/IY0cmSJ2Sh"2n-O\.N73=d>nJg9qm1\HmB)hQ$_8dOcH%V>mc9mU(6UV9!X$Cu6l"1Pi[@oXf7f20>6jHV%0b?m^%9H$Q6X47MV\`hH.m2riZo6CG$[+AXl*MD7bEpd>p\I2b5p1UlS.*Wp6`Su]F`TC#V_R1q:!]7/9nrJ<3YHUPn-J'$(Ys4m%D"@g9N=,E#g]Pud4lP%O[uT#@(Zc9O$ULH_,a0FC:,.X`(;Ys"MWA=pm>JXQEioIbQ^$<M<k&Y6Y-.K_"nkRN19'[i<>1r*<30)>%(i>2*5-uYZI\(=)cb<Z4aYm$SIcSo@oH\j\FKmk^HaKl%g:hn::6.#[#s.n];4DB0(.5.Ga]Qj6:hS9`*]i8d"euBrE:$0,d&pBt%j=R'Q0YS?mL$mNsX.8M8X;!gIaslqG]-$jR+r)aPV7Lcpp.U3N,C]p9gRRF/Z7[X/#=q(N\<#uNk]KY+Xh_hfRHL1\EufrY+M)fC%;q`X8qe1Q-Emc#\b_?(o"4qo!3>[-^"-S-$jYFrp*JgI/T`n4#d]dO4'opjk;=ZS-"AG\tPosfuc2_e9F8LXN`\]J8"X24:)49\%%UK`hM@#cN]f^utY>boJglh1)<'BrcD.FbU?YB(JXiGn[cdeoa<&r:L-e;9$TOs79P$hPVOn.n;/YdK7bcFB`K,d<WgZEn<C`QJbI%)+K\MHKG:FHY(Q.F<oj]5I<3(aa,VZ2rMh3GbAOu%qgrh?DS=n_?B2+W28eoF:YY"9]-4FF!h!qR"GuPFWW0?\C<)1RQ,4kFPs;6%TMBR-7%1EB6?Ie;JPTTO=G!`f_<=#5J;QSdl!hJt=YQJ3j)Oa@3jZ;9(=+]FpAr&F;$&=@"!]qWGo`(h$[Q&q[7V6QKO8>T_NNOs%%NNSE(%"4kg2_;C>gM(nA/@YNCbHZ"5EI[*e<7\jE^0&Zd*6#%9<JR8XZ2oQn5URINTN6dXsfA0q1UbbHH2d@'G+,uGL$HKc7f@S%_Zea9N!j=R,Yjp\g=2^cjt[WAn'rc$H4Fm$0A%fJNlbPg/a8>[1Y!sOpf+[(@Z!Y?QL9m]!t`m/8MIp'$AU*-`VH%s;.0rnZH&sl%Fq[frlK=MsE?Dk'"I7pPA-DY8oRM,!AKTX.LBW(@_Z5W>d%,5b/lf5Kg'3["ZnRMVJFG+>0cuHj:YD*[XrG"(*ErW0ET0+<BR5QI%l6mS43tP>L]YNciZ1'W<U@c<J]uAI5%r^MN,)p@T9YEcO=Y2JO[H7)ANi8o%5h=T#E[bs&3h`^WSH,&EYE.k)aroR5j_V.PHj7go%bQ5`B]asb%@Zj(?W_>Xlq9o_en9(u5>=o8b_[d9"/s:H]NghNldoWLn.S\%e'b3/lSWCtC=2=d"F3_E]GP%!ih+)d!7LK!B>c+@b%fq_BV(R_VY-^o1/_!2&0J]DgMDoDpY$_9d2CUQC7^1M]iS.dN@7i(f'btnPH1Atb(7i1sEm6Z+"#5-*(Eu!/d<;#3P"IVsP5#i\3%'+6-EV8o"jZW%8]b7HY"RX;4/%kp^<LSNlC-bC-8U<2.?Y@G[P5R_KM9*o6sC@9XF9HZKR;4j\CJ]+H9A_t_XA`QC\>Q5S4$;-jN%p$&RL)J'J@<'.nP\J$tWmpED7gX7oJF8@JKk`*^`iIsdq_]2*l[h:rQm[BE;i6JcT)E[KrjOp@T^e-dP=$H^XHX(kZod6\U+'&^$%r(mGq1rl$NBU0n,Eu?SsiD/D*p(f:#JN7@0MM/#%P%sXD8u`Gjg[qT)"$#'(]]r<ToiQ9WXIZ&eOfl_+c]?IN5GD]fZ_p[:h3:o#%f5+"5&>!FHjuqr8BU.he"oS`s+(&`RJ5-R]2%#f'*=0!S$T5Ajlg1p$c6n\km;T%h[-fW3\PCXd-_ImeI9't)N5V0M5&8_U@Q2K3%!e6#'2Lk2%Jlu^Dc<`:OR.XoT)ql/IhO\RESK&(+2da`6-2=!#p/;s#7mJlSU0qRp*.3?/X6=j<-c"Qh3^Ul!5]#.R!<"i,,"0gj%boGH+c'We=-Tm'P)3&mDXo?&/4Dsn%pBgt]%PaBF;5jk0LrQ*3@Wt;5PKdTG+GenYs*EdZ2?ARHTPdEXB`5"0PHiFgZ?"-si"=Y3%`N#NaaA!/W>6k#p5k?kU_M_<<mJ13)ef#/<:#57G/-@0F(hfhh):cHari!;kjQd-T]V)X'5(Za`>n\9Y/1B5!(=4:*7A(!O,I*RV%'/JfP=VSet?P8,F%4&.V*8-*g+P4.3mJITfc=U(qc7gL97j9p9nR1,U6j=1Dh/HbU:+ZKlB&5NdCg0gK?2HWt\F^?8WUcb#Q?$C*%J-5X#8crS_7>dHuVcUt'E;>p+ep:s$1_/^fB4n`XBX$n9E,#gkpquHdfnk,G:0=]QC*W*SB64ut^i6r;Bh!G<US7S<K?\!7gaX4q%L@/kB,.*3!#(1tgp[6G?DUlcZ-rEi<C/BNkn.#`J/8$kIbKaeNcWU>Ggb5TW4eZN6F8_\Y0!fJ%0:/;mA,(7p2iWbkQ*`p2J&eS]%EPm*BUOel#pPNrrJ+!:C^,@#t^Wu+%pKS9`^f)kQ]g;D"_V8iN6`b71b>bD?%kLA]`3lM-XqXE:h2u3*1IJ/oM(M1G0gAfTiLKo?%$G4duXlj`])AefH+%[ZKr$Tuo+(9%3="kk@clnb[GeuYrjjkFmB)"4Zoq#`D^_Y1AUT#g[dIq4e/PHN@b]3:Kf$^06?Z]6OIZf)R%i0X7/Ep^Y.2-m=uWt(J"bf=VSs/IT=rJiKOd^pK\gk)Hh3+o,QjG,Yr$1,F>6C?d.q;:JK4%68Lkk"4(ph($7#75]4C'FcZG7.il%-?pqeOB1#m8/5rip&dtXNu<$Z^)n,-AqeP&I!CaL_j`XB9ESc9i+o<UB-nl-rLKeRk]mi8f<G#9VA6lJhQkISelRImMBG]t@_q;]%X6C@F&.b?iPVh3Ujp1(Xg*oC5Z2;K3.H*Fl;14Ag>]s4s!U#0YDK0a1f5f[5gf`tpT!]OO\\.%VSZM^@V5VA&3$$]2@1lXt4F'tQ%9jm.f(MBsn&Tps<Q."]o[p6L5D^A)KdK=ta%\8B58Y<n2cebPB(\*8Ya@i.NRs0GTe3bs5:7Ys:NAL,X),O(=d,ndC>$!M9<615B%=4AiIr\4(D"MQf=A\.[b9<.R2\B^XUagVTNn/XY`,31B;TE[G@nA:6V`>:Ps+d2qOJl(.[3dPmNNluYBhrN*o?cM%pr]G2s+np)L%ad#a7\0i",+@B3KWJpr]<#.ma%\B:ZOWi:N/FL]:W9(P8JHrAa^Vr9peKJ#$`J9]b/9#q(RZ8R79#tSn@DlM,*=536#AX$AZCgnu%F!<*Tc(8G.9f=4fM:5MjG]\4n/4S_hjS\)iT+`<fS#l8SJ-"6h)nFGIBcF=3"Y/lH2f\jk?l.?s"q4<V5eL:G/,6BUIfhN1f+mkd%#-ZIJiDU'q9gm<ghA42UQ=hR>3"o>=!<`gV,Ysr`c<nB=4HFV)pG<da1h%b6P2c%loYa7W=FdKboMUBV,C0/l0R;c#JVL\-dkNi%%dW<El"DSMdHP:[_@lA.Z-n3a4!jYE]fdY;bl+,KNY98/f)LD.:Yba`pW/'X>;+*i!HZ%kJJVW>T:FqR4mH2-oSESM&1D.em?7[>d%NOR"CPC3V<Tt]^RN%?V09&AH63QtE.9%9<q:e0K5qf50UA=o"'EfF:L"]<ESYLZXO<CC3!]^=[(3RPJmBsKf./cXYT!If?).#hoj%l!0<b0Wsmc6kh%[.m#E5Hg-s.\:d9+La[RfH6uYl,C*J<GQCZ>r1HY8-b5L16[ZkQX<J"K%I(i?^R:4T,FWCHJs-No,q>gaK<'g"%PN(W93$Sd4;Q!,fQg>,BUh)rjnLJL$]?VIiQP&n^`+uD5V/.Kjm="mD?Ht'Hs+oco-e5&`>'%T[S\1c%Q4_)V,'Pad$KNs<ekrTS%q,Kgc/:V5X=?aBa\!VRT\>]S)iR%^(P?i@oS!*lepUM&qL>E1.RS#F61s!oRI7RbB68St)H9Q:o5'RU%kq`qa2;&dk/If>Y8tqGg%p8,0SkR1GM/+mIA!AE#uo:bCBMpa@eZ$JDI?:hMg-]@$mU5pSN.+I(/W93pK]GAO[]p+!T0-tps.GROi%JDR(?UbaTqrD5f]6SBC%Q4Ip`lF_+>0$fgr^%L2@<YE)?\`,M8e7;q'.u-8-T=uj(H<FY5/8^G`.FI=E[ChGHnB$dY+N?Jr<XeKH)><Wa,*rtFGc`2$E:6GV%^'=%2La\d#54WI%J+3Z-'0WU&,Ule85bd*G7T1In?>JVt%>`$\B1)b8jH[`pE22qaLjBhm^,Nqs#n[?I^$C'+;g6b2'9t*oHMl/g%)Zb;>/(_SLhf0q'7:*<e,>9>^S9YoUTcH40W^]?</$Y"XpMbgtZe%3.e3>/bUH[3Cg+?(N'tso@F5o\jGT-)-W^P2&U2PU][;jSj%h*^\u\l@)k,o"0^A<]!2@E:M'J_-CLe(YmkiW2G#/;m81P-WrdS6?pc4LGaJ6?hCfIR^aKgBHKWef[!hq)(sK%Vb$'^e=BsF$+_S%?_!Fe;Y'a*o(;'sK.kanbr&9YYO/;906pm4n@dASbN+e8p!_'.n@%h./r$@_7&-eefDF7nlDKW1=BYG6pbCltQqV;kqiC183rD0e%qXjdGBeM8KrUff^H8HSG--rP<f:(:RI<tS8LX;f?iT]-R4V(e_eZE1`jP?9&]bbkR;rEj&WC14WF.Bo50rpq<qRb@[T;JA/\RreL%b=#03h7E.uMm%LHF,\'"RLukc]U@.-GuInRl(`9.0R;AUoR%DUUPJG:8$i+$7S4d*K5RPE9g]rbH",hu)$0b:(,XX\eC&F6Ya4aL%2Wt158I$kcBcDCr#Pi8N&b0!D@rR^:JlLS5U5Rg_;m%q"hZ+"QF%O?f(>qqlDBM>_(3oJXg77>iXG$2Pl9egM4@dG+_A76f/EpW"%S1Dg*mUm"g:lYfVO9OO$iA:VdX*_.2..HCSHmMXSkKLnTOR.WKAV6Dro*V5d:Fh9Rcup+.+DS4JaMLV`,uL&moHlut]Un>D`N:L[%erTI@>7D0cnQ<ijYiu?/7fQD]_)\6`5)fL:j[;]7o)_dQI?%CK^QL"&r`9X7q&kLm?WRfPDkcT@"g?MT&[e&UN;cli"ebsQ.@:uM%^rm_Ng6r&V/DdHT$=es=R3'2Ba66,KI;/%.%BP64_Z_i`!BBGr'2-SqQrT4rfUDUD=@=?U"h6S1Fe[9OQ":TUr*>%rSm_d[L']K`%-kjYSA)0YpkK-D]Ffd+tmaYq#"9paEp81:S;XFRrU1)RpX3"qh21Z6B=2@rC%+N:g#lumh?7<Ek_8p1E!N@I>[3so)Y`"V!N]p/%%5DbN'e'K<$Kh<Kg#9?OQWuuJ+4k/S8T[2&0pgHOb1Q0t"PrYu#"#tP$ETY>f4rloea<qU']Cp5L(,pCc-SKRU,5k*2D#!NXILJF^%oei*3at"D&1KV#@5h6?(qI&`)<Vl,p[7A/Bn0hToD;l(TXHakIZ)Z8f5_@?HDtQ-8')l;.\kIS:Xa*8HSFMB>Ds[L:mlf:W#*/Z@%/)WRHOsmSe=ELJX2YCP$C0$ZPbNeKUJ%iSIrm&`^':#5SSA`M_#?h2`GP3uoHeQU4o#TdTI68Jp<L.C+^EE8sqU$>'cC,LmkM80P%).rmG4o<@[2fdedrEL+5#+_gql"U0bX7FebM,2kP4uRu$`h.6.Np?*$"BtBWYcWhDZkFFDp!6n_H0LT]hOK'i!bL8fHY@Gu7K?aZ%CJ1R495EKs47lKmH!K"$4DOXejZl2&TA%tS**U0B5So[l3^loPr9BfW\5@D#-EPblD0B_![sS!BX-%lsaNSr(\U=a9'P7FHfo95`%nL#8=9%njpe)EuGXbh&C;ogQ(<496[lpfGF3#Ck5cEX`uCp$Z9r-lai=lA(@Nco4;;qD>G3g01FG4)N/YP=B!hN(C]l(<QUjcbiO%KF2%GSr\UXW.-g#HoX?!B]%\)X5E0:K&4Wc`7rW:VV<o-?WV7oU0ej;@#tjrK&<'4?>?hF-nJt%3)9)t8N00GOj^fXVN:MjOe/$p%X"OA=KO7CNLlk`1KkXHDo`sM5*Y@tg@`7OE)F++V]pR6BVf%Sk44b,30mg4+hMX=e;p_AqdASZL35#WAab)4YSVhu?>J&1K9s]9O%kWG6I+'?HjIdd-$V>0^6Ug?@Nr:e3]S&);7YUYQc4IL@.<n2;9ErO5"@Eo]/k);mLRkZq\N*4c<[F+:<N9abF]U?EKHZ$)SdBU'#%GS<k331r\I"",Vs*.6$J;_p>jVt-u,jMV9fQ(R[.8UJ\KPVkOu"qI2pcVdrV+6X0CLS=]@jIRC^p@<SqQ6pr571^Bk@l\H;fFdk\%`3,nKnKL%-H>kG=RsIg2fJ7#.]]]F/,%orX01S7=+W"+=7+^j-nQA4Jn:n=^,9trlXPA,W,CZrbl0ITSh.M=m,g\f@:uh:B-J"X/%0#A.?l,R#h*M9H,(59k+!!"H9?d%<4T8!?9I[2@eO"ZILs1KW&J)B!O0@,HGnm@54EcBWb@!Na.$7YZ-a&bgFK&Y+u\&/XF$nkEE%j7m$VIqBBF`_;[2OBpq8XK/"Q1?Pb+S#jC;B<*,*,;,%HY@#CFg6h'+N0<KiXnn*'2HbX^S#Pt'TbQ7RZqSGR&AL_,83Cq4W/^MX%l5.R>*h&Gd_r-c"nl3Ye2kF'&f<T%M`="Z<S"6[1q,tis"6r7XY]nsb!$e%;m^#O.?2lK7fYm]X.NbRR4;&ZmOP&LX\.Y9ufl9T7%:X\/fBmq9cqn_pjRL>uk2%Tebjn\l/=Mf>TT"EU^(g32R%2MR80#FTYaYZ('l5K;cQhgTZ]]\C!c$oi<I[lpk.a@FK=S@12dtpGY%fD9C!JHcguntKZCnH<67Vs(n_&dUarhu)B#(bN_F,\,Lb]'.T/jA]4sPuW;!N?)>[V_1U9Rc3$F&['(`]T@a=Tau\EQKP^JTQ.&L%l6CQU'BH9=<O8=.C%C5lGU5ddV`G)A^g,p2Kj8rWG!)r3fLVVeBu##rTJNC06FqIIdT$!a8Q8K?RkI605umaRK+[;kW\V=k*7_^`%!8bXL+me973UsIs0<@jkFPXn)Puq0HkopQ$pqiqlf&bY-fOW"%\RR)BpQkkKZ`H3CK-]r&K^/(',UDmoXj<pi*CU@$^ggsA.@?;U%'FfND0'5VqL\iMK>)KWsX-T*HfrH2+N=A5%TU%!`k*Pb;W+QCI=/s;:d<qs\*ES:8NWo=gk&A\=<]ittYNde]V7cYp*\4XI3.L_:%hr\ZM"`3qs2$Fq)8:[eOTF$i;"d-4=5#`:sQtA\XrdG#R7PEn"9kN*DIZ.i!b[L&s=uX3!di_';]*mtr4Z6t:i?f+e=ph+EH@EfM%au$f*4dO@b..S4(Ntc+ngQ0>1L-OPknNE+*h1^P\[bDAW=>N1^[g[rN0`D,H/'V7@XXOnV=K:-FEqCj?p_6VBOb6@&54TJAFW1Cr%a''\T_G%EUe<>j[;qtha:JQ:Ue`+1K]q4nbDo730H*ZTc/4B'qJ_RC@EZ6's2$,<S=KiG:M7F)/VGkm;GPN'Afp1?Nka?WEh#eN@%Yul`MYDNWKEpD*_Q2O<pT9Tat:,c/G0Ku]d,rfCKNd)K)o)(XiaqLl+,&ke+=bmYqpD_T#8U@@70o%U]E7rj+j#$hWX8cY?qA9^+%#%I\"10PB[`cB>]Y:q,m,99L&]UZ*E1dl+`W%:trP?)lpPTMDcC[8mj`)e$0jiJ+G!Uici(7M4]DlG4:(u[S4g(Qk!IG^&UeYPS]%7PL@`<n05H\.ItP'PHBc&+fDRVqsK&I/gY%r*3ED^RrcBVspC<pRq-5aLQ]^C9\h%\GF,4To3U6nt>SDDogs+([jZQH4/m,U%:)Z%i^)bDaglf_i]ZLQhL[b8ki+bh@_;k#q9[*-d.t<XF84,$HdM:#bO7e7ruTD::jhKd4m:ntQ!&Lu_X0s3F6#ZngY;(11'd28FWl3!%S4@I*/):o19'juH-r]Tn`5d6.52'N3,J3nh\0eIVd[N?p&a6\mGJ2mDB[D&$(2mj*.861UHLYA7+a.H:09NDF*Z\UGoEr/'P?jGT%)]`ZVR!'Ra,T6@0j0R;_Y#@REh*f_6M6oAY08[\s0pD%k;PN5%VGeX5F.$:q$Dl5k[f'\^dR>KKlK<28BC-DQ+K:<oNuGuZP29`S%0b!FtKe!`W>,8@c=Z[&)B/0WV=1;AK&op6M[oB4InWI4#FrNtOj]eVYCFnUD5;<I\8>296&])UfEk-Tu=f_#cB;kNVLs&O+:S*^r%G;?G:ED5h4-fAJ!QRHHb1.=FA\!.A]FcYp''Q4MG'r/rI,<1&CiFFclknB7C)"6/:7(C5D`cW+Mk)Ap7$TY3B0[M\e+('VRE<\Wk%1Vs(p[r+2pQXKK7[Z1[>Ks=o%Mm7hW(GD=HP@&p0cF#@KO3]Jqm"^4mf8h2E$.q"#AT:QYpq<;nZ?R1RLoS>!U/5!E<IL0^Tm1]n%1DXI9OF>+]66RW!=?n,,3VO<]Sln*:MmqN'L5gZ)s#Kh=p99;obm85J^WfbV'a^!jRePQlN;cE@HsA^[Ma-$3RD#1BfStc2j'q1j%.+V$<&(Le#CbIP'9#sW&EKgk*)+e),\W7RlEBg7U3rA.#Q?;hak-Ns:Iurncn<*<LDm`-[Nrr!8kLE*ol:6sGMiRUPjR3gJN_En<%UHO$AS<:IJ'ASW]guJ1j(Qop%I(:8GT4c,QVk9e":9>s?r(9eN'8FQUc-p<B1';Z"?6\a"d;pk.GUM&uXq3fn_+mFB.:+2saO7%]%&t)i4]5/+JPYQ3I,Zh^*nk3NSEV#mgQcQ7_8Ru<)=Hn0Xps`tlYsfp4ITdbT6j?E36os!iZ:"nO`[9`$QGS7;Bf3@fVGKT<ZrC)a%8T&2r&t)'8?@M#H.$$d9eg$B.?=&Hs:5bR`U-%$kB=1M@RV5S3Ra8kE6_2s1%/Q[Cn!Ap:%>9=E8"8FSnu81b]UN=]+OUS$<(Y>J%]WS)j)jYjr:[OBf%h7,:VpQQrO2[S@'N4<p=S#esUKdl8QI]k1afd>6&1E2(+APT[(Qq>"V13[\*6r[-6bTdZ/cD-fDb6gPkq9Pt%5MVq%qQfq7q6S:u<]1)1353Fb*c]*kLWa5%3j:hR^d?TBLs)\[kkBiOa<NRK5?s_fi:-['\A_aJ'3@qY\3_YDS.EX^/n5la!WCt$%f4Co[E45L>T;cD-5?o\?mkVj4*eqF3Z>tb*&L8S-F?UZ!-IQZoAlY/6-8O!/.tHNP1fglq8jJ&EW@T4Q^!WgNlsVJ4CI.)CfhX`@%Sn&D)kfJPOjGl[o=K%C(?*ljJ]u@<pmsOcm*^[=N-lpSf%'aLPNBicm=d;uW)_"X;b(aAoD#7<Di><WL`j='lcoBnAoh<C[g0:eQ%rtnWc+g)n)@s@Eg1@rqBBUn?*&DDn?KhBtLfRrETb`IZl84[-1nQLE8n/"`1hUVSp2AD3O2OY1F-&Y8C)bn:3VX[2gUIq2ZJNQg`%7rM<ch'@9A*Xp"4ojC<3W<Yf]83IfI8*WBr7quQOkTl;AEdnp>^K*1FlU9YJL4k+I?`a4Q%VN5Y*QSsJqA($I.i]_bWs%ruDHF?@%Vsp<uKo;G*iOQhA*_XDfkB)E!3/\JZl3DNeMmA-UckS/7)#!c+pOs2#4<cm3@OXc&P23;o*\"UbONCO'=P7)=-i.E7jM.!-OC9V?%0g1dS.0V"eFan'u+Le@;EcbX[5E&IuUq%JXdBp,Vd6TE`?OlMg`LLqTSbm7pX>QXrQQLFj`q.J9VI=BZ)iO8iZ*A&P0qJ+q4rkC(%^OGY157>Ha[BNi9[s",.+&&YJN]YEEd3jRSSpW.umiSXl9q:D@:f9cZ.5TcFCh@d@4I!]Gm,#K0KSF]kp_p9Z89[--NG;s5qlc&.%OWJ[9a)TCB^Z.HCIVsUmCik92SmP!7f\OL-1L'_<Bf+c72YQIf-&HYl5/+Mr-YKMHB=FYW7U^UUUHRt^N[\j8HIuqAj1A+8=d7fH%XG>Ve&nodeO0=$&4gIr/#5]pnQV`KRFF>pa_s[J5J$'XABQ<"<Z0,??>LRJ]SucM%/0Eb3"]dkIc*OUOkJ[,%Z+%(5iE"TXPUXq,%;uK-Hcac*al0-0^$Uq`6pS-Fbd]i?9*_)l?"Ij4JlUS0a8*&,1S[9TcRgPuCU7<!>@%@S.;g?`o81s/&Q.Fh@WCo,P:2+d7+d6.J%qCRqdSOkG-]&_,#Q]t&ojZJ6a8.K)>K6bkE@4YKE?!i!9\#`0^,-+$eSn($UG'q[T<BM,<1W&AG-0,u#kYe&6$9ON7KHYc1Crp\b%o.ll(7g6KRT)g4@2dKMr,<SkFGgk@5H%"pD14SEXV@,cGKqWkBKaj$KeO0#,9@R#Q`LAL%o5QbHFKmQ#L?;2H`dC2BjFP#/69mjp%bR-D'2k@9U*acLW3/W?8dmZj1L[.YNVDSbF?AIH5kHjQ\I-LR?f3rpQL&'.#X_mZVdtOp,a!YjthK32%eN&m^o;2oeV/tZG%Ek4n%%+pb[I&PnD@I)N`4daij0!$Nuf"WARdq-ts%dZn+<Y\dL%G.(eBJUFi9p^"B#4n^MZL&O42kB\JftMR5RIURQV@0FIar5#6Dn=l[%7UN_0T90/el,"4`+,OGDhK30@=>B2ukY2jO]nN/,e+Ff?]3^r4T?WiXCbe+MBSPSB(Q%tZH.2T$UkX"@d3I2f!(s.2=+[%F>Y,O=%WSg]p6p&g[(GcVm54%KXF-PF9LYY&jdFlg^go((?`A$l5A^$X*S?FQAcWY\$OO0u6o+VK^6KhOg(AO.a:(c'R!9R'P<L:EmT#7)Z%.@`(fM$P48jXd9-TuT/lQ\`LdVq.+TR7X9J,F\Q>MTX>C.S4!8:(3F<c!?Ji'IC?6D(i^W+qbOEA["Z5:NMj[>Lm1rmK2Pt4OIFm%@8'4\]0YeIZ_t>AN=ldrF>o:Ld@98ND5N/;C$tnCAW0l-TJUjAj2.o%jTYh_XHa,[o!=G@p[r4_=-'Ou$IHIETE2:S[sDee1'FMq%I`oXq[aq\FR@T4%]f:rGZ\curQdifV3T.hD)]a[r8<!tPKl2X_n0bO0IAE!hI3(hDk6[V$h*lP_%9pr$mVl)6d2E?A)kJq:p="P+%?2_+So'`hpm\6-?#U:CKWMc2O'MpBh,\iaQSpGc9C%ETN6F2lP2)Yj'8ZX2)Rq6T@Xgn+s-Z?lYd%US.<IT<3l!Kjuj('eh1%T%H%LpGfgN_$/?jEQoP4p^-6AB0t/58Z3Qi_@CmpC]lD?LOfI[gHG[Tjo,pKAjj<Wmn?=1)PI&Urq/OPelhCkYOA`'-.t=j;?UsUYL"f%8ua7_PQ7^0*5i)ae!'*S:9>7JWu@BREE\=^^U$!W'M9O7($LRb*']!'*>tpeG<,UP;eEPG,#9O*_n6lTHlbWu3UR)2L*7H&#4m5d%l;&+^.5,o9C2\j=gmR_2n^8jAjUEBN*N(U=3UTdFQC-XVcBU:-a4e_ah9b'sg$%))J1r@fpMFT([0QY5!!Zk;I_;M]ED#9efZ<)T%CKj/74[X1i`EK!$O?ZNME]o$YWU`t\W$`oE>WVn.GJW9U'XR\GT>1+^0gV4K#UAa5;B8+AeOa:RR6WsM'Q-TCj]opD!qB^EhhRI(%!3:.mp8Aj%)ql8]9>S'Wa=[?HV@AHeKXL`LSk4na>_cb^XJ_>"5-EP7e>@_L:_#)@j19>We-Po\##-o5J0Ap9OjNU_,Bp^hc]*</%b]Jn=LCZ\GfcV>/n)G=FJ/fAob*J#WqRA-uI\pN);IPrfU%u3)I=s%gr*BISHsE"lAu9[2nM,im;o;0#kfrgZk-aLs+miFZ&)EJ-%e[9*\:3u-TpT7O^^Y(,<pD,W6g9uD+f$7:#H2+%:(XMHkK7CmW]o(]kWZ:C:B5BLqmsOu\geEgD]_ZKJI!OAe=6$n'&cQa7fSjla%d@Pi,p,bq$QM5k$];@a7e)sS'G\8ajG)NBT.-^L)M=.tD7o#hq4D\MGg=MB6f<f4@\3fGtfNI_+&bN]4eYXG_2^95@IoR9pWio8p%GTP0qc6N3LipOb+7`EYe0BdB=:2fBjq>DeEd6\//]o5U+-Vd)gqYkKD3YpC^n].$*n*2HU'3pUirEGZqCaD34%;MK+C_t=!S%dD`%IrfDl2GK1+>I2<DpBi4i'D).<Rr8L$h$6".K*u&<bCQ]MNd]X8p%\!R0q?1X=&/j6:nR)27i&G_9I<+-miO4FVr2;WYiXZ3#hlf_%7;b]_g6<GB3d#&#m>6L,%;@'9clUre@Y,@U:Qs01BN`$s@SNo/H)9'^lmI9_Sor0@ig+8Sjl\1(3[M_*0>:(c0@$qJ>01%W8r3d:%06(#r>Ph9c-3E8nW;[b^=#jg8IdZm-*pOZ770_KVUWru(IQD7WdTb0qNadO")Pd+`L,_E$I-dg2RR40B,TfDRZo!/Or.(`2g^5+p%!K7CQ>:?>=QolN2K0/ld`_J%$8oD[^eqk.)cXAbk0[NYj@5&tQTKI6BP;&Baj=#"%3o!/Z"AUTUi3MlJCbYcDOb`iiQ'uJRi,[g9%h8HZUBcY<Scn)lp@mkS.I"Tki6q9#,@o9CZIb@CI+0/(l7:Nk#3PQJTWMMl?ITJcV]hb2"0>pWM_&OPc/*CuqYC.AF'ek?2%Zbgr%ZEf.r`mO_l7L&2PM,87&18qD#<EZU\:PR")1mcm-/4"?FAWXBnd50A:/f`-[VXjiT]3d==!N,Mj$osRj]Ds2Qd,tKJK#TTk!N,Mj%9TUVLGQF]7!DJo44kf9TPn,"H;&n'n0WbjnCn0?M0>OrT5LEN&BtOGpq>dDTOeYU;;u$Ejd_8.r!F!QtHIG).(HlcM^.&)ebmcZ^%?cnq0i#n;LPV4/5qa3sN]G0MS-06@(Bs;m*OH_DY7iku74tG+#0H;'BP4D&[;B'XS^(<Me5EM*_"t?C>V`=%eH]o9c.W&M,GV1p;%U/(EpIf3g,S(00)Ca^[7?bH:^<G\TJH2UWCgC>C1?[Pnhe?P\[o(o2B%@&TMT>qs,Ir)()]RKB//!3#P)>!\n"*VoRLGX8nH2U)-%_*%Hu%Ss59eqtI?jj36/:[`NrSc!d3iXIipaXr_JqPD=7Ouok>m<'3tcHTmn)O&c+Rt'OmH2W>mf:USHAg_66lPH2D0/S1?!."P&%=#/V_/U^s?=S]fhmGoGOos=N1T%,K`'m+P(^C5H?7p`sE>'pgi3V)]O\FO,#nI9RAqeDNK+"(j*dcL.[pVM'OA^7r;8Y2"-]u8q$%qSaBgoOfot/?`F!<*EH';J6\Ajn5[nB(_)T(s7rlD^\q+3Scb[^7r1/qSd+?)t<4gjn4Oe!AXEFEr/#0=oF);O)G;LXDZMKoh4r>%\F%K*Qc&884KG*da7A?bEuk"lS<!^`W!:Q5(XJ@8H)1tnbF3):b=9OHoD6E2ogidcOI4WQI6PCCa"T!Dha%#41AbI7kMsa6$j0Z2%CgGIsd,*%5(F)Vs&lC#"Y?sCZm7)$8Qe*mM='GU9IZ>p\.,X7]XO!*^0:iK0n?(!+f.VduGd@2-cGu8DR[#'=?[cY_"3Vp3(pan9%%$,Vo0_5(Z42ZD"9V/nGnT(b9-o?S;oo#82T%,Lb(<c"7'V!X6n$2e9rSlN(n5G`<Y@$p\V6bhKQe*m^JIh=:KBDjM@Qc\q?G?bR%BP$iEZncT,^Ym!*ZhjJSmjYC)]MiP-oo"$DZm/Bnqm>I)M!^\:i<YN\riCRRhR+6lqBbBhL6L4BhBCJ?ilmhBcekSWNpu>P#>"^F%++e_Tb3jjj7B[4T5IsEP9IjS.B_NcILUjg"LbMBi3A0;)>$Z=R,->F[%-sY[kWAJDg"^_T,c]E@<'1gMVf'8Zo,06N5i9&Bd3qb;%[1AQ5MGX$6eU$?TG5;)b<a(sH5<UJ49@(1I-l",-`(mT6nnk9Q9mtcp9g;B)e`LK$(M`h_^F$qnk,U%Vbk?Y@3Bcbdh>5a+\?7KU%M!HG/fA]9m6P.",:TEE`oD'\Ps7b''pjM`/QhZ!"]ntWR=3&:4q(&fl52CNe'2LiH6h,Q#nLS!GG>$r7bZX'+IBt[(rip^J]mm[g%XLs$WI@bhF]e96tjE9M+o'F#9fq-Y>M];Od,tTas:>TlLI6ZSX)h3<TFs\KrHunl<gQYP`NUEoT2em]1mE)o0R9QfU\,oG!DL]#4%qYJ-K=HZhmh;0'hp\WEOC$U4XQf*>6Z1iR2<ph'S@dR"n$KFb\M>8E^b#*"fVD/fH=Yq-Qg^3L[UV%7)db=?$!oJn,LrMN'#9C'2%p9OYr@3"'a0<*tO\lYA<2CKO+./-;L[sp?o5CU7=A(araYk(fQ*hU!rf9.f(+i+IXhR[TNFYY*r;*F;o@;a:VSj'KpEH##22_IVJ%`HE!rRDtJ[gVlX'iXD^o`e)l%Ipaa#'>*FjkUK(Y\"=$4XjuF[bPK9=g;1U.X]7$&FiqC_(#V<KIWWjc-Ym[qO&SLej%*U/h7a_A%E6`/mrUE2Jr`IVn_J4#;Gq*;6^IOLl@=,[;p\T[A\rM9kXZr-U!WNk(c^M98pVS'Gk(c)!rH2iMrj'Z8Y+/G5S[PnV?!aRV3a+I,%0,LM;MspF.c25D)mFqB0iVh_/^NG!EgH.!Oi3'UpU_]Z;/`oe:&Il"uSZTJ7XLcWQXd?ZCFjCSbj3+e&%k@]B7oj'dIai>:!0%'i%rVZmam4p/QkP'o(kOsL3pGlN9:tD?9Y/9_>?(t&GjNkX?@_hNeHA>S1RM]/0:3Mfik<;mL`Nbe+T29JN2`JH6aRJk/XYr*r1PWZr%TE4"CC`]];S450u<\@d?[Gs`WGr[Z8Fn\#/hjJ1/^YO7QU>=YC*EUtTPon[\h7<o@HsY)t@p"/^Hu.W'-Kdj&G)_beA&gF;SV>2?%^"1>cjk1!93b7qbfot3FQR\'ZA*rT;2\TN.<1JMH67\[?Tk#b.eQ)dMW".:V5Js,j9k'pWktknllRN]p3aqrHDdJu+F68>_CNXbK%gJ9a8<F@EF__0KkYl+6hi36pDrGWt7:M9*5])jCh5%jQNiC<P=E)r4Lq5M$ZGUlp,H$Id$VNI2RfpKK:X8IXUr6dW1997)[i?9Ig%+RpZ:"*4G#1'd]j(7UqOK%&qk[8fE:7+PoWAU(dsoRp`M]TLu.JQ2!M6.p0&d%BE,lK@n:[5'\CIrC9`F=oID-=,0m`;,0@Y'+S1%XOX:^S]*s9bQSK)3OrNQ\!J,H3AgfmXDArEJP])Ch>E_9+9fP^(@.7]4eeHq]'2dKbipH]Yh>d,&OeZ9Me+qi2@99SC;"Z`LA%*,%^c?6^3,N5X`cD&mDbd*oBF94cq\D>+H55l1r,_Fgre,c]?3I>Kq"0:".4mZFbW<#rJ?``fReMT0!gc:0f;EAL*!YV/HSnKo"=/,2%/[5*H_`kH%"#ZLq/'`1,=pJGQ[cT$N**n+'EGi>'.=W4$iks4)k]=d?<rq:Ehg<N_%uWA!*=&;t<PcARJP2oYc8$6/`U83.J5s59%Jo<UDjhSHO$D4RtJJ[su(RhJVR26J#fb-=8oMFoB^-i>0s4!X(nXm/@b>TGb],;<#c<&M0WI/pA&_C2d6_9[5?UlNX+>:/5cYAJE%4Ku4P/b_*4!][/2cZE=aolZ*8;9ZpEFjGC)d_t3@(h;L/(qjU$D?0Ob>N4r,'cacjO!X&gAobkRSBi6*fN3cG\LV4[kkJo`@^XUL%.b[h-\T'[18F;hYDoA)5__*cjPV-Q+]@)CLY+s7s'^IV_(KgX\>be9o7(u^)kC/kZ@fQ&o$(.u]%_H&7T?>f,EMg_?)oW:JL]^Dl%[Q=Ihc9,sa[g]'HV3S#kD@s_>7d5iVY#iVE=SHZ[,up]VF*dG,qkb`:Ctoo4n-^pomF0a=a[j/L*d3hMo5rZ=9sk*SI<F,'.Qcs1%2AHY&VG"$1=H^4ql\`>c:@)/Q`"WkIa<8gd960:_@o9mekfiXhN,jg$$G5_CSL<f8H#j_aP<QnLGI%K1.K["c/'F6E,C(Ytb,(TL%2LMjcBPtJIkN%JPhJ0Qja^^n?qZ>(!bu/CbC222m9!p$HFu>9CSM`@48)J-bBL"-L8?%PH4jC-P=blfRVHBTM^QiCE[oUKbE(sCg%JW)$XM^I``Dm/lh.As`c1HW4-pVI%UN_?<jTdYV`+Sg3p@*8TFe)oH.1`Vd=9t8N.MUZBGG3$W#j6<d;rUs_9aTOAoX[Aj>$N/B0%L<^0]]QjGQ1.BAk9G4Y.I_D+m<DS/[*mV(WPP-IYXU8(lZdAN#l+k_:/1cn@?U%2\\2M<V_SFGH/kGBpP*S)DFVT^*B22dGhph->%BEK\j=dBkR]jA[=Zs[5E<NXGj\u\Jg-b1h3Q%*uj2t>@^\GEFG_S,uL!$U.b5`NW;@&B3$aA/l[aAQdpDJ0AGj.GE5b_mC86k-Bg%nlAJV.#tc6!!V-QIf+p)BuuS`(DNb1YRAB<<19<A'Hk&g]U!qC:W:k$2@[.TrAWrX1f,%AK4g*?CU^"5>1KAM;7`_"J0'_f!^1@+%XHVSHca!kL6G5DG:+?2#UaTr=4r-8$OU:]Wj-_tY)dQbiL!Op,n`B5RE),^@(kYBUW-GAAhmW\fe<\/<\aYM&8Q+5(P$M6`AYZ#A%o3Lm`o\=bBT7*\bVt0b/\PW,>m;ts<(#nVZg'gr#GdtHN<,l:=$+Bog,,!smX8QP>+\te(0E?L&3ZL,QDWtK,'Y)EV!\Z_831!2N%@&)HI:ENUZS)iV!Om[B48]n"_7&`mfDZQ<[\fE)Z%aCQ"_FuumU<$6!<cFdk=^YmlNG&*];P$*=A?'b1#:B6>=RFdJQ`hSk>3%3,%I%3kQs3`n\@^ChpJC>Uraq!N!1U^7cF+dc2;do=m50:4*;5$;(6)QZ&5)CKJ](mVY5/-i%NB*3lFgC+&_P'18=NrW*-h$Vk4U"d.%SUs2-Z@%%@Al"$:Mc<0m5%5/k.B&8RVI4lKmDV^>b,olV!nbUqZ^tQ3QRO84]<"i(ZG-!>9nDrU_Y+#Lm&D'$-_]dBm).gUZcslV%IHft6SHOo<p*4#g<2uNm/Bnk^S2aTaXV=u./c/i_ggZOpTGO$ncj6\&eg5GR_LP/!NB1jsmg!3ZHM!dUcGK!<batuh,H=9l%n-6Z%6Af3m$TmIU<Q4(tQG3q]^(5oq,(6IaFqr_u],Dcdh6ghOHd/Sf*X3;5[NimW8\mPjcF_+Hq=e!4^cm#:(sBP3.f&g@26r)R(%=B;%8?km;<<S)>0U:31Mk(//kDj6,$DeFm&R.[Bb#^"1<Y73SWE'*Oi9-ZWfO12KR<iAl]cUF3R!0C=P>N_;2@M$5+6`%rHQac/c^lo(%Z!?=;Gb7oG?Nj?s%WH@IZnilUZhGV./Z$+L8eT!a6mcXtV#`M`pQ/$"V7]<'@fATg!$.7)Ml6@L<9sNJrDTNgRo5aT5K1E?<.@tK%aoA9R,HB`Q>K*(gKb(GfcIT[tpUT,WcJJKKEVo].3%gF2HeN(Mq=8Fr2p.dnC$Bklh@^s3b5t`tp_=:Qb"B]3;\K[F@ok$JB%o9n%04++[m$*aZerHl%imo-$YJ#)\D`---i+A]D@I[W.IB`6XW=QFTX'G$Q3W#pN_JWZfQWeTGWu+^sor0H;C`[M@`TF@&:$\Y!\%6>j%!DQ.7F,'.%Old'9^9VuEfs5]]QZ%VF/Xhd$c205,6)o=g-sT"7F6]WX.SnG5d%8$=]N?%17+N@TR&TIK^H62G(FsrTEUn7%!];i^%`UT8n?C\O<PDU#8op&&O<qH=UpDSo27H!q/\"M,@;kCK`hXIfHHd'n,?4ouhW8k8-XuM#lkP\R1eX[$-hWb-\Pi#6Vf'dg4]X\q2%'^kKC5cVuo,?f0:$Td0=bO^(QaRl5OLpEb"jbTu.6r@2'=1;7=;frTR'Yc9)mdg4;j-bL2"/mu,9e?$$3k(sAn!j;WG,T]9'FXm^%OJ>6=e(@ud?146J'Zq4-qaX"[4D8Yp[[LD$/TF)C@^WJ`HK-)P"3S4AUrDV;Z@OCmaBpm[3qhhk/+:Us>R`&t9k_L1!r_k(D_A+g%WA=L#;6$/-QoF\gZ0qTAf*jp(eLmnhGF)],:)dm(.7)QM;9>Vs&RZ8Q+#]$H\Kk!*WjD$O'91P?c:%$s8_Bh3kJt>7S"KeuQ0)\S%oA47YC7R1l'#h,VorUZIBqJRLO7(I3qX8dmF`!MDfgVlGgmj,Dq/a/nYBF+/lGmOie^m#d:sqFDREMSR0l]HaTPmDPa^2*sP2LpK%M'dTB=StkarTc7ro)927B(Q".`useU3-rS5YqC/WMRDci>eoX%?cD:fa(a?k6/H2Mm&rTU`2n#diJP@mdFAS,+P<l6<\.qq\)$>P%Ns\dcn_00ShQ%["iT6@][c@o-;)N!J9@D6cX^1P=UCO'0Kp(U%]&m:#,DmE&jGBn9P1#XW.aRREP4#a?1Q/J3%Mj8S:KhNa`G`!.%Ap\JMb[.^>CZ"gmV:L%ik#f8Uph5QPfu[0"J'(Pl[`Cn'oc4WgTEKUOAf[^`.)B0R78be*G'P[NLIJnt&eHCTb?->(<MJ0pp?3)@%D2k\,+'FfmY\OF5k,>0)D"6Wu*u]#sZn>>2G6=cC^iN^N(GB']R)>!!+0'+7BM2<U<q_k^SScpAhIj6OW>RZPCGXO0diKIo9qjSe%qJQcVC`jUq:Vt^r4\LtWW;HRpLGZlTank]EWV^E,=IO3!b.bto)r.=Be#_Bh*,FDTf/mqn*s?N*LC`9n>lB>fo&uuTRsTBZ?m0tS%RtTU4YRQ:(pkP8&"fAQk8E>p*:.XRecuQttf3>=X&p<H5IB_,soch16m8"Vhb3rJQD<c/5gXD$kiRkn=^#o:e8R#q2/uPP(R3!JQ%l!e_9a&Q6,n\ZeT#'@C2rV$!QP@]-9.[B/YQs`JJ:K7NmB]uk;;eFX5\.*qjQ*&LS6'DZ75D<bW#T^CoDN,)bB]k-O`0KWSk=/_C%lLeZtAuE<TL:7MdI`+,@mPQk@cr7]QJVP4dRS28.6eck:_YNaq*Ao(REgO3Vf>#+)2L3%fo*a$mmCT0CDNE[u:QM].>D>Cu%qDPp%\E$dRlK?d>`<g+P=e)EB/#]$6FK]H"l@p";k?g*GZ8,q,-Ji*q/u19M[B$tMZA\J0AhBQQca\*qlZu3u8bM:SLsf&DQ$Y-So'0T1%;_!,Y\WeS8:>o;k8qj<,OkRAkKNpqY.i:o/EqQd`Xt>,O2S!!t&q?Kg;ZXHQ0>?mkg/h+!P$P7Jeqmr,4VgPj*fO1DE9H`,15rS!%TD(.MgR-qrRM;uFKGUH865:>omR7SI;Q75NO.2b9[r%%.4a[9Y\t5;*-bVG425XR<MYm]Cb=<_>g4;iGQdP"#NmHj">Q";&gn;/r%%m'#.9QnD*mK2"#PDKoMYAK4.\HpQr!N>bZEX!**a!O9!Ruo)P>+8g`P:b5_!]lPH;18FE/M=9?Hc0ctDEf0h8LKO^5!93FVWq1M%UsCL(X"tAJobj09"n3&Sna.&=%PQd'*F<"N&`CTEXut(Q&"F=NRVotF?dFj+.ZlDogao7CGk18B=1iFpC)Dt'`P)+f'GidI2Vaj5%4^hq]"a);Zo$F;AeB)>bR[H@9V,#ftaPd6KTcaGcnk^]!qNLk;l4D%aN%C[j($X3GpA-nGj4d9".0Xi\POM#RpLO^-Jk"H)f)f`P%bZ0#(an,GD"<23e.oi2'24?ttj4OL(mc,!d@'.GN#l%0'NH5UjdeA1BM/3mf*_S17NK0ol?7p1)Ib6gq\-0Mq[<f/'&;Vpr"/kjZ%313&GaZ^BMr>VD*`MGF9@DLXc0$9+>[Z:,r"\9K"OXcE)QSu1jOk2]nb7h"1Zq(4Xn8)5gs4T?'mP[1uB\Sonb[B&_Qa;2a?<9K;%eAg@D$5<2UO0XGVD84n7=)X9A\0EKAlLCE-"D4j=h2N3i7cOmd?TZ6\cKMoP^ApYMg(L\%T\06.PFOg>aEjps;lB"!MhJp,[u<G9%hD@"YjAqgOZ>Tn+Fg)r2Y?EO?5u/n/nDgFWc[4:GDoH.ZVa;gCI7d/'/3F,u@!t0[T4\i90^;Uc`R?3A40B%6kIH6p"N(Y-cZ?WZ%IeM7^Go5Qp4)c[6]\Lj,72;3chBncfX%"2'p[IlJ?'\YAZ7<8"g/G)"?;t?OBE3X+pugr12[^j-ga>s.h7MRcIe5N(#,,I6$efA@%`+jLc^OGIhiisSSq@ppeXu5[/[b<.;STQq[Z5Z;@bFfitSQ6q/h5W?>]har"$5N1HpQDD"CNmsu7<p9n^L,F9,)[(>h:DY;a=Be0%lL<-:$[:I4oDq3/kfH"i<K#n\,YF+2Uph9%>5=tHo\OSk3rcRh#Fe4fJh%klp1L:h(\];ST,4BDn)K)ALcnc\YFqcQcI#tC<,1l<%ihIpCJ?pTYhM??T[UnkqhKkXD6;\FaWPYi1'o:?_*9)]nlr%;lEr<%Q>uk$^U3M$]BKh>]"HsO4cN]R]UJl!FP4ZVkb9t>$gPuZ<%J-hfc`jj_$lQG2.FI[:S8`$ki048a!!">^o%H8%soA1JhVc2&N[8;_T:,nX+-YC:u[Nmgc;`1%qC91USBmZa)S_qZXpb>GGB]NG,%_4-#)5M<\Nf,&F$J+bgIA.kk_ojYd2=ufOb2`[p3XVH*bT#tMmXi%E*oSL)i9^H#2Y6QGQ\3q,0n]VtLQk4EN(makFX+-bs9#8fL%@-4!#q1H"pGgZ!>]j<9cr-l9fA*/#XTOH!Z_jEHI_W>:j;D<0^>39;W;SXSH8ibS8'QD/e@0U9*]Ptt>CB:qud[k!S38>gF89QTh%1RClq:@)3mB!.5fSP-fC\IujmG4+c.i)Fp/'ueJ+OI[W\GLL0dp4Xoj'ZJ>u!a;mHpLDjdE+X"MGYOck`>77$>o>Z:SEsJf_ITF"%"Pm@+8O@(0c!pYKku"^5,DsRuS`??5'N-?RA&BQsU$B7A:P&91?joT*imi7CZcJuY9;0(@4GF&Ai!%VS4Q_<h:0CEqdSm0lq-%sH%'@%FMG"[T\p"YL3,`)lep]bBt,2#"I?Pui$I30._fo7U>i0S=>Ul4IV%DC1rfGpgB=<kf\6;mu.GQ/h[`_Jto"4aeA@.hWK9k;LJ%e.r&r4^O5$frGF.irb?d*`/6)f97Lg't"KUN>]6SFeHk$YD'(%hXMAm3uNk*jo]?`>5^\-lij-dGmP9)pl)uTIiFEH]T@t@2.;AC%(1@dsdpXb243j[AH"[u6<bTmd"Mk%K2N2+]l49:pKi'CmQY/RP<V'@Voj"J=Q'R)A.=R3.dQAnGO$.!'rhidKQcQ"mQHS2]h&O`_%3K17>qQ_k:NQbt_4%P7[)"2"X="P+=+d)'!T@sQ,X=BIYhU*.ZiEL,=:2]V"[u@[`7/-QrI&_P$C?cKQiJ#CF[1/0,C9[O-(HJu3%1j]"?^.J`L+6=$<QAW/:6:]WbEK/dGim7QBi&0uteq5P!X?qBN]K>Q^.jhZa=/6s)Wnb[RJ>:C*/3AC%fdoV)""s(kY9Vn1/^,HU%1#Om2(5NF;Dh#:S67ZJO0-6K4T^m+VjQf!icQ*R:HsO09-f.%'#t*nN*dOE7g9n/:L/;Wirq:YCCoj'q,a@<:d9L.['LF73^cQ#)%"9H'o5DJF!:iuEKjA:bWoX;dgK\J%#LWV6'Jp#0dLWV6'o'#jJ]'[1'!rt:R9JDFdFS&+(GeWCVGQc'_Gi*(A$73=e\$V^\nN"cP%_g`(R0BZt:bdrnajaK/4IM4"QK3E5?Df.\bFm%m&4lcY6(7oqB>\(\8+KcCoS60tm/PYeHRM^0U*hnn-FE-ekcXSBa:aP>rSLdc9%9FXEj>Tte#<lQ_rpg!On[5]h>AU!Xo<(M$E.^Y);D//fK,h/L>('2T*>@*"e6(bq5m9iLb<<Nk5B/emsY2]Z13j.*YU+-u5P,QNS%[LmZfQ>]*%_Y"@L.`JcXF(f,5>!,l,0"#S_G*.Pn\rq,t.>>pi#GkRO'FRYGAH>nMZE(=`%D4C6gb^O?@_!**L./FXY[sWs4AKq2%n<I$pc8E7@ff<f]7%ZF;3?5qZ^r^f(/%!V'X\LL3fhu"q\R0@latGf=Et4?QaghLRI,^k=i@X;gE[]o-QO.T(<@?+A*\KPK;uXuL%i+<-=k8W2l5_0^('WWmRRL[n1[MclE4a+NFYDT@kLEaBOfBt"VP)>qq!;-U,'L9'Q'\F(Ub:8rp@`3oja)qKo[c.?d4=eaJAZ-LF%od8r8=st-7K&?:lG%bYc6R%k=1+>^rr&ij0N?K4)(J;6W;FBXB'!9;$KMhnS6OdF'?7>aa(,*J]\Pfqg`DS.<;?:R3mAGN#H=V=B%!N&ZtRg>p4K.6@_9S-3R_%^JYbeW3I#,Y4oPR+1-K.40*98$6S_,R+m!_s1/VT=R7ia9^q7DPnX@*6kAa2+b1@*8&Bc=;Zl!_hRa%,f6Os_,R8jk[/]g?oeLR_C,,rT?V3?_P&to__?j<5VcnD'_BJEi[%MC.HQmj`Cm(kr:mq1WV*S-lMO`#A5fW7-OTb:!QgQHYHRW+%[XsY8[`S*UOY3%u2STSqCqU>>$II?%grd9HA&1Uqk@coa.U?lYX`;d1]<0:$b*kVmq_X/(aP&QAFg(.$-\b*[%0r+QN7o_j69pe1%=&RtTT]E+;INE\p^3o?4IXAh8C.n#bXg-XWb.ksrja-p$NDkjo+B&$MFM<Los+9s6.(eCQS>dKdqqR'A[tNbZ=)0&#Xgl!t,&,Am%K!%"I8<kHDXV[Ba7W&q=R:g;p[.L7L8#dq?;2>K--2jftaMt8:4]74`8Q>f_T2!5M`(_W,peYP^J9>4rk4.0.i*g:[$8^N,EFPD3%dPga8QNYu$`fh#?OH$lfWP3j;,;3A>Y(cs)U6Zl>7U*9_de+Gr%$)'jKo]Id4V('j`!=6E]P;'s[<*='+0>Y?kGcKJJ_g91['W'4%BrlTB;IGpdn)iTH7N9^>0SM?!*M*/<a\3%aHu2,n^Qj&R6or%]d\jq>dSmF@]R>_.P;`tqd@-R,dI6TM2\]Ik(IAj78u01i;S0O3%%<i+OL/7n7B?D=R15RljH!qNBkUGC-j?lBQ6)9oJU%IN\?6!uB'bg+F5jlq<gE!uiM0OQ-(k(0[],lHma7-iZA7i`jbFLXo5AtB9%Oba8$no?AG+$,=H'e+E1]_1qDEV4!n.@e?bd&Dd:B$mTQ0-/Yu*/hQYVC\?&MhL=4WRlaWJu2:(gm82DQV4r0`fd<&].!C6`Im3A%9[q7^?-)IFT6e2GHLD]3hBr6.%WlO"AXH$%H5Hlq*TJ:/+G_E^lYeF,rsHl5,+!0I1tR4W[8aRAh8c6kRudkuE@,P*HX1:9/+]ft%_OABI:050^Ou[S!-cg$I>Asf5bkD#C7b'K2RZu)nWb^J,Y3Fa<`1LZMo=;!P.ubOAXPo2hb4u>+"ln1`VrkqJXWO:Ig0L9S=Rria%N%YtqZS[LK.'$aS(>tn,Iu>QkLGSXN=_cbL,bN;-V@5T3iNb&6<3,RXF_8T":t"et_tcpFdd"(sOJ(EHZpY\.ZfH7Ap$foL3@B93%PMX12?K;l$f=`c,6Fn;JS>@Siki<mm3+YM:([DC%`]\5ig'@4of`:OA+L<WsLHH],edq-4Cu5B"I(+V9)MYo7.5/$a6@0*=AJ6<%%1LLs42[ju+3!j-mV_ZF6j"':&RsBmZ/IY&%Eu<DO!U/1Q/D7hrcU\jmD]?D.S]*5-Lo]::"s!3?`<al)1IZ7AOZf\O/g%;9+bKT%%Mhjpu^mjJi@\s#4T&q,5Mj94T]4/<jrq<P"JX>='bg$4#p9'gDp=[mVb`iY,8jD^<fYqpf@lQJee[7*WSGsfL&cOd.`$/Y'VM3][%!c1deMo$_YCK:5U9C!5[g9WBq!Z0hTi-laZZa.[4ReU_n?2[D+6hlEc;lVB^/!c(_lEgl\Dgp/80d9=UIkQp,M"OB/ag'^Q3^=b1%T91M4<?FpF?p2,K%Hu.$(EDd"J>q!.TQ9Gbg7":SOus"A>eb]Hg[H8<ZPS/R^*F*lF,+MNIC.hp<671,(]0'B+nC_A-s;"gL"iN1%!jJu:J?*+o8G<qB#n^4uEP$LGFLW`!HC[tf1%RkJT0mJ4q@0+)j\(KD%WJ\b$l&D[f7ZFrG6(%!4Y+?9+#06Mp#Wj9SpjR7E7Vt`%h.:a!\IoIDV7,aEEGV712`k/5=cB/GXK-DkDPsJeI\D3nnhKc(R&dd30$T/KJZJ/dQ^6\.JpY(F4oN*s>,.g>Ao?lTqK&ZqS%.(S%Zol-B-rq'IpSU2lLOg2f9s>l9Y#Z#=c/<\K3;IZrh?7H6V(:_a](^u.G#KeL57-2=mUkk[k12]_"d8IrWS^F\4Csj2e3'/Dg1O>?%:.D[0a%[Uu7TkA;Cu*BRe_Lk#ql*_DaP>i=Q_1-T2dgmQ?"UY'DQbm5RHIZ%OXP+N$Tu6C5N:G0,$oR(rjfj0%sbR%+J/h\054[i%=R11<;Wl2'cg(BUG(sg9_/)`H,k,KV)5o9k529YICYT^nDO$.A?i&LBini\d5nNflXq0u8fkDi&ac;bb_RmN`lZH"O1S31`C7"S?%kjmH-n>FIWmlU]@,6t@b#pU?Z=f45#40k1Gl4/LQA))S7%aD_<&d7@<DAl91XG/YkhSZ2Na_^)G_te8L\>Sn"FiJG*por5R07pRq%j=!A+r=_k#2ri6]p3D6\C(,=@@[00OJHUJno_\5TVD9)>G^H2+5P6(%5>*)F$T%C0MN*'\<Uq$\iC$&)\1^Q9GOCW`gs8;,WSnK:%.DQ>nJeEalDDjsS8KmZWs$2(E4b%Top6A`pC'n_RVHDnmWr-ImUP/neCF_rWNWFZXJ%'KQkqa*iO4<J@1mK^J>!FR"jSVBD!BhQ?%rM^`u=pD;k,0=)*=Ek5\Q_!baXs8/sf=:YGa:jU8kl,-,]eHdRP8_h'4An<3Qn9!<=BWit(48F5V-^8I*nqC2S7C9a>IVPoY0KWK%$\^23Irbd!2V<hgRr"n2qt542^@cr)GQ0d'02*1NM^sbR5Ms+qhJ[?,DZAU,lfJ!/l1XpoA87pNphb:f`DBdJf.T(l,B[lZV*!GA%@1`U"JB1Sc#;0+prA;+s]s6DHbLTJZBW_lrpHBoPjW0fPgcs@dfPt"Eh6L`/FmKq1SZs)Gh7W"]Y9o.UU1<TTGc#K.H-m.5nYTYh%21)`5J),cY(=p]j3MSNS+EUqMQ1+,7+3,QKi6L]Km'T:P[r1qUF%<.DZZ#:b,I[u`XOu:Ec14"d7gc*&Y+Wr(qsUS^MiF:H`VMAP%SXsKONRlb,=1blqqn^b9Gm":JR94l2c="1bUGB)XI^YW#eInS<ai,_VB4@]<o&X=,!LsCuGd,'?'Mi.@..LPn%U+CT(>PtRe=5@D%GGa>>3Er_;84"b=qO*.<Eha>#+A"O=2bL?l+iWK+gaL,s!?#(#i@"lg<$G)ZND`<POb?YRUD->PRY4U[UQe(o"]!1!;CGd=&l+9M%.Hs`E?G7;>!Mi9Cr]*iWb\SbR'7EA;fg9EMN'fPeGuiMmgZoXS0TTc:"r3'0@eFU)h:3cSi#mq06_-+n*6;Ir4K87)Qfen5Q^6Le%nm&Dt,oT)N[B'V4A^eL/l>59bB,d)#Smo`MRefAVpJb8loV2dYFIJL-ZS/:4Z$ddr:Hnl67?NE<+KdQL!*,jN$bjie3:Oo5qn4V?%Koun>!dUnrp)Uj:hoGe9f"<-jN"S3h2E^+Cn7U3An9SkI\aD)?(Un9@Y;Oogg@tDY/M<[a9XJiZZ2_058,e?%SH6e+5Er%o(YC6Q%R(:[f\k+r.kju_LSZ\[KYOQ1LnR-FUdL\lYk]HE;MEf9g;lHMf4DD]VpsFmn+dp@#4DK0MKBB<.$Qp+'3@:R_Uu\i@lI#104?cc:%60EbY1uLSmRU_tQ'\t!^[Q)B-?'EQ\+"_c4F_O7?Y&p;GgT>$D'<hmdjNX/8BKP'7;k6=24+TeS=Ouu=0t]Eqh!)6%MMfC!nqU/_%G$btV[4<Z=`M^dFL@=ReNK%+@-:BUCe]*KCV=BjW`UuW+'h_7s's)K/AKLLd`tVcS[IN%bTA+:J/<H*9Q5Q`/qYeYk4aM&'D`n2#%S=-p\.tb4cmR:fKfuiV^ZkE@45OCpP)<>9'/MHJ-!Ehuu_G]_TTb`o&Nu7f!'RMruIrr!8JD7qk\WQ(k6[aPD$"r*dT[]%R,TM.Y%!IEdsJd:>dSq7.!1Bj#i#,d""l6oAN'!OS2mNg_mfgs1?3'[**Cem@)jIZLF%*2&?2,G>7FT5$*[:nq0lb!Al9p.G9NdR&Gm*;%g%/(IeBClKj_Y%HCGKi27mCp`?u@ZWd8\[&C?HX0NNYq.`;+"8s$EiRcaC?AY.P]9^@p2m"hmcsR1NT0q@kcm[M#<S/8I@iB[L2f5[%kuJt"4>Oh/#CqnuI@tNoM=dbJ3/4I.)"%$_lmf@sbe!K0H*=jP<jCNIr+>ADKbE*%?[-ekjnWGi4a-`"[[_Q&XXca355=m)fn,T0%O%oU'kM9Y-F![FM7TSI6Z1V9`ELV9TkSqO0*^,eV*fHSG]@gef*J&HOI5LT3qIUqS&)I2)!p-c;ks\Zn-A50+g?%\X.4EoqZ`/K$%9=(lTPMFM7HK,CX>f5b_3hi0iGedb[Zuq\C&"Zah^0]%P8dSGl5"A0^Goq@TVm&DGWSm'CjOmGF)`d:Z>i!qFRJHmt-J45XQ>]]-%O6_dQe<4)rAqfUGOI'.VCMc)`&SK_e/+_U^HWpkA3d/3C^M"JuW/Tdk%G/p\H9:_IrMI'dX*[>%\?i]*)NFKuaTT:pGe*d!C/J;#%KjjiN7!eM7_n_M;4?[];f3BDu;sCA3T,1+cm!*3cD/(5+oZ6RA):D$Cd5TOo_6V;!6fVS-@7mlH_.n5hL+Qc:JmeR<?QV$Q,mjLA%o_#K7b9-HN+ZiPA`VG_35%H7kNL<]?qQtQmZVk!krKc8CrXZS0J"i$RR7uTJ--OQrqq9,rh0`stP><@IbpOqu<pF4nafa#rf+8l?%$RXS.$EUdqdgJ+["6j1l:aeOec@]U\QQaY,QoTM$^Qp6g<j()F>[/IH0"=7S58kVke..4u2uI?:p-?g>E1l]ql*CV(.uF'(1M%*8%3"IhD@7-7L#Hi41`V8D`4P9gN`ffltB$)0nh4MB@\)5N/c5)k@@V=Z_ro?2..ca*)nT`5PFQ_,[[?88NL"`fX:[JET8oZmh9+49g%p)9L5G+oSWm:]lg[&aq'[d@c#T,]r95>Tsb4j^d)#7jX`14*Bh/C/%I?jAioZE%\WRZMn'-iE3Ugd=Hn-H`:Ij%21X#q'P6<ojW8%]WmCTK4Z]_L&(9R8m)FdJ=sK37c?sheE!*/b9rFmSj=/]:<+p+7<DE9`ElD@8)@Ih[*'sCiFIB?eZ'Hl),k6QnWa,KDm/fkH=*ZE%a&`b*IAhEGmj+JO)tSf<I>CF6RO[[Afb9mVgV_"%[^-$jlVhYK?+q>'p?)%CIoXYeGet1(^Guj<BSY@.iskmK:uH`UGKJW4dfs34%VOUEu)^6^d`6fa74)uHa_qtdPj#eN-CD,eI`]#q"grPCbjW&nM+sOGp0$>)o\1;?FRKSr(ddQ@-)QE0"A6sG`q#3CSG,%Qg%=-sm%rd/lFYO8B+nVEh+2P"k5B?blq.kRNIh!7qa5U^6=IB2SMKMMe[a06KT:/@Ik*tQA.&&9iYPPoL3Fte`tmT`kUdfIoVB1P9)"i/?j%nKkRRQB!k-@ok$J7W7Eg"?\Sh%Y'MQe@=X(I5k';gtbJYHGO13M1TTc=1&>Sgu4R0k>[/:^j.=/fP_E-_eE?:M=m$A6Y)&_@GR24%'*2HV#ht0eZ.eRYI\dU(E?=r%`K9$OS$j"`d`'o^5B3@+>Jc<3`s.''(qr$KMV1a9IhmpPr6'&P=G:)g@Rue*:U%gBUoA7,%<SLS%63"W$Ig?F&X'R,cC0Y$booU`l:WZ=.!IG5<$Sb#Ub0q08X##V\P$fu?C.P_HoBY!3FS.bPKP).#a9U)IoG?k/I;<#dP_r(NGa9%S%GrY<[hik5`%%_GHU1DZ"5'U*V%4?7!4?TBX'jcFa8)Tf)_Vqg_Qsd\#!hN9Ad%SVS_r-q1iQ[HpqI/m;UJ$J?;kFGhiO\dag)klY%amu]F^pE"Ca39ITmVL.tj?k&*`l^X>Es]jlFKmj2eXA/C?9L\kaRIE^l#cup%F:mt'Fq8'/8L7l\mULX6PO2%WD"2K\R0<A.,t8n%KQ@&Z,g;E$KEZfq8]$-E&f)(5n@tHQ>uWKuA/Dhi?0eCu(E/Bt0o)sFOtl`i9"NVm)AN+2OG'$^S:;H+3)WRQ+Sk9S.EqPF/A")[%;n-BBP<:H2U4RN%UTe*nOXIk-c,+fdZP_A@eP6Be&[V64@:fbKjl9r<jdC^p'hXT>B-rMUj"c=u<n=dWarbf/FN3lA>q>.E["\CP%Y*IMBiu%fo>V!q$Op>+hK<CK6Pu-ko\lO-p]DO\@8oh"dSc!,+/'5'E8dYFY>V!q$dW6o<N,'`M7CaI_J&o$\H;c4$k$"0)!/0G_%*#SfE*(g2:Zlk56!AU)E&?'l8$NVuP!"c*jM$j>-jphAG%GQ,]Z1I\\NAnjETi?W,Dmu?GG\1%,o;13RqrdXqs1Nh6YRrc;df9*W%\iIVQ@mj3ppd<$KorCE)BlSF#]=YJcfrC"458QrTc,KG'f)>:)rQFfoqu;[M@F=&RqYj*&A89'WqXd;rqBVZM#OlL4_b6Le5L6%b%`I^'ip^d-)+1;NN+>QqoU_.h_R:5Xk8R^+1_:1>2BD>j_1/mDQOCWLpn?QG_!:'GgpgY$[I`)3b0uCkkNKKE'ET@>Yg+B6I)eit>%Y,?mEY`96Q*p?,?,QIRP`,HCh2AjEl\@m80.::q-:$peDIpP=r4l/q./]4%4^)umUco"s`IIE94#<ZG5CVAL"]3h3.Xn'X+s'.bE%hc*(6qp5!Rcf<dCqu-+lJ))dHcaW@is8*/L;T<X!?bW+Mi!96=j'P=LD@un%rY=:Vh92;bYE-Wur%D8[QUdJpc_#XSXutTkhHrJ7%HsPUA?U!Y@,+3og/%YBD'%3c"Qg9EVgj`iQW1:6!#PU0L^N-H9SEoKgqa/L]h-u[qbgVZ]fr"R<lhCF#qsDu]righHIeiVEea0=Z%]RJ2)^!#T.a4p@5bGX+ag-%iCI>Lm5T[-#e)i[Z$bo@'B+b`DN%0,K6cs'/DmH)$"WMm/pDBrp3D:8@$!sddr!k#ga@/(iQ,6[J`%?SKKbkF:6+#CeOHV"sELjo'\r![):RiSlYb_>DCdS1BOe'Mbc5#dpO2D@5)g\MA2MOJOUFqS)kPfZ\f\[%>"q^Z#Ol6nhT;C@M6s%K3Lk+GEQEmGYLc,+j.#3Jh#f17Lg5Cg&=iVMC@\cWJiZ5>nLW*^@C(M'P`6>QncHg:!cm-Kd&kri-J<lrjT[R8^Nm.qqcCPXSVq:%pRWWa`DGJU78P;T^`lX;AQ/:\@2E4eVhSU=#X%R$H=tj\5DndD#CXfa;<GidU?FQr:SA-aW]IMg$]8Y5]Z;od`Rc!.#Wnd^!74a'%H`E_m4q=JK\&`;!5BR?F_%^I/`*8]^aJ+.gGR8i_p<A'0*Iq'gh`u2ZrbV^8Uabdg5Sh6k9uJKd,T<Q*GIjI3MMd,!a@qTP##SeV%W=mIh/uT1>p>dYYTH[;l7MJ3$2$lcb^iI4+*)U+FL8oPlXp^*i>r<nr>HhJ&@<cR.9'l9041@n7c-2sq[jG4+W6"J8B:$DX:9X">%cY0DKqT"Atk,F=HYgMu/GfjED1"]ioKl<RYoo'aaX%SoM)abB_7G$`Bke18cc:ac:Z3c:VoTnI*TgZ3A?ili$h:*oF5<*dm>$AQC%*527?H&;!9aJ9.f:h7Jq)U+/?)9*b3c+DlGP`Wj^_UM!,FJrPs*+Ig]f'$$*ZtK@)Bb=1)&nnXo*o=!9$'Z6u?_0cT`g"[L'`SmM%P]IA^]iHC$#blloLT-\\P3?5'+s"jK;dq4S'h(WqLL2U5"VjRrXSDO8Ii7[e'BH1O^[d11Lapce&\;:+-Kp2!qC5kc^1'^N)X%8M%_'+R!0(;;:U&X3AVr4+8R[Yt&J?E58Df0K,c4YU"Tu-L"B0r3f\9OAMk`$!P2%])f[s`W=>^V8Q.fF:fh`frNnCs$^K9%[[ZD5o/%'#,>#KIe@#N;lI<5QGNkDuHo2"<5"'@Fq2tF"gYimt)"W?k1kO,UjFqIT^\)`ag2`3%lW84UC.[dkF@B+t?Q$-p!l8,WD6T!(B`k%]TVpJ*sGf#F_1i\\7uAJW^qAW\qQR[?V8Is/?4<%C*n^pL_OAs&k&:WaDdgRG[2pmL&hbIR]!`>D]qG>&[i\oRO6r+Km="gbpk%?%!l25fh7G<;7$/&i9VIS8VjM'Z-or`N*,OSdC)@RH!)cm;d+E20@YS/5N:"_kW9FB1h@[lZ?rJi0!PcEu_(_6*bFYGD(`Q/NUhJWZ%?oh+rjf-HUZ.jpb4bX;`07ZShAUni$#r%+3;7d)tFZX4PHA?(^(,F>(6)@`bWW=c"%orMsnc&2+r(&W)=N5V><%&t/!$cV8Zso(5%`$^%S?3j)/G[7"CGsu:RkSr:N\%mnl$*CkDIJ^[)s7Es;aFJMLG/HKLaS[lYY@dF-LT(TEp#/a/'&G.oI\M69gIHfd`3Jg\YBpcZ%HMHIVbeh(el.Pf%eic0L9J%f7kCiMd%0h?FCbQ\T1!trA<8_VdktL*r$!CaVMC"AN"48Li<4>723[]bL#pn,P2i0nB.A<XNkWH)o%5_=M'l\\5R!)o!K3g"s'!d*ZY!ik;sg@_Rp$\?N;-<s/>kgjD`HJ0\!DjVamrQ@e0n\UJh=cbIG$B3[fZq7^#$&5C*M*6r'!StEe%oNt)=eGGQ-#R^..DH1S2L\c?)D<c%@jj8Ic5nE@,46F3=)3S9,s![oqrdQZiB-q!1It-1EJRYNh_hUR`K*$dW(<&33"MmPY%Tkt_%PpYES78c,HdgSr;MQLnV-]iC>h^OB^RRP1k]::X3@#Of>QT,(-"bNfOa>GbM=NoHIq_`WF9i^BC+-T+qMDRVb9^AG)25ku7i)]"R%HFM*ckFIVmADZRP6fn3"1^kQ]b(@`',;;tiTgbB;W<6N?]c\DPTtkdILcdJ\5Va&"HTDL.A.QcUPdht.(0[Ne;jg@q4cR%+hU=K?%d!LLY'Dh]jr[%4:>!e;5OB1s;M9m4A<&u+cZi7;p]KT:UcXFA[.4W^pAt"TKMF:BA'Me";=XTCP,b73:n,[4._N9j.)Tp#UJq",t%FpW:<ZE+9=f6r@YTP.#R6LX*2L!Jk6>.Ve\.S(3$UU9^.;kX<HUR"j2]E!MIJ>E-$Hhe1/HU/_GYM%*KWS'pf+b^!aY,[SV8O7`u%R/nLF(&Ec[,flj;+t<!DTnUeTru<4RC3)P'iL_Z7WaFTPQO*T2&4']M0PT9K6MOn\#]nW\n"T(XG[WEa&f;`;Z7obW[Ed#&%,8/)%O=]uJ!spO3Vf<qDM&YDFVu\/"-Um$V:dQnTPHRf86:DiUAI[917RamrBY"O>MP011\*+_oQ(Urd^A$!3/l8$AA@7;e\qLb2MYO/T%)r)Jcd&L*!T=V^WhK-`qeCHS0lb_1[PWt[^bf)!r!d&)m>]O@DJ!NUEX&+Xd3H,QcQ*9/]/!$cFL7h,<mne8OXBho@3Z_MO<`_-.%G8_/i&kpdD]tjhSpXeDh31J>pB'il":"BNXg2bJhV`2m?:61rLK&c]S!<*]<^ehCfgV*'@@cWVXprpEK4Q@#;BSmoNE$>%]]Nsa=%o!%F[9iLtqMss'ro7=0ZWX,o+R=@]!&QS4*/H:2=bPr;jr"nDgN;aue"\"RWh'Ai2VP9o75cST9qM?=+&<WY@VYB]/6Kdri%M@3P%23CcK5n[k0Iu3*5+qZY2+kiR]0-0u:Vh>#8ndN<g1<OljndM1Q1,e6V(hai[:t!%?"hVi'cZ%c_j:lKKDNWJL:S*.(*8kM64@:t0%?1PI>(]!,0mX+@=SD*hZqNm`l*]o-9+jT>%PWZiH'V7'q(V::_H`M3*K6nMA.>7SQ/ZE])ECu`qkp`t4Y$7+'_0K8Q)/sr_^>\_:%W?jO,^B`\(E<-!]jV\7bRG=(G7I>8l&'>h"FeG11F:hjCHp06Kf4@6>#W)&'53";Zs!uCi$f`7I7TQ!h=Z6K>+;7gDJSRlE!`[Mr%oM\&S?I[=kf_]r-U%A(EKaM:"$m>@q%5e'rWM%+)JbGEArmqe"InP'A+UO#U)1Hi8&4gp-p<#0"%=L#AY@PI%o#W]CpDc2I>FSi-%[H`rg)!FLC)I@[nctjP[Y>r3U-dQbhF3!4gei20pm+h*_3P5W;:B.*M)=F3fPZbWNPp"^`S]_l*e)3hAgc'%@Kj0I6ibV4_RC.7p%Rd:L/gN(VjgDfkrVoMOa_/]E:!<7oYn:*luOkt_'cnKlrDDg[J9^Q40ik.(7j&#"@!^hnR2.4oaa(ZsF,,TOBb-c,dB5qVN(6"(=%:Pn3k6t\/2ZM80i@F.^(6l&p'!B=gp*'hUY-_cTNKGFRm2[oc&W9Su;o1/iu3fimYGX4llU33q9&^fW;)0p=^i'Gp_P@FJ.,-oGn%[q$i-,O"tM;<;uCF[;8r7\KkLU;qkc$9Fq1%<e/o/%]i2`9tHa8Dj#`;?3aN.oC=U5CHQX;io?23/tFG((<W'AU_&_o)<b,pj\o5%<s7'4oIn;3XUd*[fpMF@rO4:8"B.nR;R(K>nacJJ)0%#Oo'?I-rg.@!\!12#l8NgjS8sH>3qUUijs+VY)$;@bb=FHQAP@Uu@mi*V%dkK11?ShoqjbUJn!8u?i-.`;cp6%`!fk$3JN;q)cZsDhfbc]c#@eJ\@V#NF\Y_7+(9.)/g<'sJM-'c28+c#j-o_1$;rC_Y?PNd#B%J<Z"$!-!g4j\fSe(IZr@I2'sYP@Qts\C$l\-A^$e#fW.[0mj=\-cX@B-8IlNFi@:$%;dl1%S0c;(Ht0Z/=;rD4!2(_ZWlo7;)bYq%7Z`BHX)MW!;>SoF4Z5"J[Qh-,UumO@9MqQkrC`7PK*_$THMlYoO0_;[!3-#e;tJCDVu`h#&Q4sk\V5p?!U,i*C3g5<I]@q&R:HSd%LiRIRA:f@OP0)@^jsdj<g_bpj^U+?A3^j7ANjR=7f']0bJ6QLUj#U]b3G:+1">S=M-4os/Bc(eJhK-P/lNHgR8ZAcrrfZ4>gEcPI%-N5Zq_6/le!Z3ZpAJ:f>R?ZMnPZ:<<<8!KaHO;lS=##(F>?&Z6e?TBG.4O1RUi%Yc+;'UQJ@_JPGm`/OKru-CrAq%(q06:nWE@hp%;INU3!\/)`,FBn5q.jd]74QtTak05`'.0VjCg]a',Cdt?rem`9=5g8X`R'I"Y6?i4JqpsiUgXH\AF:1dHttGRLP2)30U%ItB[:3O%Vh?4'=="sqR35oR.O`e$,8^Wm<FcgX02Z/-Pt:MF2;mRj)=rR(-:Vf`<fC>"bQaA!`L&prkc8D?b[ahS"/V9)X;LH$@A8a^,%>d-%S`8T$<Tu=eUT#)b,#dD28:Vhf2<^4)UD9#FEM=`8@i=l`a]+(kj9'#`\W3CpKdhVQ8[A#$TME*Z'R"/S-qf\!6nVpO"stg='2Zr@%#mfRGXHObo`.W4dCJ9gYPnE;J?ik&j!U?-e%5+GOGB>1=&"c`G3_q@P_8V&.#a?4jBM>b0@eqX4?BijfLI0$33Xj<,I_h4W)HJur%5a?M.W7F@P3a*"n;fQUjj@!H6nWKP!RBAXH<Q9j719_0"9H(HI#`=@>2A?aeHPor:?_9,,=<LJY6jK(p7FV%A0Ei9q#,EE[Wi/`+%%897%4r0$1TYMRD!s9s.MG>Q&(.U1Ec2Kc[Bga!FR#m&5T]$<sO\l+(/-8QP@jTS^1GGOZ_a6dG</PH=@7!'ic\,hr:^tb#csNQs%(oh[(K6iIiV,1Zj/ngJ':57";l3[t&ciS#I"e3sDK88=!775Q+0>^+\Ac5W?1PrGip.gdM$ALm&%F;2;'+&.\F@O:SHS"dY_Tif`%HS6c]Xr85m,t"F;"DbC!6?NakAAYU5\GG9cJ;./5QJh`UEP;k>iAB9_E2#`iI0ENDlS@lg9Lg=iM0aYgfZk;@KXqbP!Y!4*k9dOJ%mI72$O"6^(e.V-Z1a>qA6cM(4-31&C?s4ic9/,ZSK@:&%;8>"@1'[LXXq=CM'J_S!Y037kV$c?A,Z\.#:n'+R:k\X*E!L0_+%-s^%EWO:YY,]"XnBe.n\j7d4TEn`LA=?"WLFK&WK<q8h<)_^Clk+)S<<Js\j@0>/La?`GM9J2=,CngSRb/8[((f]6'r+$[0^Q3+ClqC]%&a)nD0]/*'gK@Hh"lPaTGYk&,#(E!H"Lb4B1cQ).)*&#=6l@J3F(HJX5RA^:OD/B@ME=hUop8Y_n!UO-9GHg8,;S*nWi#@S,XPk(%!<qe@N4C3J2d8!_2$Cig\7'FZ81)b5CImG^/g2)>)K_'r(J]sE`!Wso`e3>`MQY+7N/=PhJjkj%)uPM\82d`/neBNG7C!GP!D4hu%1,XX"Ajms=$/!pig8,)(6k;$5OG<aN%G6un/X75dYSD+@i(].]0(R0tbq"T2^eP"N7Akhp]&7]W!BClPR0khJgaWHt7DoA`A.!>j%GjI8YgB/3(LOpC%APR)MFl7/S65>2?1>S-b%^?:l:e>c!R/tnI'`fc59R`PLUQ-[d&dC;Hkt5QbA7[706C8N<`;M:9PbCC8`:#&F%<Ratd*nn(?<2W?X(oId;J8EXr1*%<#M8+^P$RE:`0[@@"KGk6WFOHWsk*XXl:1]RQ!KM]Z-IP)2Xc'[i)`ASkE>i0T\:BNPcitE<%i3XFC)rOGI.=aD.<D=[kE1BaB:HLmuI7HeX1%KY<H(@!?MF$d$BLp]W"&bq6d\K^2&)=mr8B['KW"L]kShs<@,]7Q3_'-i+)2=_.%8-*3Tn:8;?1XU(G(CO8<'kNYsM$C^K;-e]o*go(lY72b`\E$1`ONc1B2W3<<3TW"A]Q8%o)UL!/-0bZl9J]Y^Qd@.;.$]_oaroDi%)%gk-d!a:qXA4[//j<Yj!./ei6Q657qq,ZdaUDNh%!odoC5fPeaTm?F_,uNuUC<<o'C+a<Jceh=hE1%J"d":"?1Z;$oFNf"Bc8Ae%)X>qRK;O4cKGT8MB\5VDfhBmUXCKak(aSUd(.n\YK_&hal8/TY"-S<Tl:.H0RT0F)"25hm.fg;#ckU%uCsZtIBc.?B'70c@%(75t%0-,ei3rpH)MAXbuq@YG4%,_ZN:I[0Si/NH/<2-5)4HChcE_t]0)Cj,d+;uH#BM\u0W]11lc_Ns?R'+SBefhII['4E*^84I?c@AN)%>)J%M#rM)ZVEi+<1_bW,*!`/g(FB5GY$m=s7]V9mb`IA8AOBm:pu`FXdp\P1No:QTdl"*)5l`H%%3\S+aH0+aQOMSOQo2]Z$o5Z7%+CQ6H_Yc,+Y8"soi&22Q7R6h61/gWKb;K[,5jn[gdcWB_b*8tod1i]D!M_(Z>G4WgApl:Onct^e9_*388U*t9"QW04$'/TZ7A;^D%gGH!1JVo!!E4V$##&'(6%M<i4h&m?^:`$+hF^re]L_3(]oE,R*aH&ob,HXcK70D4E735#0a=pmZ!+k,$Uod=h"EuoCD.leT$:P"J%$=GGa,O2(\W1RWJh_VQ/ViA-i7,(d4DMWHPTE_3:N,oSM^XJGOgHqYLdcf(+W[_;>khN*$(;f%2:-XrZ'lC=#?)%Bj0O7?s.Uukj%!KNOh#n7U5]IJ.8f_@m5'nu6lcmhnWIMBeq+Qk3hL7")8c;66Y&k/RJL(ocC&DV:1+"rd5AeJFj)[t7,1@.`F&TJ5(I2gO?)>>h"%MAq@(<!$:RDai\c=4C4[Du/1q&LrAK3+E/*+Uht*$.qD382?9J`\A:hEV'^<[Ock6DI@!k'Frea::1YLLk`q<#E`JgipEq;]S&$c%A$Z:]WCR9JL(6:a@O6_G%*\R,e6L"O^lW-aWePmMS0^-U`7^;NW,<626=PI^!hhQT?*%N1D*6C*l6KV``,pP!Z+l5-TK*W?!R!C!%?sq8IiYt;pHmKE'$mu,=?0CsDL!4NJF9nO?9r"0f4/*iP[MW'UmNaQ[20^:.32u+[``X=rY;n\ETs4W?^r/-A`KDI%[.+.c+rjVX%-(o8QKTq&UIOo!!,59^Q$6eomQUnb4ThQCZ7P[$1R`&nb"LZ;fHK-Ng9[c!H#ZP*loF<m)Q!bG,*(*#`:P#@mA4pB`9ET<.$GmXJ%c5d[haR;G=IUgf[hqoYKWh<fR1ZE5t.n1i1MWo@bkcRo>`B##f#n`=ga%Jkhb2g#;hKXh\A\@Lm]E%j4<*n[j!M3if7?TjMoa#nc%"9gL7\.4oSfUWpldZI)4Ldda^i<EbYj4thI!C,WjK/3&fF$P2p>aEc%&naYkn3K8Qc<.l&R`'ls!qJ\[2m[0g[\QBi`2H4STj*6\%N%p$6"21B'9o7:;$g"'U_Rcd9Zr<2?Xp.]dQh+UJ,\@>fA=7ABrZ8V@7>\%]39PihhV(,OUJFu1;rqgQU'FEPOAt?V$:POHrm4E%%0EiT:Dm@)Ce;O.m0VBt\G`dh6s"uP2#"R68]$\M0f`7BUPs]3oEsDd/1JLm20BnkUBUO%Fc6THPnQ6V..$,[XU^dU$7nbCNC0Yi^%gR64c:f&EAKLD+_0&f]I:(0<t&k=Yhg@`gpMp.L4"^(_ej\@&+V]t/l2[olPOWehrq!?o]'ao0*pt3C];.I+=,nr<NP6+AfZ\\7C%dQA*Da$eu&:p;)ta^XpRcB%!$!n^(]co/<t9V=1:5@K5"B%T0TOX2&6<%:HBq))uTG8-l$ZjgI8!VPU=Wpb#<Ad*/n,&7@m!61k/%5W!#_;ufj1Q5C/n8V?(2$BB`p:l*k;&oXH<;J3YQ^,d9,@N]GXci>IUE(r1J!3T`t0UmcHj[2.D#r1@$':BN(>g;?b#7sh)E\%:U%U^Xj@!#R&D7M2&ecm<NQ@h%W6$)hPQ_*XiclC,L3^dOTc$k<"pM**!k`oVq!6:5:6REdA?60#ErEgdW;r.7Q2^/V0gCD<HS$Y<W*%$9C3e1?WR8YmHg!pJ*ukANC;,)/1n$ZjQjXG"TfpM#&Xs7"el7cXM>mOD&]D$#FY,!k*>dECL@+M'dO*,f9O+0ZEF3j(9\k+Qghb%UNoSGQI1Q,e"FTN89fhC!XC,?1GKC\L8C[cQT.0`1?@PY;7McZT`-4c_Q-a-O,YNu9;*Dp%hP*jRS>mn-=;3.`A_m#+B9Ys/e-R^%D#%k>:>^09,Z6s[!8]e5<(JK;=<]AFj*-X%L^cf$KtQD+jaC/h\:g?'aemT?aWs=n'BprNeCrf=93sIAOp,/+%Ob.m+;0$Z@O@Z!%@XctN-9j4'(IOn?*,)ouM$#`a_(IEJVi%3CeZ]89Do\Dh")0Jj!>cgX-VO=Z,)]$e-#4E1P`8NF85dU8K1m\GK3J?5oV.BDPA!g!%6WNMQho+p),dQTSV;dJ(e;9XVjLMHU:.O9a=h=kV;cM-K?c4EN87&/KNp9$j057d;g;XfO!k9^Qe17o^PY$se+PFWYppFqZesdig%gCi@1,%+<&Ya3RsX,/#4`4Co;Hu>[X+j.U47jh%>f0e(J()7G.'"#Z`.jT*?)2s2&nNNhVMh@3i1'S_KMUFba:l$.b&HpRKU]m+l%"1^#e]dfp!89OE2KJ!jDbca+MecarK+<"M5KgHr@:$cZIR<et]*Qe-H9VC>;M-r)DTm0p[)N):d?\@)J=uZ4VAoK)WmSpbLGo&H4%Mqjn=_&:@(W(kKV89Y78/9BbYasRphlPNIta5JI:=XT=Z64X_Z`uba!#YoS!S3A'+rS;X!#u'>LB+0KORa-`9(mp`sR8)c/AM0Jt%!A>6R)O;$@JeDA=9eI&:24.=,&#dGB@>@7hK6Ri5p2s6qKnd`AZ\nZ'a[2tR#d$Wc8b,*a<]CrUe4>aZb_SqQmkO45_Rg&jf5X#I%.)Zmh--&E&"&#<MZ7X!O$"-;CUS($[$r#Ydk5YTB[ER$TWZ(SA#Nj"Y"=R!n:t5V0+`'H0-j=u*"!_5-&35prD"MrqFWfO.^j9s"%Od/(lAC$.Mogd)3U,R5t8WKf*rcqj<?>ZF:e%?g?0R+[qM'[_aL0#!"5m]h,FTH7+9aa9DjDV!'#%p9R_l@gO#V('Ug>O;e2$o,t%e8l3Z>c2Q9WF?$R-7!h*/roCHOb<`rmfESp5!i^tSbB"BC`cmgN9bldmP9n/@`D6'F_FnH;T&Fa0K`mqAU\*F]J?&=d$B'I1"\D-%+^K82($bZeIDudMZ`Y4Vi`&ZR'J?Fs(k7(sHnrg:C"i^@+<X?nTI`\NM'%D_&])#sVeH!A1?+`RZ*a^jFbFc-Pbkl'&]BHH`]fe!%D\j!G:RNm`_*8(D\u!+!G:L`@aiK:6e,X>VRY^]&M#nrU,U=CCYY:e2OfF77N=&NIDN]AK#dpgs!2dMBBC7$%XQKWuO_8Q#E/gS'%/kJNL-/Gn@`N!Am6%UDgbQX/#=ZN:n6N//o.S\kJYY<OqL7jnn4Ci\J9+>9#LT+)aAboLS,\M'F$tBLnbkH8.mQXN(<L.;*&;$*0%(M6Q3MF^_aN19Gp<:4h7N!qeQ"t"*W3V3N+W"S!E]3!udi>k[glu0hU54Hk9H.=U9,55tU:d7Mr5kIgI(>[+-ntD:>j%aeH.OH;X%@3'58crZj7s+e2\rJMJFJ\`1Sg]@S[n00KT6!Yu:\.KQ5pd-2aVN[#AWKTdY'-/;ddc#_I"4Mp]A>&LEjFAY&1'sHE[;'mjR9Pj_%Hr+s!O=pu:-V9hY+#$Pe!AklSK6+;ZMM;A7OI(fP5T6@/PGhuS?OjN46l6]$2H!eF_emDu&+2;D,RGU!&R=j`?8%%H=On`EhcZh-%Eb^3FG_H4\`bV#`c'+/,cWU8JY+9'[P"*aA+G&),8AG^i7t[im7+F]]"GT&`5r$*oOQ=63Y8\b]7L:06G[;^c!7NqM_GC][=]Mt;%9UZk&D2-->"6`$=ngZc`ge%W(.[q'W$q58pcmb/U&V,rX)q$`\&*^UuR-P[D%`sNWaR0:uF.,S\jX?g2S;0S6+k)+=B=UPu"j+3i%D;X:kKkkLU\>";ti$()fd"XC<oYFKUUGWD8Lbd>i@TZpa!\'r1eLbrBk>Fq5YuGUAJso)]F93it1h>DTDWjJP0s[b"#t%6F?BGI;%kqj=71SieSo$G`<<8kt,Q&?8OC-Z5;W#:DIDOV\M\f^!o\7RXp8uFNUKh`I@#@4YESU_Q]*K!J2Y`WW83=phfAT46,.tFQ0cN%Z!%n4$iP![h*FgD3rcO:KC\J)_QJo4ssT=9dC/0FTNu-6O^!2n;['-%2Rt^h)G5':9N*^P>-.9D6R'!PX?cG\^IoV_XB6@LC8&W2"ds%EL6`j)C)I3jUT0;`Xt.n8H+Lu]Oc\IS/!oYT_=jrVWdeEdX:D\_JOX]W#DI(<=k%-8/0L4bD5!b.o@T`j@.3hJL3O=PaeVsj!%dY%%[`E%8gTVp3$aol6:rU3okb]@pK-UdLAQm0%961ZkO.g`P9`=Oh%nol;f%W2)mr?Hds3,-h6_tN.Tkr(%&q]mNcF):H='+IOsa.(%O?YO(c#En5Q8)66H'oiI3S3co@MYSKlhF;&8d%i-gnNRd$%]Z_F;kb%9KX%mR91_<6?TD=%7&E6_LMh^-HQN[HKbh<:!HXHa-#7K%+i"cSdr\K4USQ$TRdg=nGATF)*67^[jraGRJ4+p0hCnR9G9d2EerXa:YQ2Q`W9/]+bukCL-piFP4Qf+5ATdYSFsYS"+CGp_Q!JZl%aLIar!(rrij<gsRHJK94AH!\2=iGZ?8FjePm7%Kq<"7K5[IRCLTHR>>rc(HC:PM./Y]SgDl&E/'g7&G=FlsFIY=Hp#'Q)WYoc;5:%Y[.RS$6$iB[HSm+7u@edFSm\n#A.r?b8m]i_"/Oq++TS,6QYJW"LU%If+b`J)a!APiIpBZ63gjtQuF#t-f!&4'Bdsp,+n!<>DKYC%Y93M<-_(m>JJVc/_,2!dW@WQ9dQrJ8lS)$M@2NSt4uNF;,=_mLi:-MoF2rrlQIGq&FF?CS[n5lh+:Y>m&f`2i%8H=aht]HLf/pim%6e+YdN5LWdM*fb0,KQ65=PTB>6]BE*`OKA88WW@Soa2-%A:U?%OPA:icUFF-]A=Eg!'nj:V3'W&Jr0`@4@oPl2O3$W;(3s1o9%J^%c?S(R"jT3N_q5MhH?oSbG?g&*U4C-[FF,"%.fGf.D9rd/r2'Ws!<]%8IV6lAAdkC*VJEsp<2(TS8]jO(#0^IJ(.[J=W>PmA:_9XR%Ydnn?T823H#L6OYi^50<!#%XN6XrbH)]#]'?EdDG!jh'_p?@TmB@IS?APl!is3m(A4u,ke?,$[n3%D)XOQ&s)BP8*4S)jMi$703Y%]UesgE[4"m+IHr;l-k_54u3:4A1mUb.,tr]&b`aa_kkb`!:)]AH%AE'k>p;Ee/r[mEHf^GD$L1\m7*H/cnU<,:(A>3H(gQ8N[Bti%%2]X;T)ish^L7Ae,8cpu-[KIP6gfC++Ji7JNe1^rcHZ[^@rDQf,,ct'TI45l*)'-I#]PMHNV1Sa4.g(O[7'k-ks,B=44AW`Q9/pF%SteaY\#/WLFuUg!IAaS26^#-.)KCOro87-:W?Td4\H1,XMHSA)QPnb'1jQq%:"h=rQ<mq6;Q0Gndu`>;#9q^6@%O4g@?8eBK#kkI%5MEeX>btk^!H]93BffaDnDa]2.?EMkOt%'/"AERkm6hCXf[YR8*?TupWF<Y'WmG+%X>@nM&<R(e4Pn@ioFhIt.)F;iJnj0[k(D?P%@oZJ6=p+ML^10I7)J!tl]Ye:g7%T.g[7]/r4JGiYc6oUn!Xa02D0a?\%L[Z7Bn_?Y-Ka;WB&3m%Euo>O:u'PS>\2QLL3+aS\qgaB%LBrCrEof,nI+FC@<]3Z!QpPd4EF\1JE.njMA9r>9DU?U07MB_b-Z0-]0f6cl`?Yp`R'/?;MjOW>5)m&+LdOX.Tr[[B&b_:,I%]=q%dGQlTYo]N0D6Q@cW%qD.Ys=Y"!R-c%ja"LkLe?N#.#gfI5j1XCp(7!FQDnEU`,oaoH9qMf4MXupa/->PM5\=RgQ00<i0gAMdg#tJ%+L4ka+Q<kD@&3tp-kIX:=ea^oWR*+#@4$]`)0/gYJEdK=_drf\a01KGTIE;0MM87^_BLgI_afrYV3;!i/Dl^[GEQQM_9J@Ze,]KV%)Y2Dpb$RK3"StM7,,sg?!E>4;*)Y^1RNO5k@'2sP>j@k7pS]:?b>gT=%7M$aG)"4.e;HcA&2%F&#f&QJ?NIH0!--Y4XiQ)YNO\"d%MBHX<^8Io]__oTo#]2+]iLgbqVqrJfHA#\+#9E/YE`i!$^mrF":Oa,mLC".c:5((,1-He=fU+8r4?T^J#gibMP3(X*Qo(;qXZG\U%k:p%;d?(":&'BT,0S$8lA4M50Kkh]LV(g+%Io@U#,5H@tPN<o$WV(IigjUgU&hBb%i#6XL+9dQ5s2(L8;V7.qL?(T6_g@&/M\+-0%%lrP=M#0g(9kfdtT'U@/VFl4O/>eZn/7Rh(`t(IdW^VhbJ`J/1+U]K9B?]3'!Q8?NGR3-=:Pt)5I)lS";(.'_#\hN,XTAgE:.^CK%1]bF"h]$SHeKTF:S,9!S73u7t0lmah.-69sJs,B&_P']p?<#]?e9C[B1dK>RmXZek&=]OOX<Z#m_JX#7!4'RSN>L7*N-H(BFUEc;%o1LTg$%ZBSE#s$_-!gf^H@$f'!D*JZ&DEMBgu&O#,T"]u?^2m'GSt!f$n>oc,gTt<ZHL/MfM2/\qBE<g#:K"/kIHZhB1@u9^+e1T%'#FnaQU8&=NbXjc5EEA"Na<j%BVB2Gc43jY$#QCX*@R,5/Q(g:gda$c_I=:\R04oUbjI=MNcmkY:`O<t*Pfr=qE?[0kZ\'IP^Z)(%]sO5qg(PnY&>b^$L7i-a\u4Mq^qb&&1ZT(ng(V='PlYCkY8Z41ffGQ6LKFY$6?m+0LkB&lQ&=1=]_sYk1\m`33rsSKhMBN#@b;F5%Lr/J>V<e"0Lh1"tL[g!UT_NfR4Wle?oCQWrAmnMcbY0Y-o?]slh?[b(@%J*!op2QnTm\2m5pQm-%(Tk:3hjO`:N4N?Ob&srZa''F%'aQ'VSS&/BOS&APJ?(0%S"VUZN4:\+[V>5o2e*T[Br$_?a>k*sV)UL@d\&>DJ_=(qDE_<iNNsWt0qCi44Ph]Ma"Ai1"^*TH<GsuD%,i&r$[DX:cVh5$->#=i7G]A6S4Rp:6bSB7SKu;0N8[Adc,]@3faM^1g3V3miUS1<lA_+#h2d$hjB0f#5,OV9JEU(X\6P#qB\P,tK%AfT?E-O2+h8A9s*_N!l<7DcP\8rfK4glj`KnuKGd-VR@Ce'B]KX03neH\%SW`GVoU]K]fWMSS+/OD[\m^);!!80gqa/C(R<1cLJR%WuGLm=I*/2G9`,4PJN/_#gJHS@'SAV@HT@HYH_+GX&2fZgCgr)Ztr?[p(=,odd1q&A3$gOAaG:YU9K-80&E'@f>Q=]?k+``OpqhT%THBFT^uCel5m:@f2hCf02i$:HGZn?:.0s7&*co;i7gX9>`EdcQ1t+Dri[?W='1rC()[k;o3!AFN['/Hf;:t!UR(IW2G<5+DLU7\1%*DMDb(GLp]JUUk6r&g+G`;dr?9]$t$]Ze8i;!ZDold+[m4(O9Y<8&"6@Dgso;WLOEKOs6J.763gR:Q*'-GogR?HB92A+!)QA9<!I%r1UM+m4$%t^!+VC#WFk:.8<$FP.")\,5!o`Mu>b$2^@aVG+=A4,h!@B#JSK>NDOV;Z;6:,cp`t>SMLg^"&S=#.!IJNf4i0/+3B*l%#UL7rNc6)F37gQC8^!cE@9MdM<V[$l)m0Hpm@%J":1LFrE0+q-O]k;("PZBN%L'Sq%E8!Sc9_\V`*j[;?_fQ54&Lm`SMBl+<s-a3%W&2F)#ea^K!F@Fp1O;Iu#e$+f(1nM<Ln)L(KN!`M2`qV]HXf*7WVI?T`9@)L()NOA"TT,\OD[Qb`@s/Er.[F_?IRDtV<m(WEh=7J%d"5[`I:2CT?T`E56P3oR[Y5d`U3ZSqe[Q&-)e;UP@SWB@OSc4Ir>%"!goIst4IOFJQWfr:at`EeVJhEr-91fO%2jD,jC:01L`[l"%cum6710YKO=Of\@+$5]`XV]A8QmtjH/_S]J?I[&Lod32\Bunm:YC?N0X<kle5G/V(Vf1IArq,?2bEq+8rl%rWhYuaPo$?\((2t0^%9g(>7P6S("%!hR397"S!B_]J8E3=@pNoI2Pe47?[\DU^WEB.C>HMI!Yqo+qmebo7(fA9f9h`UiLKkE$qTsi,*l'j>dV6PO?E9QTg%6sa9h.Ur)[Hp0\9p6[6d.!cTh7\EO7XU3XAR-Y(gdD8dbbsTY/Bunm:IsCb7LUVd)kPs;j_3Ou,hQO6D-g[W4W/`)M+`fWkn`4,^%1KOt0IV@>?1KUJSB<fXG]WqoiXV#I2:h'@Kb\!lcR+!N-RGqudeY?Bo&`*U%WD+j:4!I0NY]87h@5Ic^%(\YZ3p`=u71KV+nIfEV%-G*nu-plVk_auf^PCUmQ/XPTYgHkN105<PBLD[8'KsI<f2$,A.P-gXh7j8AN-F>oc1-u[D-E9O^8e!&-)c00]+.P^h44=@4aas!5%U&'?TKKD[L);\l9MS_J^1c.e9^k*i5KsMZ/fgqk'&UqJo=O[qi<2k(0lIMMe2'k1NJB_;2J2h>POT.+$2L,Ci8"_kUSdMS8_2LaQ%EIi.98QWGf"l8(.A+F]iBF^+ufX4KB-i<s0GZP*&A"a_CPT=u`O:&6_+Q_DN.\lqf<L9(tM%W+^cRIA"[N:f_Z+2quWutt^ee!="%o%0.NA'&R7R/mI%;Ug+"<-g&s,N(H84LUgr3;I\p>$6Yn#Z,7eEm=(9KBK0bUrRh;lcsQqScYDj[@Z6e9^0,m8K/n0osg(S6Gs:e%/@A^e-N[^i>2-:gL*%9$feJB2_APi0hI%#7WY-aQJQE^<9cYPR]&>gsbT`.5>9-^W8DDpb["_6`THbN^)6c9n\F/R\f+,`J=L5T#%*m(iB*/MhqWA[k9S7qh&RQcHJX8^2MV9cg-,4aF+ZeZH4iiNoX.aa#N?)doVr5TG4E!\lT"N@^_#Z%'CM/R]?R#&h/nB?CE0@[Ph%Q%B'K8:j'BdqLlc++?YO_YU17mkf#W@3OW_(nW+TVHQYSKJ9`(3[)qe7't5q*LW?S2RWXkQ&W<e>V.)[+s/iZ1P<AEH8VZpf0*\C%W@#k.&s;]-bS/nh0*lT4)-eGo(?TtOKoRGt^C<?+C[L4S8;Q01DS)2RIl5USV;33$<YO`kTM1NoFir^Rm5\dSRGdL@7g]M\V#a<R%8"(PDcEf:ooPdY-I\sS6^ipYe;PY*4-/a!oX!u=B?U7qL@S'WljJR?R87XS6MH8A4i[-#q9Z.ERZ-KjnRRgR?%EdUB$X)mL:(0rM%-GM!i_,!(Hj!d!ZVT4$R%(bOs\pb'ql_[/eoWSii]-Bt?N9n/0#H:)D<"H;!,f?d43NIIb(:iYk*_.au>;]ptSXEIGhI5S'cejP5%DXUJZ`.JU]9:?f>1qu#W:ac"1s!QqU_]H)mY-pF/;_R#?ZT#b2h%SLeq/9>*B/?c#r7+Lp]q]sPjV.uSU4PRHjE63kck'fP"pAj*%'%L)96'6<"cN:DQOiu+Nm@]sQZJFbuUt#jX#/kuao9+g7b"RFV:dXY6<;6G+/og7aI6\/8&6fHMEFL8`3aDBX>cG$LpaB*lU:*C!%@j@g=A`U`>f!2lU3JJ>YjSe$5N-KZRbQbG)bpML1_Nk)?"9>(?^djP>)53f.(Wt$F-!0"/.8fKQ8tX52&UEUYf[uUrOFYhGl9K%V%?I;C=WS$.8q[d?.ITWHsTY+cY1=J-4SX"QCpUW*\)gF(-.9!_pnjg^kLk:q/Hf?98X3BQM7dC&'_,F%smsYI9-fsmDl$<6ZW_?Z=%Dqi\O4*e];(Y)fY1ggQbH6TI0@<=mgZ>:j)hDsW&#fiJb%k)`.(h/lqJ>Fc!nkUYRACinJ^.A'!Yls.d+KH%@s.H./];fk[3j6j6%en&_18#M%!!Ufm2&EY][_M4@k+`R+eY)_lm+E=-h(4j.f-ms:ecT>b,!=3M0($tlrn^Nr'Q&VM_A6tDB60JB1b5sLo1TkcFX"r6!%U^=rT%/+eOE33'Lapd(M"\,"#c9$`W[V\$AhUIUP^P$H.;)0`$KpL\%kf/1lOKnS%Z)pgCLNs$?#DFn;XftS4q68n0\cCc7&1hmk%_:Yt]'a8:=k`#hg'bh[0<@\-n89-8fp0gDsYt#(WaGP8M!'=8[a@M'NL7ETAF35g6HYp3!?&:m%-%"g`G%ZKg@@2^<`:g2^XmI:]%&Zc0XCI">?RHM:C+G([W$EU<gO5=8m_uk9^U+uq1*!%MTS;G@F\.[[;)Q4\U+Z_&G/4g,I-j0O%9%D],(%U`h.8UX;;#82&Ros1N%MPhciC1`#<gI^Qc1Z"[S0*;37\qn3ID?o*A9HNXBSY'*Q3Qm(';9uQ./73:j&?^$(+3da8".B<&8[">#T[fVnN\@"!nqM;I*<t\b%pB8<8=PS]H^5:"#W]&<`*p.#-)%q[-]Hd=Kk#k0FjlgDiIrmQG^"DrK4`;PZ7B!>X?ecmUo4/0ceVZ3oG#@XWNCY9`1!&a)-"n5m%l87Y0AaFmN+Z'n"rc@^^<Vbo]Y<KL'^OM^NZ*!0]8!1XbnXn#&a8):`ro),bh_*+G4ro(-]6:peHVELTOkmb3cKCDnLLTpEr$*=d%71]0$Y):e:*A+u<s"PHFZ<e8_Ad3fa-X\=;<b&gAUo"45o_&&kZ_3;pO-u+OJ:\C:hq.VBI"(BG@aW$Kdnd;\T.V^QkJ'4YhQeaR%;)j2,TUDJ*,$2t?,H)h@+@PPrJ]0sE.-jq>((OE>Bp9B,PX;>;JFS_=50K*5NH>HIPlqXfAV$_4#dc)(g+9!B)]Akc[U3SsV6FY[%S_]H(^a6J[.BI50(lj63T&P<SOE!g=FV9=3O6Ns2(1?*rqY6Vl?N4p@]6k"q.:6&1BW)>:-SH[>M%nL]$]+;QEF"C;i0?+Ii;+R*%[&S9L1OtXV65iu?2JT</KjkH_W4B2\DNeu?-1V]*7&;>mL%$+%\#>@P<D=\Lf[4N5<M22nBlAAM2S(I=d;^%T<2HOe?mssjO)sUK%r7YmD&Hb^24j'0NM01l8)L%gmC)K/"a:h"qKck^RjnKJ#7O'-7b<^Y$,APa62JH2`&1I@lKO`;?:ui9)]IF:"YlXqX-fF9`M_W3$%MrYV07qi(',*@\G%[EBaQ<E&Gc>F=G!@]`+K&C]<%3(IDSH_->CUI6-J<<OeCn+T!XD!04(j'c.F(YDX#8m:Q<]$g]*fpk(mm7Jg%eER_TW$2<$^SdW`ib0`,W.KD$@Rda-Kd+iIW#!pe3!>LD#/k<,&d[h+1r&bt3ijkLN<hYC82J9?!*-MY1SAl+1lcfG"\V1-.DVKn%Y\>'G3uh.r!i+^2*)ObTY_!\$_?G5e4<O[bBX'I3DcXm[aCnD%I"\G^>;BQ=6Hrb!,VG:[i;fR@f6b?I4YpZD3'*:mlpY8n7>qLf%"XI`k0LL$!=:n-$oMIA?76a?0-EP8dViPsmXr,$p"6'je;p(>d&U:B-lNN#@X_t\kAL%oYC]YE(rXc,L7Da<3WCD>sPm8KEWNi[r%MEh;ViXZJ:-f(h0&A3cqY9J*TFhS_89Sj`ol'@(Lk)fKg;De(k"TJ6?@Pp()B`tC\I5!oM+^WHlp[?'ob;K:.>=SKtY?sG?nB%m*%B>8ik`TtkMo&e\f519I\p#aH$hNIHfc&X96i`P._fcXo_g0/,c?iU,aB>8]_h,dstIIkG>eR'rU1]R7#s8MreqAJ,h++Er;Y<W!Y%0/!9Lg"uVmeR(MphYS\Fij81;GjHPM4rOCth%/O`r-g[g;9bn'_&kcG?P2(GbeeDc^TB]'eO(:g0^\tDE9h.J8-F/4kOFW5)5J?,%A,ZDgnmDFa/mmPWrgd`:Jjd,0L<>7^cIF%dSlI*F$:Rf1(MB/3+:[`j,U)E!:k6LXW\TEs>HmCMni!MA*'9qoHl)Gm5Uruc8LgqQ%M,^VN;!EqgZA'6A!43)H)G1Apqd*`5P"=(.5`4Ka.gqn*YWdmIhAQgbRseI1J5#IUDPW##M1/C[>S<0`c*&F\OsFua8<nJS,ghMc%#W0Oq>YsKV,mZMVBUpCahurj.YRH-e&V-<Op]]lL,f,!+BGgf[-UI'$4U/.S?16bYN.!)GR*$L0!`GAMRPY1moX-KQNIJSHfm\[r%^OH->cXQ\9Kp)o&^[!p5)%0Fl"?,JZ(f;l9=u$]t;h;mZ$B\/BqN7sn,dWZt"@s>N>76Hn$Vh+l,qK'#;Ls_MVqNETWkI]BW7=.A%eDC"ggoqo$oNa`ln_VD6nY/oenJFZ0LlHs"=]uJ'i-?#%Z=tI7jJ'=+gE\ZfnVtpud#c]`XD<Q<i*\A6kQ17q='I5a9Jre)Do(<u%&[Cje5\=c\MQl$/BB@_g"KG"tZdf5N;b@pN?3kKYk?,=s%h=WLC<@7s'#@$&`Z"*ah9O6N>FoV&!>Gk)GT^R@=99ofQ3h.4g*hEq%J;.Z'$%"_.3*cc<6^b-bSI1pYdi!N+\iLp?s5NRNeBpu+q6%<H2$np],"hZ`'T2SpadBn8a@.F)#?C2&S^p\,oPfX!*o5tIFXkb>%$C>Q6](BVL=\m^qeF>IBlE8cAo\#?@-tT(?6TdOfLS;4i`*V^['^,Ak3:&Q([J=])i%oIKA9Oa$!5F/jLIW[3d*p/#<$)=`f;"rG%!oGHHDdEg'bd.rWEKOs=&5Nn[BTH??lqK#L%(rmMNsY34n.Ala!-og:%\+J/hPLJ"OH*qUSG2VB"ORFUL+rA+Bq:X.8J2A"gtCoc%3(*+F&IA+<LCUE.ktM;,7]K!!g70"oQMDLE/X-rk;f8B]GrA$'XNs>a9hF>5JkQ3rm00J8H6kis`bH6n;#<Vt%mp1[b0Wk.*MiLJ%$0I(E<4'gPeb=@2-gQObd/+/@C9f&T?T->t*?<(3f(D&Q-`8t0OK/EN.?iUjMQm;9]=OP==t60k\@QY1;PikN\XC<E$6<+'Jc8"[%gQ/Z2*N+UUMSR@tcDFT7[k$UN2=J9FTtdu#++A^Lql6B!:X&K.%cp0uH;@#uF8%R*l3"PjHXeAakj?op%>>H$WXKRu`j;p8Z.*MI%I+oFBAM+5914gOA!'^^T_^/MXL:_:G=UbP<G!I@AFf6OKi0Y)QGWPL*dZ>,P,9g$p6_,d$Hq;EV??dW`O]Y-]UkkHj=7//&$WPl,%8_djKCHJWPBmnlKpY*eQ$PSpE&)(FA>&ET:<5M30a`V5<hgk9#8O*OmC:=hT/74^ZTQ1O]jKe^I,Y;,M!b6MYW)1_ofM5RuF!kk_%[LK[ki&&pW=N((,+sLs7#2B1+Pp1m=<<j]e-87Oa&hEdZ,c%;[C>TC2:eUB$4rU(4'PRBI)X48$;b$]YkE$GmGscGD/Yr>H(ZPA(%A[H:aVn'O^16r_&aYS\?H'nNX0^h+rH>+(;q;F4an_rA?O9-Ydg8a!546A"Hh3`Ls(Hgt/Wc^Y9lb+KjaR[RA->-oHX6OYjDYcm+%=:l:cRfjGt&X;08P%sGb6['_LKdD<>j3mNeB!A6mqYp=s@[.>h2;9XcpuZY9rH39mb5PQ'r^k<!pP>36b$chXW9<(C=K3uIPnT0/%el.D5jiTaVGo?bX(cn9Kdg*QVl$7-Ch/Vd\pitZSG;h6DI-+!!m!2+LdJ<F+N:`i9MjqC[jDZ!GX(2HKKhs/FJ7N5@QW/m*ZntaR%(<Vo]"f%=:r@r%8p&bc>Lm8YT&(73?`;LCT%9cKP&skB_eaOFh.O6WPH+^gOpi]1nK^P%A%>=>*AlbZW$gGgfMa$7?@kdo9r!jD[%@#=;*I3T1D_T+`2r#Y%_3LfH73\N/Os#;[1dS`Gu`Y9$n3Za+a)'(!aC:Y/gD3?.T77bS?+,eT\m=pVqR`(_=[MT^XXNV_(h#L+R%`>o1BEgJh"UoUfVj:p=?Mh2e.jJeiZ9gu</?r`7Xc9g@Cn6DT.,Z&_@gT`<N7q!,=%0o!:SBRN]Yj+QdZArC0P,e+6i%_O_=ofVZ%+%S)uq`JYXLl/!U[=:<"RSFrdlE-lB+mlX&O3aN$NcCk9j)!T*_KWcQrH"jQq]/4\Z*j8sS\YT1e>X;3N+&W`C.I&9m?1n.1RHMB%X?<M[F$6NV$OQ,"UV_f(F"jkfh.m0G\Bc8fq!RJ<SDO#S0rTS)_>9`H419>=\K.(080jC^jBYuWPb"USCH"r@5%`c1"-9atQ9XkP%;a'uBpUY\/XuqS49Oa=(7RY0paRP6[)2'Ro*I&8Q/?2/iO5`aJI!-PWU*53mo)[E:OR^Jh`;A/4GRcIc\FSiYfi`Ep9b'U\7#sjp%"&,C10+n=)>[!!<LNt5gUj'9:4dbk%p%be";C#sIU.coqB$'_T0e#1sbD.sCPhXEFPRI)VS9X<X9FA:B3\iL=?B^e:8T-iS4dbk%%6f=kOdc\!M"-\&@Isd\H>ZF:4-aJA8\f_:6:$8r0b)!6b%DEio(:$hOBn*:aN<8nWnT8B8GB&"!e<kr6G@G[Z4enasSabV8`*L\e%LRqV?-*h]bLumZ1k%qpEUuGU6HOZd2??&K,g"0Uq\#^8V)TGS/=jd!%R3+rJ@^6jO%Hd!3GBP-A9>CT/.[eKgW/*j3Pc;)\]!>.2%21p:'Xt00NK;!;(9%kW,'&g!fbhko8A3:l]eO\;Ijl<eip)-,%+g(#lds#0h+%MN>B;U((9=F@9o#d+5lB)O(<Z2tOi$*86Nlc\D%):N33J"1N1Cs.kp\g`BOErf?[3/k;0oV6_RdU8$QGZb8=J1D^ke4A2Hp#ELDp*jgQh9PZK2t"^`H11u7n]tq(4`T>@eKl#aD^FfQ%ApO>-EI7XiVtHQlob3n:(L:;+4L2b+m)EoDdG$$l,n%14JLf/C-gJ,Qn-r+Bc6[Vr_NRZu=BChPcZ6X#o)6Vf<E7/bKt'75eb/PP%,!7<^hi)iI3+r%.!W2n0j7pZ69"l.<h*LR]qR3Jcgg&Ni\DPbd=Q"d1+!Up?K"4HdA#%i91iiqU\?MTOS7/VHKJIX3.BOS]6<hF.%r?d#e5f?UQ=D5'.j+S^XDsYO^nbRlUL5f=?YY>@u4i`L\;i!LjDUqqlf34iE/4@#ES2s*HC9YVQ`49olmk#n^)D:CL:K\_*O"1[]%RqEto*2]dd+V'2D'hQj3<K7nPY<CKkFCeTmVQ__7H$,k202sS(:0L\F-Y@XhQGLp1Y*?hB)G-tm^MS=8T)f:8"'p/CrhEA9lrlfX%g(_0<gd7s>hnBbTD_.GbPBR_&2A]u9q+p]O!&m?WGn-qkj##Zj%>ePb4dZbuXBooAh:tXa&PJV0jW7$*la4O7OOS^kR.YDBV<Qk\%$/^N<V61l2"6RNTD!1%#RX<rn[!jj)FYXJ'ZbAak:Za*L1XIrqcM-03`e+dNKnU8FS3g"M[Yd6B7;#E"FLe_<f6OO(ph&D.%9l9V%OTXnH9&rn3BpMc;:"L\N+"LjHZfJt3Yc7@RBu+VpMKAr0dY%#Spuh+U*Y0)1YC7P8V?Wb;(;WR/fd[Q.Y%sV),-`)#<qTVRAte'5%0tV$p)G'p1jZRNMO@i/WO`i5]!2VS\SOBjHa?dUIQct*GOY4,+&.u&Y"[%XGK=X"GE2eWAO!o`IEXC^G.HH0g;VuG5^!;k%,.@ZT%1GE,ECHPDmfMDZ^8+7-"Hrj05bgSX0K<<7:?Mg'+l,lG-Qa-3D@"+lqX7]L'UnGn$Y>/P)^JLdAjCmr`8"@Rc1'qTm#C6/i4$!aW%$I):?'&,6.+j,@Q!#"u[Y>=+VGrm5gE/cqLDARUa5'P*Y"RImj80!I[>6:riZ=B9K2`3$#_O%Qi"C:bqeAH?H_?gISNOG#FX*Sn$%]4rXqUHunbI/$\d>p%Y$gRd0_Y`3gp/!r,s7I9(Ydlpg,;i7B>LkRl1?[%=\D0op>f?9TbhC&%ZYc1?&%*Ae45m7dm"ORk<eCZC3%+/BssAp!VnX/ID&%jPB5!SMf+mJ._W9>!EBk%"i#4[D6I>s#/:eFT,=)-/PtD0mDl]u;RZL&<_B!DB+<,UGbK^;[MP*1WPj[&4\#%U]e1D]k%T!)EVrG(<Sp>m(^+;'Ej2(UfG`d-caT:HS&1P<3M"amkCguIsVqHU0Vn3@RiLYrN)dr3n1&EfBo"PAJWd[dc!2/DJ90W%3aC/3DbeTQh13\(BB1eH2>0MooK%BH(:U)CLW/QF5J-/q+F.%KC)oLC["GN:mkJK+%5)iM/R,b!1I4@n@&W&fCuk/^7ab&WO.4J_%1LQ5k\X_i3eEU.o0"=nSIQA$;Zr:gc(SV4_O@#R@\u*_A/+$qo!0n9cG(1"+kZ*<@-)>(]J79YuKt'be^la<k]h_m.ir8d[,1%*?%Bi"Z3I3CA*n]fUl"$`J.GDS6pZtIk?Q-%\Qh=h5%8'BPMKW#XO8$0^@*iBHM`+*1&X;MS2%_`QM#7j)%D;bZq.%oCR5CRuf%IrJ"%%5m">,JN&s2BD]d1j'bPRsPSl@VOurU^A.CbmICoV.u!ULd'p#/&,8[7"9Ro`T$i2qI1)bO:%He%V!U#'1iE>/Bo'T,+(&jYTT[i%"T52knXtMU4]AEI;u<;Y%Xr&3V@LnjpO;C0d_W0qab@;;\Q$G@9HALdd]%k/*[/'_0A"uGQiU)7iCnn7;q\K!3.8kF#nN.iU+:.F%*Jg3"!Q5iJ*5)gFTUADY$l/Ca8HLO39*lIW@UGH771#KP1K)")dUiN`6ut>,0\9Bd>^pfZkP2FOm]u!gMI'(1R[;kdc2H5JM7[[,%`N6],ATrt=4.k,G3ZQ^8D%;>d\6hq.3G3U#.4nEHb_LgANSO98OKQf>=).!j*$VR%[A:]KU$ShndnCWdLGD*2qNID`@K!S#\U=PA%Dn%V#S!tk#@"#dMM*#][pd?*-H]C'E;oH*b%W-N$<m5<7NQYbBJG1:Q:ljKUoHofXNmk)YJQtbC;D,n5^mEH-$^MmjG\)8,Bt^TD%N<t9.=12<[C<ZKuR/MILcRZSt7J&Z\e$["THXa%qWB\[f7$EKL<Z>m%/Q:M_o8kQ!c',[8l@*3i%Q;;D@i1q7,Rfb61-]94j.u'5%C!5\_oB>SVYYFF?r>W#_\jYOp"EEXp!7COMp."#LU,\CD`sR-4K2`6i@AGES)gd4Ocf\+p7LI63!L-"[XP2tlq4N(X[gqcn1jqj<%j?nM^l"1dNe/U:sC@t%RB0ipf=/.9k#"@T2!;?+3dcB6UYBQA<h2&/K$!j'$l1sEn)QACePptfqZc@)8d:UkoZ-Z`-FFV;=AYT9l%`$Hk;#O.fXfEr,E_=YI3.JprrIfAGus7l<ZYJ,JWmDG:JIK&CgQd=R'7?$0L+3._@?[hn7]0C`8m@2:CJ,&.2:rY$WnIIhYj_oV@%n:*?s"s*~>%AI9_PrivateDataEnd